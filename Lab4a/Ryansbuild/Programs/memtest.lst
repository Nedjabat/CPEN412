680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 25 Jan 2024      Time: 00:40:19          Source: C:\M68K\PROGRAMS\MEMTEST.SRC

                       1          section   code
                       2   ; for initial stack use $08040000 if your system uses SRAM for main memory (top of 256kbyte SRAM space)
                       3   ; When your system is converted to use DRAM for main memory set this constant to $0C000000 (top of 64MByte DRAM space
                       4   
          0804 0000    5   StackPointerVal     equ $08040000      when using sram
                       6   ;StackPointerVal     equ $0C000000      when using dram
                       7   
                       8   ; define RamVectorTable as $0803000 if your system uses SRAM for main memory
                       9   ; When your system is converted to use DRAM for main memory define RamVectorTable constant as $0B000000 (top of 64MByte DRAM space)
                      10   
          0803 0000   11   RamVectorTable      equ $08030000      when using sram
                      12   ;RamVectorTable      equ $0B000000      when using dram
                      13   
                      14   
                      15   
                      16   ; CSTART.ASM  -  C startup-code for Debug Monitor
00000000              17                   align
                      18   
00000000              19                   org $00000000          ;start of rom based vector table, 68k hard wired to expect this at $0
                      20   
00000000  0804 0000   21   InitialSP       dc.l StackPointerVal   ;initial supervisor state stack pointer(stack decrements first before being used)
00000004  0000 0400   22   InitialPC       dc.l start             ;address of 1st instruction of program after a reset
00000008  0000 0802   23   BusError        dc.l E_BErro           ;bus error - stop program
0000000C  0000 0814   24   AddressError    dc.l E_AErro           ;address error - stop program
00000010  0000 0826   25   IllegalInstr    dc.l E_IInst           ;illegal instruction - stop program
00000014  0000 0838   26   DividebyZero    dc.l E_DZero           ;divide by zero error - stop program
00000018  0000 084A   27   Check           dc.l E_Check           ;Check instruction - stop program
0000001C  0000 085C   28   TrapV           dc.l E_Trapv           ;Trapv instruction - stop program
00000020  0000 086E   29   Privilege       dc.l E_Priv            ;privilige violation - stop program
00000024  0000 0880   30   Trace           dc.l E_Trace           ;stop on trace
00000028  0000 0892   31   Line1010emul    dc.l E_1010            ;1010 instructions stop
0000002C  0000 08A4   32   Line1111emul    dc.l E_1111            ;1111 instructions stop
00000030  0000 08B6   33   Unassigned1     dc.l E_Unnas1           ;unassigned vector
00000034  0000 08B6   34   Unassigned2     dc.l E_Unnas2           ;unassigned vector
00000038  0000 08B6   35   Unassigned3     dc.l E_Unnas3           ;unassigned vector
0000003C  0000 08B6   36   Uninit_IRQ      dc.l E_UnitI           ;uninitialised interrupt
00000040  0000 08B6   37   Unassigned4     dc.l E_Unnas4           ;unassigned vector
00000044  0000 08B6   38   Unassigned5     dc.l E_Unnas5           ;unassigned vector
00000048  0000 08B6   39   Unassigned6     dc.l E_Unnas6           ;unassigned vector
0000004C  0000 08B6   40   Unassigned7     dc.l E_Unnas7           ;unassigned vector
00000050  0000 08B6   41   Unassigned8     dc.l E_Unnas8           ;unassigned vector
00000054  0000 08B6   42   Unassigned9     dc.l E_Unnas9           ;unassigned vector
00000058  0000 08B6   43   Unassigned10    dc.l E_Unnas10           ;unassigned vector
0000005C  0000 08B6   44   Unassigned11    dc.l E_Unnas11           ;unassigned vector
00000060  0000 08B6   45   SpuriousIRQ     dc.l E_Spuri           ;stop on spurious irq
                      46   *
                      47   *
00000064  0000 049A   48   Level1IRQ       dc.l Level1RamISR
00000068  0000 04AC   49   Level2IRQ       dc.l Level2RamISR
0000006C  0000 04BE   50   Level3IRQ       dc.l Level3RamISR
00000070  0000 04D0   51   Level4IRQ       dc.l Level4RamISR
00000074  0000 04E2   52   Level5IRQ       dc.l Level5RamISR
00000078  0000 05EC   53   Level6IRQ       dc.l Level6RamISR
0000007C  0000 05FE   54   Level7IRQ       dc.l Level7RamISR
                      55   *
                      56   *
00000080  0000 0610   57   Trap0           dc.l Trap0RamISR        ; User installed trap handler
00000084  0000 0622   58   Trap1           dc.l Trap1RamISR        ; User installed trap handler
00000088  0000 0634   59   Trap2           dc.l Trap2RamISR        ; User installed trap handler
0000008C  0000 0646   60   Trap3           dc.l Trap3RamISR        ; User installed trap handler
00000090  0000 0658   61   Trap4           dc.l Trap4RamISR        ; User installed trap handler
00000094  0000 066A   62   Trap5           dc.l Trap5RamISR        ; User installed trap handler
00000098  0000 067C   63   Trap6           dc.l Trap6RamISR        ; User installed trap handler
0000009C  0000 068E   64   Trap7           dc.l Trap7RamISR        ; User installed trap handler
000000A0  0000 06A0   65   Trap8           dc.l Trap8RamISR        ; User installed trap handler
000000A4  0000 06B2   66   Trap9           dc.l Trap9RamISR        ; User installed trap handler
000000A8  0000 06C4   67   Trap10          dc.l Trap10RamISR       ; User installed trap handler
000000AC  0000 06D6   68   Trap11          dc.l Trap11RamISR       ; User installed trap handler
000000B0  0000 06E8   69   Trap12          dc.l Trap12RamISR       ; User installed trap handler
000000B4  0000 06FA   70   Trap13          dc.l Trap13RamISR       ; User installed trap handler
000000B8  0000 070C   71   Trap14          dc.l Trap14RamISR       ; User installed trap handler
000000BC  0000 07FC   72   Trap15          dc.l Trap15RamISR       ; User installed trap handler
                      73   
                      74   *
                      75   * Other vectors 64-255 are users vectors for autovectored IO device (not implemented in TG68)
                      76   *
                      77   
00000400              78                   org       $00000400
                      79   
00000400  46FC 2700   80   start:          move.w     #$2700,SR             set interrupts to disable until later
                      81   
                      82   *************************************************************************************
                      83   ** add some 68000 instruction to read and write to memory, IO etc. This doesn't do anything
                      84   ** important, it just creates read and write bus cycles to specific addresses which
                      85   ** help with debugging hardware in Quartus simulations
                      86   **************************************************************************************
                      87   
                      88                   ; perform some dummy read/write of 32 bit values to memory to see waveforms during a simulation
                      89   
00000404  23FC 1122   90                   move.l     #$11223344,$08060000 write 32 bits, to memory
00000408  3344 0806 
0000040C  0000      
0000040E  2039 0806   91                   move.l     $08060000,d0         read 32 bits back
00000412  0000      
00000414  13FC 0000   92                   move.b     #$00,$00400000         write to the output ports
00000418  0040 0000 
0000041C  13FC 0000   93                   move.b     #$00,$00400002         write to the output ports
00000420  0040 0002 
00000424  13FC 0000   94                   move.b     #$00,$00400004         write to the output ports
00000428  0040 0004 
0000042C  13FC 0000   95                   move.b     #$00,$00400006         write to the output ports
00000430  0040 0006 
00000434  13FC 0000   96                   move.b     #$00,$00400008         write to the output ports
00000438  0040 0008 
0000043C  13FC 0000   97                   move.b     #$00,$00400010         write to the hex display ports
00000440  0040 0010 
00000444  13FC 0000   98                   move.b     #$00,$00400012         write to the hex display ports
00000448  0040 0012 
0000044C  13FC 0000   99                   move.b     #$00,$00400014         write to the hex display ports
00000450  0040 0014 
00000454  13FC 0000  100                   move.b     #0,$00400020         write to the LCD
00000458  0040 0020 
0000045C  13FC 0000  101                   move.b     #0,$00400022         write to the LCD
00000460  0040 0022 
00000464  13FC 0000  102                   move.b     #0,$00400030         write to the Timer1 Data
00000468  0040 0030 
0000046C  13FC 0000  103                   move.b     #0,$00400032         write to the Timer1 Control
00000470  0040 0032 
                     104   
                     105                   ; some important initialisation do not modify
00000474  23FC FFFF  106                   move.l    #-1,__ungetbuf  ; unget-buffer for keyboard input
00000478  FFFF 0803 
0000047C  00C0      
0000047E  23FC 0000  107                   move.l    #0,__allocp     ; pointer to allocated memory for malloc-function
00000482  0000 0803 
00000486  00C4      
00000488  23FC 0803  108                   move.l    #heap,__heap    ; pointer to free memory
0000048C  0114 0803 
00000490  00C4      
                     109   
                     110   
00000492  4EB9 0000  111   mainloop        jsr       _main
00000496  0932      
00000498  60F8       112                   bra       mainloop
                     113   
                     114   *********************************************************************************************************
                     115   * Code to call Ram Based Interrupt handler and other exeception handler code
                     116   *********************************************************************************************************
0000049A  48E7 FFFE  117   Level1RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000049E  2079 0803  118                   move.l    VL1IRQ,a0               get ram based address into a0
000004A2  0064      
000004A4  4E90       119                   jsr       0(a0)                   jump to the subroutine that is the interrupt handler, using ram based address
000004A6  4CDF 7FFF  120                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000004AA  4E73       121                   rte
000004AC  48E7 FFFE  122   Level2RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000004B0  2079 0803  123                   move.l    VL2IRQ,a0               get ram based address into a0
000004B4  0068      
000004B6  4E90       124                   jsr       0(a0)                   jump to the subroutine that is the interrupt handler, using ram based address
000004B8  4CDF 7FFF  125                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000004BC  4E73       126                   rte
000004BE  48E7 FFFE  127   Level3RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000004C2  2079 0803  128                   move.l    VL3IRQ,a0               get ram based address into a0
000004C6  006C      
000004C8  4E90       129                   jsr       0(a0)                   jump to the subroutine that is the interrupt handler, using ram based address
000004CA  4CDF 7FFF  130                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000004CE  4E73       131                   rte
000004D0  48E7 FFFE  132   Level4RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000004D4  2079 0803  133                   move.l    VL4IRQ,a0               get ram based address into a0
000004D8  0070      
000004DA  4E90       134                   jsr       0(a0)                   jump to the subroutine that is the interrupt handler, using ram based address
000004DC  4CDF 7FFF  135                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000004E0  4E73       136                   rte
                     137   
                     138   * Trace trap Handler
                     139   
                     140   Level5RamISR
                     141   *
                     142   **         Copy 68000 registers from debug monitor Variables,
                     143   *
                     144   *
                     145                   move.l    #1,_Trace              switch on Trace Mode
********  **** ****  Error: Undefined or illegal symbol
000004EC  13FC 0000  146                   move.b    #$0,$0040000A          turn off a trace exception so we don't when generate a trace when disassembling instruction in the register dump (disassembling causes access to use program)
000004F0  0040 000A 
                     147                   move.w    (sp)+,_SR              get at the users status register pointed to by stack pointer and copy
********  **** ****  Error: Undefined or illegal symbol
                     148                   move.l    (sp)+,_PC              get at the users program counter and copy
********  **** ****  Error: Undefined or illegal symbol
                     149   *
                     150                   move.l    SP,_SSP                copy system stack pointer to debug monitor variable
********  **** ****  Error: Undefined or illegal symbol
                     151                   move.l    d0,_d0
********  **** ****  Error: Undefined or illegal symbol
                     152                   move.l    d1,_d1
********  **** ****  Error: Undefined or illegal symbol
                     153                   move.l    d2,_d2
********  **** ****  Error: Undefined or illegal symbol
                     154                   move.l    d3,_d3
********  **** ****  Error: Undefined or illegal symbol
                     155                   move.l    d4,_d4
********  **** ****  Error: Undefined or illegal symbol
                     156                   move.l    d5,_d5
********  **** ****  Error: Undefined or illegal symbol
                     157                   move.l    d6,_d6
********  **** ****  Error: Undefined or illegal symbol
                     158                   move.l    d7,_d7
********  **** ****  Error: Undefined or illegal symbol
                     159   *
                     160                   move.l    a0,_a0
********  **** ****  Error: Undefined or illegal symbol
                     161                   move.l    a1,_a1
********  **** ****  Error: Undefined or illegal symbol
                     162                   move.l    a2,_a2
********  **** ****  Error: Undefined or illegal symbol
                     163                   move.l    a3,_a3
********  **** ****  Error: Undefined or illegal symbol
                     164                   move.l    a4,_a4
********  **** ****  Error: Undefined or illegal symbol
                     165                   move.l    a5,_a5
********  **** ****  Error: Undefined or illegal symbol
                     166                   move.l    a6,_a6
********  **** ****  Error: Undefined or illegal symbol
00000560  4E68       167                   move.l    usp,a0
                     168                   move.l    a0,_USP
********  **** ****  Error: Undefined or illegal symbol
                     169   *
00000568  2079 0803  170                   move.l    VL5IRQ,a0              get ram based address into a0, trace exception for next instruction will be generated in Menu SPACE command
0000056C  0074      
0000056E  4E90       171                   jsr       0(a0)                  jump to the subroutine that is the trap handler, using ram based address
                     172   
                     173   ** After trace, reload 68000 registers with new values before continuing
                     174   
                     175                   move.l   _d0,d0
********  **** ****  Error: Undefined or illegal symbol
                     176                   move.l   _d1,d1
********  **** ****  Error: Undefined or illegal symbol
                     177                   move.l   _d2,d2
********  **** ****  Error: Undefined or illegal symbol
                     178                   move.l   _d3,d3
********  **** ****  Error: Undefined or illegal symbol
                     179                   move.l   _d4,d4
********  **** ****  Error: Undefined or illegal symbol
                     180                   move.l   _d5,d5
********  **** ****  Error: Undefined or illegal symbol
                     181                   move.l   _d6,d6
********  **** ****  Error: Undefined or illegal symbol
                     182                   move.l   _d7,d7
********  **** ****  Error: Undefined or illegal symbol
                     183   
                     184                   move.l   _USP,a0
********  **** ****  Error: Undefined or illegal symbol
000005A6  4E60       185                   move.l   a0,USP                     load user stack pointer
                     186                   move.l   _a0,a0
********  **** ****  Error: Undefined or illegal symbol
                     187                   move.l   _a1,a1
********  **** ****  Error: Undefined or illegal symbol
                     188                   move.l   _a2,a2
********  **** ****  Error: Undefined or illegal symbol
                     189                   move.l   _a3,a3
********  **** ****  Error: Undefined or illegal symbol
                     190                   move.l   _a4,a4
********  **** ****  Error: Undefined or illegal symbol
                     191                   move.l   _a5,a5
********  **** ****  Error: Undefined or illegal symbol
                     192                   move.l   _a6,a6
********  **** ****  Error: Undefined or illegal symbol
                     193   
                     194                   move.l   _SSP,sp
********  **** ****  Error: Undefined or illegal symbol
                     195                   move.l   _PC,-(sp)
********  **** ****  Error: Undefined or illegal symbol
                     196                   move.w   _SR,-(sp)
********  **** ****  Error: Undefined or illegal symbol
000005E4  11F8 0074  197                   move.b    $00000074,$0	          read trace exception vector after accessing disassembly to reset the trace request causes by disassembling program above
000005E8  0000      
000005EA  4E73       198                   rte
                     199   
                     200   * address trap handler
                     201   
000005EC  48E7 FFFE  202   Level6RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000005F0  2079 0803  203                   move.l    VL6IRQ,a0               get ram based address into a0
000005F4  0078      
000005F6  4E90       204                   jsr       0(a0)                   jump to the subroutine that is the interrupt handler, using ram based address
000005F8  4CDF 7FFF  205                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000005FC  4E73       206                   rte
                     207   
000005FE  48E7 FFFE  208   Level7RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000602  2079 0803  209                   move.l    VL7IRQ,a0               get ram based address into a0
00000606  007C      
00000608  4E90       210                   jsr       0(a0)                   jump to the subroutine that is the interrupt handler, using ram based address
0000060A  4CDF 7FFF  211                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000060E  4E73       212                   rte
                     213   
                     214   
                     215   ********************************************************************************************************
                     216   * Ram based Trap handler and other exeception handler code
                     217   *********************************************************************************************************
                     218   
00000610  48E7 FFFE  219   Trap0RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000614  2079 0803  220                   move.l    VTrap0,a0                get ram based address into a0
00000618  0080      
0000061A  4E90       221                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000061C  4CDF 7FFF  222                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000620  4E73       223                   rte
                     224   
00000622  48E7 FFFE  225   Trap1RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000626  2079 0803  226                   move.l    VTrap1,a0                get ram based address into a0
0000062A  0084      
0000062C  4E90       227                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000062E  4CDF 7FFF  228                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000632  4E73       229                   rte
                     230   
00000634  48E7 FFFE  231   Trap2RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000638  2079 0803  232                   move.l    VTrap2,a0                get ram based address into a0
0000063C  0088      
0000063E  4E90       233                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000640  4CDF 7FFF  234                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000644  4E73       235                   rte
                     236   
00000646  48E7 FFFE  237   Trap3RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000064A  2079 0803  238                   move.l    VTrap3,a0                get ram based address into a0
0000064E  008C      
00000650  4E90       239                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000652  4CDF 7FFF  240                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000656  4E73       241                   rte
                     242   
00000658  48E7 FFFE  243   Trap4RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000065C  2079 0803  244                   move.l    VTrap4,a0                get ram based address into a0
00000660  0090      
00000662  4E90       245                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000664  4CDF 7FFF  246                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000668  4E73       247                   rte
                     248   
0000066A  48E7 FFFE  249   Trap5RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000066E  2079 0803  250                   move.l    VTrap5,a0                get ram based address into a0
00000672  0094      
00000674  4E90       251                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000676  4CDF 7FFF  252                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000067A  4E73       253                   rte
                     254   
0000067C  48E7 FFFE  255   Trap6RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000680  2079 0803  256                   move.l    VTrap6,a0                get ram based address into a0
00000684  0098      
00000686  4E90       257                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000688  4CDF 7FFF  258                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000068C  4E73       259                   rte
                     260   
0000068E  48E7 FFFE  261   Trap7RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000692  2079 0803  262                   move.l    VTrap7,a0                get ram based address into a0
00000696  009C      
00000698  4E90       263                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000069A  4CDF 7FFF  264                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000069E  4E73       265                   rte
                     266   
000006A0  48E7 FFFE  267   Trap8RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000006A4  2079 0803  268                   move.l    VTrap8,a0                get ram based address into a0
000006A8  00A0      
000006AA  4E90       269                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
000006AC  4CDF 7FFF  270                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000006B0  4E73       271                   rte
                     272   
000006B2  48E7 FFFE  273   Trap9RamISR     movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000006B6  2079 0803  274                   move.l    VTrap9,a0                get ram based address into a0
000006BA  00A4      
000006BC  4E90       275                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
000006BE  4CDF 7FFF  276                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000006C2  4E73       277                   rte
                     278   
000006C4  48E7 FFFE  279   Trap10RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000006C8  2079 0803  280                   move.l    VTrap10,a0                get ram based address into a0
000006CC  00A8      
000006CE  4E90       281                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
000006D0  4CDF 7FFF  282                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000006D4  4E73       283                   rte
                     284   
000006D6  48E7 FFFE  285   Trap11RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000006DA  2079 0803  286                   move.l    VTrap11,a0                get ram based address into a0
000006DE  00AC      
000006E0  4E90       287                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
000006E2  4CDF 7FFF  288                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000006E6  4E73       289                   rte
                     290   
000006E8  48E7 FFFE  291   Trap12RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000006EC  2079 0803  292                   move.l    VTrap12,a0                get ram based address into a0
000006F0  00B0      
000006F2  4E90       293                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
000006F4  4CDF 7FFF  294                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000006F8  4E73       295                   rte
                     296   
000006FA  48E7 FFFE  297   Trap13RamISR    movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000006FE  2079 0803  298                   move.l    VTrap13,a0                get ram based address into a0
00000702  00B4      
00000704  4E90       299                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000706  4CDF 7FFF  300                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000070A  4E73       301                   rte
                     302   
                     303   Trap14RamISR    ;Break Point Handler
                     304   *
                     305   **         Copy 68000 registers from debug monitor Variables
                     306   *
                     307                   move.l    #1,_Trace      switch on Trace Mode
********  **** ****  Error: Undefined or illegal symbol
                     308                   move.w    (sp)+,_SR       get at the users status register pointed to by stack pointer and copy
********  **** ****  Error: Undefined or illegal symbol
                     309                   move.l    (sp)+,_PC      get at the users program counter and copy
********  **** ****  Error: Undefined or illegal symbol
                     310   *
                     311                   move.l    d0,_d0
********  **** ****  Error: Undefined or illegal symbol
                     312                   move.l    d1,_d1
********  **** ****  Error: Undefined or illegal symbol
                     313                   move.l    d2,_d2
********  **** ****  Error: Undefined or illegal symbol
                     314                   move.l    d3,_d3
********  **** ****  Error: Undefined or illegal symbol
                     315                   move.l    d4,_d4
********  **** ****  Error: Undefined or illegal symbol
                     316                   move.l    d5,_d5
********  **** ****  Error: Undefined or illegal symbol
                     317                   move.l    d6,_d6
********  **** ****  Error: Undefined or illegal symbol
                     318                   move.l    d7,_d7
********  **** ****  Error: Undefined or illegal symbol
                     319   *
                     320                   move.l    a0,_a0
********  **** ****  Error: Undefined or illegal symbol
                     321                   move.l    a1,_a1
********  **** ****  Error: Undefined or illegal symbol
                     322                   move.l    a2,_a2
********  **** ****  Error: Undefined or illegal symbol
                     323                   move.l    a3,_a3
********  **** ****  Error: Undefined or illegal symbol
                     324                   move.l    a4,_a4
********  **** ****  Error: Undefined or illegal symbol
                     325                   move.l    a5,_a5
********  **** ****  Error: Undefined or illegal symbol
                     326                   move.l    a6,_a6
********  **** ****  Error: Undefined or illegal symbol
0000077C  4E68       327                   move.l    USP,a0
                     328                   move.l    a0,_USP
********  **** ****  Error: Undefined or illegal symbol
                     329   *
00000784  2079 0803  330                   move.l    VTrap14,a0             get ram based address into a0
00000788  00B8      
0000078A  4E90       331                   jsr       0(a0)                  jump to the subroutine that is the trap handler, using ram based address
                     332   
                     333   ** After breakpoint reload 68000 registers with new values before continuing
                     334   
                     335   *                move.b    #$ff,$0040000A     generate a trace exception for the next instruction
                     336                   move.l   _d0,d0
********  **** ****  Error: Undefined or illegal symbol
                     337                   move.l   _d1,d1
********  **** ****  Error: Undefined or illegal symbol
                     338                   move.l   _d2,d2
********  **** ****  Error: Undefined or illegal symbol
                     339                   move.l   _d3,d3
********  **** ****  Error: Undefined or illegal symbol
                     340                   move.l   _d4,d4
********  **** ****  Error: Undefined or illegal symbol
                     341                   move.l   _d5,d5
********  **** ****  Error: Undefined or illegal symbol
                     342                   move.l   _d6,d6
********  **** ****  Error: Undefined or illegal symbol
                     343                   move.l   _d7,d7
********  **** ****  Error: Undefined or illegal symbol
                     344   
                     345                   move.l   _USP,a0
********  **** ****  Error: Undefined or illegal symbol
000007C2  4E60       346                   move.l   a0,USP        load user stack pointer A7
                     347                   move.l   _a0,a0
********  **** ****  Error: Undefined or illegal symbol
                     348                   move.l   _a1,a1
********  **** ****  Error: Undefined or illegal symbol
                     349                   move.l   _a2,a2
********  **** ****  Error: Undefined or illegal symbol
                     350                   move.l   _a3,a3
********  **** ****  Error: Undefined or illegal symbol
                     351                   move.l   _a4,a4
********  **** ****  Error: Undefined or illegal symbol
                     352                   move.l   _a5,a5
********  **** ****  Error: Undefined or illegal symbol
                     353                   move.l   _a6,a6
********  **** ****  Error: Undefined or illegal symbol
                     354   
                     355                   move.l   _PC,-(sp)
********  **** ****  Error: Undefined or illegal symbol
                     356                   move.w   _SR,-(sp)
********  **** ****  Error: Undefined or illegal symbol
000007FA  4E73       357                   rte
                     358   
                     359   Trap15RamISR    jmp     _CallDebugMonitor
********  **** ****  Error: Undefined or illegal symbol
                     360   *                movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
                     361   *                move.l    VTrap15,a0                get ram based address into a0
                     362   *                jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
                     363   *                movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
                     364   *                rte
                     365   
                     366   *********************************************************************************************************
                     367   *Default exception handler for everything without a specific handler
                     368   *********************************************************************************************************
                     369   
                     370   *
                     371   **              Jump here for each unhandled exception
                     372   **              If you need to, MAKE SURE YOU SAVE ALL IMPORTANT REGISTERS AND RESTORE THEM BEFORE RETURNING (IF APPROPRIATE)
                     373   *
                     374   
00000802  48E7 FFFE  375   E_BErro         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000806  2079 0803  376                   move.l    VBusError,a0            get ram based address into a0
0000080A  0008      
0000080C  4E90       377                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000080E  4CDF 7FFF  378                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000812  4E73       379                   rte
00000814  48E7 FFFE  380   E_AErro         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000818  2079 0803  381                   move.l    VAddressError,a0        get ram based address into a0
0000081C  000C      
0000081E  4E90       382                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000820  4CDF 7FFF  383                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000824  4E73       384                   rte
00000826  48E7 FFFE  385   E_IInst         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000082A  2079 0803  386                   move.l    VIllegalInstr,a0        get ram based address into a0
0000082E  0010      
00000830  4E90       387                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000832  4CDF 7FFF  388                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000836  4E73       389                   rte
00000838  48E7 FFFE  390   E_DZero         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000083C  2079 0803  391                   move.l    VDividebyZero,a0        get ram based address into a0
00000840  0014      
00000842  4E90       392                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000844  4CDF 7FFF  393                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000848  4E73       394                   rte
0000084A  48E7 FFFE  395   E_Check         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
0000084E  2079 0803  396                   move.l    VCheck,a0               get ram based address into a0
00000852  0018      
00000854  4E90       397                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000856  4CDF 7FFF  398                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000085A  4E73       399                   rte
0000085C  48E7 FFFE  400   E_Trapv         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000860  2079 0803  401                   move.l    VTrapV,a0               get ram based address into a0
00000864  001C      
00000866  4E90       402                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
00000868  4CDF 7FFF  403                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000086C  4E73       404                   rte
0000086E  48E7 FFFE  405   E_Priv          movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000872  2079 0803  406                   move.l    VPrivilege,a0           get ram based address into a0
00000876  0020      
00000878  4E90       407                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000087A  4CDF 7FFF  408                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
0000087E  4E73       409                   rte
00000880  48E7 FFFE  410   E_Trace         movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000884  2079 0803  411                   move.l    VTrace,a0               get ram based address into a0
00000888  0024      
0000088A  4E90       412                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000088C  4CDF 7FFF  413                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
00000890  4E73       414                   rte
00000892  48E7 FFFE  415   E_1010          movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
00000896  2079 0803  416                   move.l    VLine1010emul,a0        get ram based address into a0
0000089A  0028      
0000089C  4E90       417                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
0000089E  4CDF 7FFF  418                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000008A2  4E73       419                   rte
000008A4  48E7 FFFE  420   E_1111          movem.l   d0-d7/a0-a6,-(SP)       save everything not automatically saved
000008A8  2079 0803  421                   move.l    VLine1111emul,a0        get ram based address into a0
000008AC  002C      
000008AE  4E90       422                   jsr       0(a0)                   jump to the subroutine that is the trap handler, using ram based address
000008B0  4CDF 7FFF  423                   movem.l   (SP)+,d0-d7/a0-a6       pull eveything off the stack
000008B4  4E73       424                   rte
                     425   E_Unnas1
                     426   E_Unnas2
                     427   E_Unnas3
                     428   E_UnitI
                     429   E_Unnas4
                     430   E_Unnas5
                     431   E_Unnas6
                     432   E_Unnas7
                     433   E_Unnas8
                     434   E_Unnas9
                     435   E_Unnas10
                     436   E_Unnas11
                     437   E_Spuri
000008B6  60FE       438   _stop            bra _stop                         stop
                     439   ***************************************************************************************************
                     440   * Go() function in debug monitor
                     441   ***************************************************************************************************
                     442   _go
                     443                   move.l   _SSP,a7        load system stack pointer (remember we are in supervisor mode when running this so a7 is the System stack pointer)
********  **** ****  Error: Undefined or illegal symbol
                     444                   move.l   _PC,-(sp)      copy debug monitor PC variable to the stack
********  **** ****  Error: Undefined or illegal symbol
                     445                   move.w   _SR,-(sp)      copy debug monitor status reg to the stack
********  **** ****  Error: Undefined or illegal symbol
                     446   
000008CA  1038 0078  447                   move.b   $00000078,d0  remove any spurious address exception arising after power on
                     448                   move.l   _d0,d0
********  **** ****  Error: Undefined or illegal symbol
                     449                   move.l   _d1,d1
********  **** ****  Error: Undefined or illegal symbol
                     450                   move.l   _d2,d2
********  **** ****  Error: Undefined or illegal symbol
                     451                   move.l   _d3,d3
********  **** ****  Error: Undefined or illegal symbol
                     452                   move.l   _d4,d4
********  **** ****  Error: Undefined or illegal symbol
                     453                   move.l   _d5,d5
********  **** ****  Error: Undefined or illegal symbol
                     454                   move.l   _d6,d6
********  **** ****  Error: Undefined or illegal symbol
                     455                   move.l   _d7,d7
********  **** ****  Error: Undefined or illegal symbol
                     456   
                     457                   move.l   _USP,a0
********  **** ****  Error: Undefined or illegal symbol
00000904  4E60       458                   move.l   a0,USP        load user stack pointer (remember we are in supervisor mode when running this, so a7 is the System stack pointer)
                     459                   move.l   _a0,a0
********  **** ****  Error: Undefined or illegal symbol
                     460                   move.l   _a1,a1
********  **** ****  Error: Undefined or illegal symbol
                     461                   move.l   _a2,a2
********  **** ****  Error: Undefined or illegal symbol
                     462                   move.l   _a3,a3
********  **** ****  Error: Undefined or illegal symbol
                     463                   move.l   _a4,a4
********  **** ****  Error: Undefined or illegal symbol
                     464                   move.l   _a5,a5
********  **** ****  Error: Undefined or illegal symbol
                     465                   move.l   _a6,a6
********  **** ****  Error: Undefined or illegal symbol
00000930  4E73       466                   rte                    load the status reg and PC from the stack and commence running
                     467                                          *used to be rte but this didn't load the status byte
                     468   
                     469   ; C:\M68K\PARTB-MYPROGRAM\MEMTEST.C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                     470   ; #include <stdio.h>
                     471   ; void main(void)
                     472   ; {
                     473   _main:
00000932  4E56 FFF0  474          link      A6,#-16
00000936  48E7 3E30  475          movem.l   D2/D3/D4/D5/D6/A2/A3,-(A7)
0000093A  45F9 0000  476          lea       _printf.L,A2
0000093E  0E78      
00000940  47F9 0000  477          lea       _scanf.L,A3
00000944  0D6A      
                     478   ; unsigned int test_option = 0;
00000946  42AE FFF0  479          clr.l     -16(A6)
                     480   ; unsigned int bit_num = 0;
0000094A  4286       481          clr.l     D6
                     482   ; unsigned int test_pattern = 0;
0000094C  4283       483          clr.l     D3
                     484   ; unsigned int select_pattern = 0;
0000094E  42AE FFF4  485          clr.l     -12(A6)
                     486   ; unsigned int write_data = 0;
00000952  4285       487          clr.l     D5
                     488   ; unsigned int start_addr = 0;
00000954  42AE FFF8  489          clr.l     -8(A6)
                     490   ; unsigned int end_addr = 0;
00000958  42AE FFFC  491          clr.l     -4(A6)
                     492   ; unsigned int *addr_point = NULL;
0000095C  4282       493          clr.l     D2
                     494   ; unsigned int counter = 10000;
0000095E  283C 0000  495          move.l    #10000,D4
00000962  2710      
                     496   ; //prompting user for test option BYTES, WORDS, or LONG WORDS
                     497   ; while(!test_option){
                     498   main_1:
00000964  4AAE FFF0  499          tst.l     -16(A6)
00000968  6600 0054  500          bne       main_3
                     501   ; printf("\r\nPlease enter a number to choose one of the following test options:"
0000096C  4879 0000  502          pea       @memtest_1.L
00000970  21C6      
00000972  4E92       503          jsr       (A2)
00000974  584F       504          addq.w    #4,A7
                     505   ; "\r\n1 - Bytes"
                     506   ; "\r\n2 - Words"
                     507   ; "\r\n3 - Long Words\r\n");
                     508   ; scanf("%d", &test_option);
00000976  486E FFF0  509          pea       -16(A6)
0000097A  4879 0000  510          pea       @memtest_2.L
0000097E  2234      
00000980  4E93       511          jsr       (A3)
00000982  504F       512          addq.w    #8,A7
                     513   ; if((test_option != 1 && test_option != 2 && test_option != 3) || test_option == 0){
00000984  202E FFF0  514          move.l    -16(A6),D0
00000988  0C80 0000  515          cmp.l     #1,D0
0000098C  0001      
0000098E  6718       516          beq.s     main_7
00000990  202E FFF0  517          move.l    -16(A6),D0
00000994  0C80 0000  518          cmp.l     #2,D0
00000998  0002      
0000099A  670C       519          beq.s     main_7
0000099C  202E FFF0  520          move.l    -16(A6),D0
000009A0  0C80 0000  521          cmp.l     #3,D0
000009A4  0003      
000009A6  6606       522          bne.s     main_6
                     523   main_7:
000009A8  202E FFF0  524          move.l    -16(A6),D0
000009AC  660E       525          bne.s     main_4
                     526   main_6:
                     527   ; printf("\r\nInvalid Selection\r\n");
000009AE  4879 0000  528          pea       @memtest_3.L
000009B2  2238      
000009B4  4E92       529          jsr       (A2)
000009B6  584F       530          addq.w    #4,A7
                     531   ; test_option = 0;
000009B8  42AE FFF0  532          clr.l     -16(A6)
                     533   main_4:
000009BC  60A6       534          bra       main_1
                     535   main_3:
                     536   ; }
                     537   ; }
                     538   ; //assigning bit_num based on test_option
                     539   ; switch(test_option){
000009BE  202E FFF0  540          move.l    -16(A6),D0
000009C2  0C80 0000  541          cmp.l     #2,D0
000009C6  0002      
000009C8  6726       542          beq.s     main_11
000009CA  620C       543          bhi.s     main_14
000009CC  0C80 0000  544          cmp.l     #1,D0
000009D0  0001      
000009D2  670E       545          beq.s     main_10
000009D4  6000 0036  546          bra       main_8
                     547   main_14:
000009D8  0C80 0000  548          cmp.l     #3,D0
000009DC  0003      
000009DE  671E       549          beq.s     main_12
000009E0  602A       550          bra.s     main_8
                     551   main_10:
                     552   ; case 1:
                     553   ; printf("\r\nYou have selected test option BYTES\r\n");
000009E2  4879 0000  554          pea       @memtest_4.L
000009E6  224E      
000009E8  4E92       555          jsr       (A2)
000009EA  584F       556          addq.w    #4,A7
                     557   ; bit_num = 8;
000009EC  7C08       558          moveq     #8,D6
                     559   ; break;
000009EE  6026       560          bra.s     main_9
                     561   main_11:
                     562   ; case 2:
                     563   ; printf("\r\nYou have selected test option WORDS\r\n");
000009F0  4879 0000  564          pea       @memtest_5.L
000009F4  2276      
000009F6  4E92       565          jsr       (A2)
000009F8  584F       566          addq.w    #4,A7
                     567   ; bit_num = 16;
000009FA  7C10       568          moveq     #16,D6
                     569   ; break;
000009FC  6018       570          bra.s     main_9
                     571   main_12:
                     572   ; case 3:
                     573   ; printf("\r\nYou have selected test option LONG WORDS\r\n");
000009FE  4879 0000  574          pea       @memtest_6.L
00000A02  229E      
00000A04  4E92       575          jsr       (A2)
00000A06  584F       576          addq.w    #4,A7
                     577   ; bit_num = 32;
00000A08  7C20       578          moveq     #32,D6
                     579   ; break;
00000A0A  600A       580          bra.s     main_9
                     581   main_8:
                     582   ; default:
                     583   ; printf("\r\nException - invalid test option\r\n");
00000A0C  4879 0000  584          pea       @memtest_7.L
00000A10  22CC      
00000A12  4E92       585          jsr       (A2)
00000A14  584F       586          addq.w    #4,A7
                     587   ; break;
                     588   main_9:
                     589   ; }
                     590   ; //prompting user to enter test pattern
                     591   ; while(!select_pattern){
                     592   main_15:
00000A16  4AAE FFF4  593          tst.l     -12(A6)
00000A1A  6600 0060  594          bne       main_17
                     595   ; printf("\r\nPlease enter a number to choose one of the following test patterns:"
00000A1E  4879 0000  596          pea       @memtest_8.L
00000A22  22F0      
00000A24  4E92       597          jsr       (A2)
00000A26  584F       598          addq.w    #4,A7
                     599   ; "\r\n1 - 55"
                     600   ; "\r\n2 - AA"
                     601   ; "\r\n3 - FF"
                     602   ; "\r\n4 - 00\r\n");
                     603   ; scanf("%d", &select_pattern);
00000A28  486E FFF4  604          pea       -12(A6)
00000A2C  4879 0000  605          pea       @memtest_9.L
00000A30  2358      
00000A32  4E93       606          jsr       (A3)
00000A34  504F       607          addq.w    #8,A7
                     608   ; if((select_pattern != 1 && select_pattern != 2 && select_pattern != 3 && select_pattern != 4) || select_pattern == 0){
00000A36  202E FFF4  609          move.l    -12(A6),D0
00000A3A  0C80 0000  610          cmp.l     #1,D0
00000A3E  0001      
00000A40  6724       611          beq.s     main_21
00000A42  202E FFF4  612          move.l    -12(A6),D0
00000A46  0C80 0000  613          cmp.l     #2,D0
00000A4A  0002      
00000A4C  6718       614          beq.s     main_21
00000A4E  202E FFF4  615          move.l    -12(A6),D0
00000A52  0C80 0000  616          cmp.l     #3,D0
00000A56  0003      
00000A58  670C       617          beq.s     main_21
00000A5A  202E FFF4  618          move.l    -12(A6),D0
00000A5E  0C80 0000  619          cmp.l     #4,D0
00000A62  0004      
00000A64  6606       620          bne.s     main_20
                     621   main_21:
00000A66  202E FFF4  622          move.l    -12(A6),D0
00000A6A  660E       623          bne.s     main_18
                     624   main_20:
                     625   ; printf("\r\nInvalid Selection\r\n");
00000A6C  4879 0000  626          pea       @memtest_10.L
00000A70  235C      
00000A72  4E92       627          jsr       (A2)
00000A74  584F       628          addq.w    #4,A7
                     629   ; select_pattern = 0;
00000A76  42AE FFF4  630          clr.l     -12(A6)
                     631   main_18:
00000A7A  609A       632          bra       main_15
                     633   main_17:
                     634   ; }
                     635   ; }
                     636   ; //assigning write_data based on test_pattern
                     637   ; switch(select_pattern){
00000A7C  202E FFF4  638          move.l    -12(A6),D0
00000A80  5380       639          subq.l    #1,D0
00000A82  6500 005E  640          blo       main_22
00000A86  0C80 0000  641          cmp.l     #4,D0
00000A8A  0004      
00000A8C  6400 0054  642          bhs       main_22
00000A90  E380       643          asl.l     #1,D0
00000A92  303B 0806  644          move.w    main_24(PC,D0.L),D0
00000A96  4EFB 0002  645          jmp       main_24(PC,D0.W)
                     646   main_24:
00000A9A  0008       647          dc.w      main_25-main_24
00000A9C  0018       648          dc.w      main_26-main_24
00000A9E  002A       649          dc.w      main_27-main_24
00000AA0  003C       650          dc.w      main_28-main_24
                     651   main_25:
                     652   ; case 1:
                     653   ; printf("\r\nYou have selected test pattern 55\r\n");
00000AA2  4879 0000  654          pea       @memtest_11.L
00000AA6  2372      
00000AA8  4E92       655          jsr       (A2)
00000AAA  584F       656          addq.w    #4,A7
                     657   ; test_pattern = 0x55;
00000AAC  7655       658          moveq     #85,D3
                     659   ; break;
00000AAE  6000 003C  660          bra       main_23
                     661   main_26:
                     662   ; case 2:
                     663   ; printf("\r\nYou have selected test pattern AA\r\n");
00000AB2  4879 0000  664          pea       @memtest_12.L
00000AB6  2398      
00000AB8  4E92       665          jsr       (A2)
00000ABA  584F       666          addq.w    #4,A7
                     667   ; test_pattern = 0xAA;
00000ABC  263C 0000  668          move.l    #170,D3
00000AC0  00AA      
                     669   ; break;
00000AC2  6028       670          bra.s     main_23
                     671   main_27:
                     672   ; case 3:
                     673   ; printf("\r\nYou have selected test pattern FF\r\n");
00000AC4  4879 0000  674          pea       @memtest_13.L
00000AC8  23BE      
00000ACA  4E92       675          jsr       (A2)
00000ACC  584F       676          addq.w    #4,A7
                     677   ; test_pattern = 0xFF;
00000ACE  263C 0000  678          move.l    #255,D3
00000AD2  00FF      
                     679   ; break;
00000AD4  6016       680          bra.s     main_23
                     681   main_28:
                     682   ; case 4:
                     683   ; printf("\r\nYou have selected test pattern 00\r\n");
00000AD6  4879 0000  684          pea       @memtest_14.L
00000ADA  23E4      
00000ADC  4E92       685          jsr       (A2)
00000ADE  584F       686          addq.w    #4,A7
                     687   ; test_pattern = 0x00;
00000AE0  4283       688          clr.l     D3
                     689   main_22:
                     690   ; default:
                     691   ; printf("\r\nException - invalid test pattern\r\n");
00000AE2  4879 0000  692          pea       @memtest_15.L
00000AE6  240A      
00000AE8  4E92       693          jsr       (A2)
00000AEA  584F       694          addq.w    #4,A7
                     695   ; break;
                     696   main_23:
                     697   ; }
                     698   ; //create appropriate data set based on select_pattern and test_option
                     699   ; // ie, if select_pattern is AA and test_option is BYTES, write_data must be AAAA
                     700   ; switch(test_option){
00000AEC  202E FFF0  701          move.l    -16(A6),D0
00000AF0  0C80 0000  702          cmp.l     #2,D0
00000AF4  0002      
00000AF6  6720       703          beq.s     main_33
00000AF8  620C       704          bhi.s     main_36
00000AFA  0C80 0000  705          cmp.l     #1,D0
00000AFE  0001      
00000B00  6710       706          beq.s     main_32
00000B02  6000 0040  707          bra       main_30
                     708   main_36:
00000B06  0C80 0000  709          cmp.l     #3,D0
00000B0A  0003      
00000B0C  6718       710          beq.s     main_34
00000B0E  6000 0034  711          bra       main_30
                     712   main_32:
                     713   ; case 1:
                     714   ; write_data = test_pattern;
00000B12  2A03       715          move.l    D3,D5
                     716   ; break;
00000B14  6000 0038  717          bra       main_31
                     718   main_33:
                     719   ; case 2:
                     720   ; write_data = test_pattern | test_pattern << 8;
00000B18  2003       721          move.l    D3,D0
00000B1A  2203       722          move.l    D3,D1
00000B1C  E189       723          lsl.l     #8,D1
00000B1E  8081       724          or.l      D1,D0
00000B20  2A00       725          move.l    D0,D5
                     726   ; break;
00000B22  6000 002A  727          bra       main_31
                     728   main_34:
                     729   ; case 3:
                     730   ; write_data = test_pattern | test_pattern << 8 | test_pattern << 16 | test_pattern << 24;
00000B26  2003       731          move.l    D3,D0
00000B28  2203       732          move.l    D3,D1
00000B2A  E189       733          lsl.l     #8,D1
00000B2C  8081       734          or.l      D1,D0
00000B2E  2203       735          move.l    D3,D1
00000B30  E189       736          lsl.l     #8,D1
00000B32  E189       737          lsl.l     #8,D1
00000B34  8081       738          or.l      D1,D0
00000B36  2203       739          move.l    D3,D1
00000B38  E189       740          lsl.l     #8,D1
00000B3A  E189       741          lsl.l     #8,D1
00000B3C  E189       742          lsl.l     #8,D1
00000B3E  8081       743          or.l      D1,D0
00000B40  2A00       744          move.l    D0,D5
                     745   ; break;
00000B42  600A       746          bra.s     main_31
                     747   main_30:
                     748   ; default:
                     749   ; printf("\r\nException - could not generate write_data\r\n");
00000B44  4879 0000  750          pea       @memtest_16.L
00000B48  2430      
00000B4A  4E92       751          jsr       (A2)
00000B4C  584F       752          addq.w    #4,A7
                     753   ; break;
                     754   main_31:
                     755   ; }
                     756   ; //prompting user to enter start address
                     757   ; while(!start_addr){
                     758   main_37:
00000B4E  4AAE FFF8  759          tst.l     -8(A6)
00000B52  6600 0086  760          bne       main_39
                     761   ; printf("\r\nPlease enter a starting address from 08020000 to 08030000\r\n");
00000B56  4879 0000  762          pea       @memtest_17.L
00000B5A  245E      
00000B5C  4E92       763          jsr       (A2)
00000B5E  584F       764          addq.w    #4,A7
                     765   ; scanf("%d", &start_addr);
00000B60  486E FFF8  766          pea       -8(A6)
00000B64  4879 0000  767          pea       @memtest_18.L
00000B68  249C      
00000B6A  4E93       768          jsr       (A3)
00000B6C  504F       769          addq.w    #8,A7
                     770   ; if(start_addr<0x08020000 || start_addr>0x08030000){
00000B6E  202E FFF8  771          move.l    -8(A6),D0
00000B72  0C80 0802  772          cmp.l     #134348800,D0
00000B76  0000      
00000B78  650C       773          blo.s     main_42
00000B7A  202E FFF8  774          move.l    -8(A6),D0
00000B7E  0C80 0803  775          cmp.l     #134414336,D0
00000B82  0000      
00000B84  6312       776          bls.s     main_40
                     777   main_42:
                     778   ; printf("\r\nStart address is invalid\r\n");
00000B86  4879 0000  779          pea       @memtest_19.L
00000B8A  24A0      
00000B8C  4E92       780          jsr       (A2)
00000B8E  584F       781          addq.w    #4,A7
                     782   ; start_addr = 0;
00000B90  42AE FFF8  783          clr.l     -8(A6)
00000B94  6000 0040  784          bra       main_44
                     785   main_40:
                     786   ; } else if(bit_num>8 && start_addr % 2 != 0){
00000B98  0C86 0000  787          cmp.l     #8,D6
00000B9C  0008      
00000B9E  6328       788          bls.s     main_43
00000BA0  2F2E FFF8  789          move.l    -8(A6),-(A7)
00000BA4  4878 0002  790          pea       2
00000BA8  4EB9 0000  791          jsr       ULDIV
00000BAC  0D9A      
00000BAE  202F 0004  792          move.l    4(A7),D0
00000BB2  504F       793          addq.w    #8,A7
00000BB4  4A80       794          tst.l     D0
00000BB6  6710       795          beq.s     main_43
                     796   ; printf("\r\nFor words or long words, please enter an even numbered address\r\n");
00000BB8  4879 0000  797          pea       @memtest_20.L
00000BBC  24BE      
00000BBE  4E92       798          jsr       (A2)
00000BC0  584F       799          addq.w    #4,A7
                     800   ; end_addr = 0;
00000BC2  42AE FFFC  801          clr.l     -4(A6)
00000BC6  600E       802          bra.s     main_44
                     803   main_43:
                     804   ; } else{
                     805   ; printf("\r\nThe chosen starting address is: %x", start_addr);
00000BC8  2F2E FFF8  806          move.l    -8(A6),-(A7)
00000BCC  4879 0000  807          pea       @memtest_21.L
00000BD0  2502      
00000BD2  4E92       808          jsr       (A2)
00000BD4  504F       809          addq.w    #8,A7
                     810   main_44:
00000BD6  6000 FF76  811          bra       main_37
                     812   main_39:
                     813   ; }
                     814   ; }
                     815   ; //prompting user to enter end address
                     816   ; while(!end_addr){
                     817   main_45:
00000BDA  4AAE FFFC  818          tst.l     -4(A6)
00000BDE  6600 0088  819          bne       main_47
                     820   ; printf("\r\nPlease enter an end address from %x to 08030000\r\n", start_addr);
00000BE2  2F2E FFF8  821          move.l    -8(A6),-(A7)
00000BE6  4879 0000  822          pea       @memtest_22.L
00000BEA  2528      
00000BEC  4E92       823          jsr       (A2)
00000BEE  504F       824          addq.w    #8,A7
                     825   ; scanf("%d", &end_addr);
00000BF0  486E FFFC  826          pea       -4(A6)
00000BF4  4879 0000  827          pea       @memtest_23.L
00000BF8  255C      
00000BFA  4E93       828          jsr       (A3)
00000BFC  504F       829          addq.w    #8,A7
                     830   ; if(end_addr<start_addr || end_addr>0x08030000){
00000BFE  202E FFFC  831          move.l    -4(A6),D0
00000C02  B0AE FFF8  832          cmp.l     -8(A6),D0
00000C06  650C       833          blo.s     main_50
00000C08  202E FFFC  834          move.l    -4(A6),D0
00000C0C  0C80 0803  835          cmp.l     #134414336,D0
00000C10  0000      
00000C12  6312       836          bls.s     main_48
                     837   main_50:
                     838   ; printf("\r\nEnd address is invalid\r\n");
00000C14  4879 0000  839          pea       @memtest_24.L
00000C18  2560      
00000C1A  4E92       840          jsr       (A2)
00000C1C  584F       841          addq.w    #4,A7
                     842   ; end_addr = 0;
00000C1E  42AE FFFC  843          clr.l     -4(A6)
00000C22  6000 0040  844          bra       main_52
                     845   main_48:
                     846   ; } else if(bit_num>8 && end_addr % 2 != 0){
00000C26  0C86 0000  847          cmp.l     #8,D6
00000C2A  0008      
00000C2C  6328       848          bls.s     main_51
00000C2E  2F2E FFFC  849          move.l    -4(A6),-(A7)
00000C32  4878 0002  850          pea       2
00000C36  4EB9 0000  851          jsr       ULDIV
00000C3A  0D9A      
00000C3C  202F 0004  852          move.l    4(A7),D0
00000C40  504F       853          addq.w    #8,A7
00000C42  4A80       854          tst.l     D0
00000C44  6710       855          beq.s     main_51
                     856   ; printf("\r\nFor words or long words, please enter an even numbered address\r\n");
00000C46  4879 0000  857          pea       @memtest_25.L
00000C4A  257C      
00000C4C  4E92       858          jsr       (A2)
00000C4E  584F       859          addq.w    #4,A7
                     860   ; end_addr = 0;
00000C50  42AE FFFC  861          clr.l     -4(A6)
00000C54  600E       862          bra.s     main_52
                     863   main_51:
                     864   ; } else{
                     865   ; printf("\r\nThe chosen ending address is: %x", end_addr);
00000C56  2F2E FFFC  866          move.l    -4(A6),-(A7)
00000C5A  4879 0000  867          pea       @memtest_26.L
00000C5E  25C0      
00000C60  4E92       868          jsr       (A2)
00000C62  504F       869          addq.w    #8,A7
                     870   main_52:
00000C64  6000 FF74  871          bra       main_45
                     872   main_47:
                     873   ; }
                     874   ; }
                     875   ; //set address pointer to start pointer
                     876   ; addr_point = start_addr;
00000C68  242E FFF8  877          move.l    -8(A6),D2
                     878   ; //writing data
                     879   ; while(addr_point<end_addr){
                     880   main_53:
00000C6C  B4AE FFFC  881          cmp.l     -4(A6),D2
00000C70  6400 0058  882          bhs       main_55
                     883   ; *addr_point = write_data;
00000C74  2042       884          move.l    D2,A0
00000C76  2085       885          move.l    D5,(A0)
                     886   ; counter++;
00000C78  5284       887          addq.l    #1,D4
                     888   ; if(counter >= 10000){
00000C7A  0C84 0000  889          cmp.l     #10000,D4
00000C7E  2710      
00000C80  6514       890          blo.s     main_56
                     891   ; printf("\r\nWriting %x into address %x\r\n", *addr_point, addr_point);
00000C82  2F02       892          move.l    D2,-(A7)
00000C84  2042       893          move.l    D2,A0
00000C86  2F10       894          move.l    (A0),-(A7)
00000C88  4879 0000  895          pea       @memtest_27.L
00000C8C  25E4      
00000C8E  4E92       896          jsr       (A2)
00000C90  DEFC 000C  897          add.w     #12,A7
                     898   ; counter = 1;
00000C94  7801       899          moveq     #1,D4
                     900   main_56:
                     901   ; }
                     902   ; //need to increment address pointer according to test option chosen (bytes, words, long words)
                     903   ; if(test_option == 1){
00000C96  202E FFF0  904          move.l    -16(A6),D0
00000C9A  0C80 0000  905          cmp.l     #1,D0
00000C9E  0001      
00000CA0  6604       906          bne.s     main_58
                     907   ; addr_point = addr_point+1;
00000CA2  5882       908          addq.l    #4,D2
00000CA4  6022       909          bra.s     main_62
                     910   main_58:
                     911   ; } else if(test_option == 2){
00000CA6  202E FFF0  912          move.l    -16(A6),D0
00000CAA  0C80 0000  913          cmp.l     #2,D0
00000CAE  0002      
00000CB0  6604       914          bne.s     main_60
                     915   ; addr_point = addr_point+2;
00000CB2  5082       916          addq.l    #8,D2
00000CB4  6012       917          bra.s     main_62
                     918   main_60:
                     919   ; }else if(test_option == 3){
00000CB6  202E FFF0  920          move.l    -16(A6),D0
00000CBA  0C80 0000  921          cmp.l     #3,D0
00000CBE  0003      
00000CC0  6606       922          bne.s     main_62
                     923   ; addr_point = addr_point+4;
00000CC2  0682 0000  924          add.l     #16,D2
00000CC6  0010      
                     925   main_62:
00000CC8  60A2       926          bra       main_53
                     927   main_55:
                     928   ; }
                     929   ; }
                     930   ; printf("\r\nWriting completed. Will now start reading.\r\n");
00000CCA  4879 0000  931          pea       @memtest_28.L
00000CCE  2604      
00000CD0  4E92       932          jsr       (A2)
00000CD2  584F       933          addq.w    #4,A7
                     934   ; addr_point = start_addr;
00000CD4  242E FFF8  935          move.l    -8(A6),D2
                     936   ; counter = 10000;
00000CD8  283C 0000  937          move.l    #10000,D4
00000CDC  2710      
                     938   ; //reading data
                     939   ; while(addr_point<end_addr){
                     940   main_64:
00000CDE  B4AE FFFC  941          cmp.l     -4(A6),D2
00000CE2  6400 007E  942          bhs       main_66
                     943   ; if(*addr_point != write_data){
00000CE6  2042       944          move.l    D2,A0
00000CE8  BA90       945          cmp.l     (A0),D5
00000CEA  6722       946          beq.s     main_67
                     947   ; printf("\r\nAn Error has occurred: data at address %x expected to be %x, instead is reading %x", addr_point, write_data, *addr_point);
00000CEC  2042       948          move.l    D2,A0
00000CEE  2F10       949          move.l    (A0),-(A7)
00000CF0  2F05       950          move.l    D5,-(A7)
00000CF2  2F02       951          move.l    D2,-(A7)
00000CF4  4879 0000  952          pea       @memtest_29.L
00000CF8  2634      
00000CFA  4E92       953          jsr       (A2)
00000CFC  DEFC 0010  954          add.w     #16,A7
                     955   ; printf("\r\nMemory test failed.\r\n");
00000D00  4879 0000  956          pea       @memtest_30.L
00000D04  268A      
00000D06  4E92       957          jsr       (A2)
00000D08  584F       958          addq.w    #4,A7
                     959   ; break;
00000D0A  6000 0056  960          bra       main_66
                     961   main_67:
                     962   ; }
                     963   ; counter++;
00000D0E  5284       964          addq.l    #1,D4
                     965   ; if(counter >= 10000){
00000D10  0C84 0000  966          cmp.l     #10000,D4
00000D14  2710      
00000D16  6514       967          blo.s     main_69
                     968   ; printf("\r\nReading data value %x from address %x\r\n", *addr_point, addr_point);
00000D18  2F02       969          move.l    D2,-(A7)
00000D1A  2042       970          move.l    D2,A0
00000D1C  2F10       971          move.l    (A0),-(A7)
00000D1E  4879 0000  972          pea       @memtest_31.L
00000D22  26A2      
00000D24  4E92       973          jsr       (A2)
00000D26  DEFC 000C  974          add.w     #12,A7
                     975   ; counter = 1;
00000D2A  7801       976          moveq     #1,D4
                     977   main_69:
                     978   ; }
                     979   ; //need to increment address pointer according to test option chosen (bytes, words, long words)
                     980   ; if(test_option == 1){
00000D2C  202E FFF0  981          move.l    -16(A6),D0
00000D30  0C80 0000  982          cmp.l     #1,D0
00000D34  0001      
00000D36  6604       983          bne.s     main_71
                     984   ; addr_point = addr_point+1;
00000D38  5882       985          addq.l    #4,D2
00000D3A  6022       986          bra.s     main_75
                     987   main_71:
                     988   ; } else if(test_option == 2){
00000D3C  202E FFF0  989          move.l    -16(A6),D0
00000D40  0C80 0000  990          cmp.l     #2,D0
00000D44  0002      
00000D46  6604       991          bne.s     main_73
                     992   ; addr_point = addr_point+2;
00000D48  5082       993          addq.l    #8,D2
00000D4A  6012       994          bra.s     main_75
                     995   main_73:
                     996   ; }else if(test_option == 3){
00000D4C  202E FFF0  997          move.l    -16(A6),D0
00000D50  0C80 0000  998          cmp.l     #3,D0
00000D54  0003      
00000D56  6606       999          bne.s     main_75
                    1000   ; addr_point = addr_point+4;
00000D58  0682 0000 1001          add.l     #16,D2
00000D5C  0010      
                    1002   main_75:
00000D5E  6000 FF7E 1003          bra       main_64
                    1004   main_66:
00000D62  4CDF 0C7C 1005          movem.l   (A7)+,D2/D3/D4/D5/D6/A2/A3
00000D66  4E5E      1006          unlk      A6
00000D68  4E75      1007          rts
                    1008   ; }
                    1009   ; }
                    1010   ; }
                    1011   _scanf:
00000D6A  4E56 FFFC 1012          link      A6,#-4
00000D6E  2F02      1013          move.l    D2,-(A7)
00000D70  41EE 0008 1014          lea       8(A6),A0
00000D74  5848      1015          addq.w    #4,A0
00000D76  2408      1016          move.l    A0,D2
00000D78  2F02      1017          move.l    D2,-(A7)
00000D7A  2F2E 0008 1018          move.l    8(A6),-(A7)
00000D7E  42A7      1019          clr.l     -(A7)
00000D80  4EB9 0000 1020          jsr       _doscan
00000D84  1144      
00000D86  DEFC 000C 1021          add.w     #12,A7
00000D8A  2D40 FFFC 1022          move.l    D0,-4(A6)
00000D8E  4282      1023          clr.l     D2
00000D90  202E FFFC 1024          move.l    -4(A6),D0
00000D94  241F      1025          move.l    (A7)+,D2
00000D96  4E5E      1026          unlk      A6
00000D98  4E75      1027          rts
                    1028   ULDIV:
00000D9A  4E56 0000 1029          link    A6,#0
00000D9E  48E7 C000 1030          movem.l D0/D1,-(A7)
00000DA2  222E 0008 1031          move.l  8(A6),D1
00000DA6  202E 000C 1032          move.l  12(A6),D0
00000DAA  6036      1033          bra.s   ldiv_3
                    1034   LDIV:
00000DAC  4E56 0000 1035          link    A6,#0
00000DB0  48E7 C000 1036          movem.l D0/D1,-(A7)
00000DB4  222E 0008 1037          move.l  8(A6),D1
00000DB8  202E 000C 1038          move.l  12(A6),D0
00000DBC  4A80      1039          tst.l   D0
00000DBE  6A0E      1040          bpl.s   ldiv_1
00000DC0  4480      1041          neg.l   D0
00000DC2  4A81      1042          tst.l   D1
00000DC4  6A14      1043          bpl.s   ldiv_2
00000DC6  4481      1044          neg.l   D1
00000DC8  612A      1045          bsr.s   dodiv
00000DCA  4481      1046          neg.l   D1
00000DCC  6016      1047          bra.s   ldiv_4
                    1048   ldiv_1:
00000DCE  4A81      1049          tst.l   D1
00000DD0  6A10      1050          bpl.s   ldiv_3
00000DD2  4481      1051          neg.l   D1
00000DD4  611E      1052          bsr.s   dodiv
00000DD6  4480      1053          neg.l   D0
00000DD8  600A      1054          bra.s   ldiv_4
                    1055   ldiv_2:
00000DDA  6118      1056          bsr.s   dodiv
00000DDC  4480      1057          neg.l   D0
00000DDE  4481      1058          neg.l   D1
00000DE0  6002      1059          bra.s   ldiv_4
                    1060   ldiv_3:
00000DE2  6110      1061          bsr.s   dodiv
                    1062   ldiv_4:
00000DE4  2D40 0008 1063          move.l  D0,8(A6)
00000DE8  2D41 000C 1064          move.l  D1,12(A6)
00000DEC  4CDF 0003 1065          movem.l (A7)+,D0/D1
00000DF0  4E5E      1066          unlk    A6
00000DF2  4E75      1067          rts
                    1068   dodiv:
00000DF4  0C81 0000 1069          cmpi.l  #$FFFF,D1
00000DF8  FFFF      
00000DFA  6236      1070          bhi.s   dodiv_2
00000DFC  0C80 0000 1071          cmpi.l  #$FFFF,D0
00000E00  FFFF      
00000E02  6210      1072          bhi.s   dodiv_1
00000E04  80C1      1073          divu    D1,D0
00000E06  2200      1074          move.l  D0,D1
00000E08  4241      1075          clr.w   D1
00000E0A  4841      1076          swap    D1
00000E0C  0280 0000 1077          andi.l  #$FFFF,D0
00000E10  FFFF      
00000E12  4E75      1078          rts
                    1079   dodiv_1:
00000E14  48A7 A000 1080          movem.w D0/D2,-(A7)
00000E18  4240      1081          clr.w   D0
00000E1A  4840      1082          swap    D0
00000E1C  80C1      1083          divu    D1,D0
00000E1E  3400      1084          move.w  D0,D2
00000E20  301F      1085          move.w  (A7)+,D0
00000E22  80C1      1086          divu    D1,D0
00000E24  4840      1087          swap    D0
00000E26  4281      1088          clr.l   D1
00000E28  3200      1089          move.w  D0,D1
00000E2A  3002      1090          move.w  D2,D0
00000E2C  4840      1091          swap    D0
00000E2E  341F      1092          move.w  (A7)+,D2
00000E30  4E75      1093          rts
                    1094   dodiv_2:
00000E32  48E7 3800 1095          movem.l D2/D3/D4,-(A7)
00000E36  2401      1096          move.l  D1,D2
00000E38  4242      1097          clr.w   D2
00000E3A  4842      1098          swap    D2
00000E3C  5282      1099          addq.l  #1,D2
00000E3E  2600      1100          move.l  D0,D3
00000E40  2801      1101          move.l  D1,D4
00000E42  2202      1102          move.l  D2,D1
00000E44  61CE      1103          bsr.s   dodiv_1
00000E46  2204      1104          move.l  D4,D1
00000E48  82C2      1105          divu    D2,D1
00000E4A  80C1      1106          divu    D1,D0
00000E4C  0280 0000 1107          andi.l  #$FFFF,D0
00000E50  FFFF      
                    1108   dodiv_3:
00000E52  2204      1109          move.l  D4,D1
00000E54  2404      1110          move.l  D4,D2
00000E56  4842      1111          swap    D2
00000E58  C2C0      1112          mulu    D0,D1
00000E5A  C4C0      1113          mulu    D0,D2
00000E5C  4842      1114          swap    D2
00000E5E  D282      1115          add.l   D2,D1
00000E60  9283      1116          sub.l   D3,D1
00000E62  620A      1117          bhi.s   dodiv_4
00000E64  4481      1118          neg.l   D1
00000E66  B881      1119          cmp.l   D1,D4
00000E68  6208      1120          bhi.s   dodiv_5
00000E6A  5280      1121          addq.l  #1,D0
00000E6C  60E4      1122          bra.s   dodiv_3
                    1123   dodiv_4:
00000E6E  5380      1124          subq.l  #1,D0
00000E70  60E0      1125          bra.s   dodiv_3
                    1126   dodiv_5:
00000E72  4CDF 001C 1127          movem.l (A7)+,D2/D3/D4
00000E76  4E75      1128          rts
                    1129   _printf:
00000E78  4E56 FFFC 1130          link      A6,#-4
00000E7C  2F02      1131          move.l    D2,-(A7)
00000E7E  41EE 0008 1132          lea       8(A6),A0
00000E82  5848      1133          addq.w    #4,A0
00000E84  2408      1134          move.l    A0,D2
00000E86  2F02      1135          move.l    D2,-(A7)
00000E88  2F2E 0008 1136          move.l    8(A6),-(A7)
00000E8C  42A7      1137          clr.l     -(A7)
00000E8E  4EB9 0000 1138          jsr       _doprint
00000E92  1834      
00000E94  DEFC 000C 1139          add.w     #12,A7
00000E98  2D40 FFFC 1140          move.l    D0,-4(A6)
00000E9C  4282      1141          clr.l     D2
00000E9E  202E FFFC 1142          move.l    -4(A6),D0
00000EA2  241F      1143          move.l    (A7)+,D2
00000EA4  4E5E      1144          unlk      A6
00000EA6  4E75      1145          rts
                    1146   @doscan_read:
00000EA8  4E56 FFFC 1147          link      A6,#-4
00000EAC  2F0A      1148          move.l    A2,-(A7)
00000EAE  45F9 0000 1149          lea       @doscan_lpbuf.L,A2
00000EB2  27DC      
00000EB4  4AAE 0008 1150          tst.l     8(A6)
00000EB8  6700 0032 1151          beq       @doscan_read_1
00000EBC  206E 0008 1152          move.l    8(A6),A0
00000EC0  58AE 0008 1153          addq.l    #4,8(A6)
00000EC4  2050      1154          move.l    (A0),A0
00000EC6  1010      1155          move.b    (A0),D0
00000EC8  4880      1156          ext.w     D0
00000ECA  48C0      1157          ext.l     D0
00000ECC  2D40 FFFC 1158          move.l    D0,-4(A6)
00000ED0  4201      1159          clr.b     D1
00000ED2  C2BC 0000 1160          and.l     #255,D1
00000ED6  00FF      
00000ED8  B081      1161          cmp.l     D1,D0
00000EDA  6706      1162          beq.s     @doscan_read_3
00000EDC  202E FFFC 1163          move.l    -4(A6),D0
00000EE0  6006      1164          bra.s     @doscan_read_4
                    1165   @doscan_read_3:
00000EE2  70FF      1166          moveq     #-1,D0
00000EE4  4880      1167          ext.w     D0
00000EE6  48C0      1168          ext.l     D0
                    1169   @doscan_read_4:
00000EE8  6000 0036 1170          bra       @doscan_read_5
                    1171   @doscan_read_1:
00000EEC  2052      1172          move.l    (A2),A0
00000EEE  1010      1173          move.b    (A0),D0
00000EF0  6624      1174          bne.s     @doscan_read_6
00000EF2  4879 0803 1175          pea       @doscan_buf.L
00000EF6  00C4      
00000EF8  4EB9 0000 1176          jsr       _gets
00000EFC  1EFE      
00000EFE  584F      1177          addq.w    #4,A7
00000F00  2480      1178          move.l    D0,(A2)
00000F02  4879 0000 1179          pea       @doscan_1.L
00000F06  26CC      
00000F08  4879 0803 1180          pea       @doscan_buf.L
00000F0C  00C4      
00000F0E  4EB9 0000 1181          jsr       _strcat
00000F12  1F90      
00000F14  504F      1182          addq.w    #8,A7
                    1183   @doscan_read_6:
00000F16  2052      1184          move.l    (A2),A0
00000F18  5292      1185          addq.l    #1,(A2)
00000F1A  1010      1186          move.b    (A0),D0
00000F1C  4880      1187          ext.w     D0
00000F1E  48C0      1188          ext.l     D0
                    1189   @doscan_read_5:
00000F20  245F      1190          move.l    (A7)+,A2
00000F22  4E5E      1191          unlk      A6
00000F24  4E75      1192          rts
                    1193   @doscan_putback:
00000F26  4E56 0000 1194          link      A6,#0
00000F2A  48E7 3000 1195          movem.l   D2/D3,-(A7)
00000F2E  242E 000C 1196          move.l    12(A6),D2
00000F32  262E 0008 1197          move.l    8(A6),D3
00000F36  6718      1198          beq.s     @doscan_putback_1
00000F38  0C82 FFFF 1199          cmp.l     #-1,D2
00000F3C  FFFF      
00000F3E  670A      1200          beq.s     @doscan_putback_3
00000F40  5983      1201          subq.l    #4,D3
00000F42  2043      1202          move.l    D3,A0
00000F44  2050      1203          move.l    (A0),A0
00000F46  1082      1204          move.b    D2,(A0)
00000F48  6004      1205          bra.s     @doscan_putback_4
                    1206   @doscan_putback_3:
00000F4A  2043      1207          move.l    D3,A0
00000F4C  5390      1208          subq.l    #1,(A0)
                    1209   @doscan_putback_4:
00000F4E  6030      1210          bra.s     @doscan_putback_6
                    1211   @doscan_putback_1:
00000F50  41F9 0803 1212          lea       @doscan_buf.L,A0
00000F54  00C4      
00000F56  2008      1213          move.l    A0,D0
00000F58  B0B9 0000 1214          cmp.l     @doscan_lpbuf.L,D0
00000F5C  27DC      
00000F5E  6612      1215          bne.s     @doscan_putback_5
00000F60  4239 0803 1216          clr.b     @doscan_buf.L
00000F64  00C4      
00000F66  2F02      1217          move.l    D2,-(A7)
00000F68  4EB9 0000 1218          jsr       _ungetch
00000F6C  1FC2      
00000F6E  584F      1219          addq.w    #4,A7
00000F70  600E      1220          bra.s     @doscan_putback_6
                    1221   @doscan_putback_5:
00000F72  53B9 0000 1222          subq.l    #1,@doscan_lpbuf.L
00000F76  27DC      
00000F78  2079 0000 1223          move.l    @doscan_lpbuf.L,A0
00000F7C  27DC      
00000F7E  1082      1224          move.b    D2,(A0)
                    1225   @doscan_putback_6:
00000F80  2002      1226          move.l    D2,D0
00000F82  4CDF 000C 1227          movem.l   (A7)+,D2/D3
00000F86  4E5E      1228          unlk      A6
00000F88  4E75      1229          rts
                    1230   @doscan_space:
00000F8A  4E56 0000 1231          link      A6,#0
00000F8E  2F02      1232          move.l    D2,-(A7)
                    1233   @doscan_space_1:
00000F90  2F2E 0008 1234          move.l    8(A6),-(A7)
00000F94  4EB8 0EA8 1235          jsr       @doscan_read
00000F98  584F      1236          addq.w    #4,A7
00000F9A  2400      1237          move.l    D0,D2
00000F9C  206E 000C 1238          move.l    12(A6),A0
00000FA0  5290      1239          addq.l    #1,(A0)
00000FA2  2002      1240          move.l    D2,D0
00000FA4  5280      1241          addq.l    #1,D0
00000FA6  41F9 0000 1242          lea       __ctype.L,A0
00000FAA  26CE      
00000FAC  1030 0800 1243          move.b    0(A0,D0.L),D0
00000FB0  C03C 0010 1244          and.b     #16,D0
00000FB4  66DA      1245          bne       @doscan_space_1
00000FB6  2002      1246          move.l    D2,D0
00000FB8  241F      1247          move.l    (A7)+,D2
00000FBA  4E5E      1248          unlk      A6
00000FBC  4E75      1249          rts
                    1250   @doscan_select:
00000FBE  4E56 0000 1251          link      A6,#0
00000FC2  48E7 3F20 1252          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
00000FC6  262E 000C 1253          move.l    12(A6),D3
00000FCA  2C2E 0018 1254          move.l    24(A6),D6
00000FCE  2E2E 0014 1255          move.l    20(A6),D7
00000FD2  2043      1256          move.l    D3,A0
00000FD4  1010      1257          move.b    (A0),D0
00000FD6  0C00 005E 1258          cmp.b     #94,D0
00000FDA  6608      1259          bne.s     @doscan_select_1
00000FDC  347C 0001 1260          move.w    #1,A2
00000FE0  5283      1261          addq.l    #1,D3
00000FE2  6004      1262          bra.s     @doscan_select_2
                    1263   @doscan_select_1:
00000FE4  347C 0000 1264          move.w    #0,A2
                    1265   @doscan_select_2:
00000FE8  202E 0010 1266          move.l    16(A6),D0
00000FEC  53AE 0010 1267          subq.l    #1,16(A6)
00000FF0  4A80      1268          tst.l     D0
00000FF2  6700 00F4 1269          beq       @doscan_select_5
00000FF6  2F2E 0008 1270          move.l    8(A6),-(A7)
00000FFA  4EB8 0EA8 1271          jsr       @doscan_read
00000FFE  584F      1272          addq.w    #4,A7
00001000  2800      1273          move.l    D0,D4
00001002  0C84 FFFF 1274          cmp.l     #-1,D4
00001006  FFFF      
00001008  6604      1275          bne.s     @doscan_select_6
0000100A  6000 00DC 1276          bra       @doscan_select_5
                    1277   @doscan_select_6:
0000100E  206E 001C 1278          move.l    28(A6),A0
00001012  5290      1279          addq.l    #1,(A0)
00001014  4285      1280          clr.l     D5
00001016  4282      1281          clr.l     D2
                    1282   @doscan_select_8:
00001018  2043      1283          move.l    D3,A0
0000101A  1030 2800 1284          move.b    0(A0,D2.L),D0
0000101E  0C00 005D 1285          cmp.b     #93,D0
00001022  6700 0086 1286          beq       @doscan_select_10
00001026  4A82      1287          tst.l     D2
00001028  6710      1288          beq.s     @doscan_select_11
0000102A  2043      1289          move.l    D3,A0
0000102C  1030 2800 1290          move.b    0(A0,D2.L),D0
00001030  0C00 005D 1291          cmp.b     #93,D0
00001034  6604      1292          bne.s     @doscan_select_11
00001036  6000 0072 1293          bra       @doscan_select_10
                    1294   @doscan_select_11:
0000103A  4A82      1295          tst.l     D2
0000103C  6700 0056 1296          beq       @doscan_select_15
00001040  2043      1297          move.l    D3,A0
00001042  1030 2800 1298          move.b    0(A0,D2.L),D0
00001046  0C00 002D 1299          cmp.b     #45,D0
0000104A  6600 0048 1300          bne       @doscan_select_15
0000104E  2043      1301          move.l    D3,A0
00001050  2002      1302          move.l    D2,D0
00001052  5380      1303          subq.l    #1,D0
00001054  2243      1304          move.l    D3,A1
00001056  2202      1305          move.l    D2,D1
00001058  5281      1306          addq.l    #1,D1
0000105A  2F00      1307          move.l    D0,-(A7)
0000105C  1030 0800 1308          move.b    0(A0,D0.L),D0
00001060  B031 1800 1309          cmp.b     0(A1,D1.L),D0
00001064  6C00 002E 1310          bge       @doscan_select_15
00001068  201F      1311          move.l    (A7)+,D0
0000106A  2043      1312          move.l    D3,A0
0000106C  2002      1313          move.l    D2,D0
0000106E  5380      1314          subq.l    #1,D0
00001070  1030 0800 1315          move.b    0(A0,D0.L),D0
00001074  4880      1316          ext.w     D0
00001076  48C0      1317          ext.l     D0
00001078  B880      1318          cmp.l     D0,D4
0000107A  6D14      1319          blt.s     @doscan_select_17
0000107C  2043      1320          move.l    D3,A0
0000107E  2002      1321          move.l    D2,D0
00001080  5280      1322          addq.l    #1,D0
00001082  1030 0800 1323          move.b    0(A0,D0.L),D0
00001086  4880      1324          ext.w     D0
00001088  48C0      1325          ext.l     D0
0000108A  B880      1326          cmp.l     D0,D4
0000108C  6E02      1327          bgt.s     @doscan_select_17
0000108E  601A      1328          bra.s     @doscan_select_10
                    1329   @doscan_select_17:
00001090  5282      1330          addq.l    #1,D2
00001092  6010      1331          bra.s     @doscan_select_19
                    1332   @doscan_select_15:
00001094  2043      1333          move.l    D3,A0
00001096  1030 2800 1334          move.b    0(A0,D2.L),D0
0000109A  4880      1335          ext.w     D0
0000109C  48C0      1336          ext.l     D0
0000109E  B880      1337          cmp.l     D0,D4
000010A0  6602      1338          bne.s     @doscan_select_19
000010A2  6006      1339          bra.s     @doscan_select_10
                    1340   @doscan_select_19:
000010A4  5282      1341          addq.l    #1,D2
000010A6  6000 FF70 1342          bra       @doscan_select_8
                    1343   @doscan_select_10:
000010AA  4A82      1344          tst.l     D2
000010AC  670C      1345          beq.s     @doscan_select_23
000010AE  2043      1346          move.l    D3,A0
000010B0  1030 2800 1347          move.b    0(A0,D2.L),D0
000010B4  0C00 005D 1348          cmp.b     #93,D0
000010B8  6702      1349          beq.s     @doscan_select_21
                    1350   @doscan_select_23:
000010BA  7A01      1351          moveq     #1,D5
                    1352   @doscan_select_21:
000010BC  200A      1353          move.l    A2,D0
000010BE  6712      1354          beq.s     @doscan_select_24
000010C0  4A85      1355          tst.l     D5
000010C2  660C      1356          bne.s     @doscan_select_26
000010C4  4A87      1357          tst.l     D7
000010C6  6606      1358          bne.s     @doscan_select_28
000010C8  2046      1359          move.l    D6,A0
000010CA  5286      1360          addq.l    #1,D6
000010CC  1084      1361          move.b    D4,(A0)
                    1362   @doscan_select_28:
000010CE  6014      1363          bra.s     @doscan_select_4
                    1364   @doscan_select_26:
000010D0  6016      1365          bra.s     @doscan_select_5
                    1366   @doscan_select_24:
000010D2  4A85      1367          tst.l     D5
000010D4  670C      1368          beq.s     @doscan_select_30
000010D6  4A87      1369          tst.l     D7
000010D8  6606      1370          bne.s     @doscan_select_32
000010DA  2046      1371          move.l    D6,A0
000010DC  5286      1372          addq.l    #1,D6
000010DE  1084      1373          move.b    D4,(A0)
                    1374   @doscan_select_32:
000010E0  6002      1375          bra.s     @doscan_select_4
                    1376   @doscan_select_30:
000010E2  6004      1377          bra.s     @doscan_select_5
                    1378   @doscan_select_4:
000010E4  6000 FF02 1379          bra       @doscan_select_2
                    1380   @doscan_select_5:
000010E8  0C84 FFFF 1381          cmp.l     #-1,D4
000010EC  FFFF      
000010EE  6712      1382          beq.s     @doscan_select_34
000010F0  2F04      1383          move.l    D4,-(A7)
000010F2  2F2E 0008 1384          move.l    8(A6),-(A7)
000010F6  4EB8 0F26 1385          jsr       @doscan_putback
000010FA  504F      1386          addq.w    #8,A7
000010FC  206E 001C 1387          move.l    28(A6),A0
00001100  5390      1388          subq.l    #1,(A0)
                    1389   @doscan_select_34:
00001102  4A87      1390          tst.l     D7
00001104  6604      1391          bne.s     @doscan_select_36
00001106  2046      1392          move.l    D6,A0
00001108  4210      1393          clr.b     (A0)
                    1394   @doscan_select_36:
0000110A  5283      1395          addq.l    #1,D3
0000110C  2043      1396          move.l    D3,A0
0000110E  1010      1397          move.b    (A0),D0
00001110  0C00 005D 1398          cmp.b     #93,D0
00001114  6702      1399          beq.s     @doscan_select_40
00001116  60F2      1400          bra       @doscan_select_36
                    1401   @doscan_select_40:
00001118  5283      1402          addq.l    #1,D3
0000111A  2003      1403          move.l    D3,D0
0000111C  4CDF 04FC 1404          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
00001120  4E5E      1405          unlk      A6
00001122  4E75      1406          rts
                    1407   _scanflush:
00001124  41F9 0803 1408          lea       @doscan_buf.L,A0
00001128  00C4      
0000112A  23C8 0000 1409          move.l    A0,@doscan_lpbuf.L
0000112E  27DC      
00001130  4239 0803 1410          clr.b     @doscan_buf.L
00001134  00C4      
00001136  4878 FFFF 1411          pea       -1
0000113A  4EB9 0000 1412          jsr       _ungetch
0000113E  1FC2      
00001140  584F      1413          addq.w    #4,A7
00001142  4E75      1414          rts
                    1415   _doscan:
00001144  4E56 FF88 1416          link      A6,#-120
00001148  48E7 3F3C 1417          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
0000114C  47F8 0EA8 1418          lea       @doscan_read.L,A3
00001150  4AAE 0008 1419          tst.l     8(A6)
00001154  6706      1420          beq.s     doscan_1
00001156  41EE 0008 1421          lea       8(A6),A0
0000115A  6008      1422          bra.s     doscan_2
                    1423   doscan_1:
0000115C  4200      1424          clr.b     D0
0000115E  4880      1425          ext.w     D0
00001160  48C0      1426          ext.l     D0
00001162  2040      1427          move.l    D0,A0
                    1428   doscan_2:
00001164  2A08      1429          move.l    A0,D5
00001166  42AE FFE4 1430          clr.l     -28(A6)
0000116A  4284      1431          clr.l     D4
                    1432   doscan_3:
0000116C  206E 000C 1433          move.l    12(A6),A0
00001170  52AE 000C 1434          addq.l    #1,12(A6)
00001174  1010      1435          move.b    (A0),D0
00001176  4880      1436          ext.w     D0
00001178  48C0      1437          ext.l     D0
0000117A  2600      1438          move.l    D0,D3
0000117C  4201      1439          clr.b     D1
0000117E  C2BC 0000 1440          and.l     #255,D1
00001182  00FF      
00001184  B081      1441          cmp.l     D1,D0
00001186  6700 05FA 1442          beq       doscan_5
0000118A  4286      1443          clr.l     D6
0000118C  387C 0000 1444          move.w    #0,A4
00001190  0C83 0000 1445          cmp.l     #32,D3
00001194  0020      
00001196  6712      1446          beq.s     doscan_8
00001198  0C83 0000 1447          cmp.l     #9,D3
0000119C  0009      
0000119E  670A      1448          beq.s     doscan_8
000011A0  0C83 0000 1449          cmp.l     #10,D3
000011A4  000A      
000011A6  6600 004E 1450          bne       doscan_6
                    1451   doscan_8:
000011AA  2F05      1452          move.l    D5,-(A7)
000011AC  4E93      1453          jsr       (A3)
000011AE  584F      1454          addq.w    #4,A7
000011B0  2400      1455          move.l    D0,D2
000011B2  52AE FFE4 1456          addq.l    #1,-28(A6)
000011B6  0C82 FFFF 1457          cmp.l     #-1,D2
000011BA  FFFF      
000011BC  6612      1458          bne.s     doscan_11
000011BE  4A84      1459          tst.l     D4
000011C0  6704      1460          beq.s     doscan_13
000011C2  2004      1461          move.l    D4,D0
000011C4  6006      1462          bra.s     doscan_14
                    1463   doscan_13:
000011C6  70FF      1464          moveq     #-1,D0
000011C8  4880      1465          ext.w     D0
000011CA  48C0      1466          ext.l     D0
                    1467   doscan_14:
000011CC  6000 05B6 1468          bra       doscan_15
                    1469   doscan_11:
000011D0  2002      1470          move.l    D2,D0
000011D2  5280      1471          addq.l    #1,D0
000011D4  41F9 0000 1472          lea       __ctype.L,A0
000011D8  26CE      
000011DA  1030 0800 1473          move.b    0(A0,D0.L),D0
000011DE  C03C 0010 1474          and.b     #16,D0
000011E2  66C6      1475          bne       doscan_8
000011E4  53AE FFE4 1476          subq.l    #1,-28(A6)
000011E8  2F02      1477          move.l    D2,-(A7)
000011EA  2F05      1478          move.l    D5,-(A7)
000011EC  4EB8 0F26 1479          jsr       @doscan_putback
000011F0  504F      1480          addq.w    #8,A7
000011F2  6000 058A 1481          bra       doscan_141
                    1482   doscan_6:
000011F6  0C83 0000 1483          cmp.l     #37,D3
000011FA  0025      
000011FC  6600 0546 1484          bne       doscan_129
00001200  206E 000C 1485          move.l    12(A6),A0
00001204  52AE 000C 1486          addq.l    #1,12(A6)
00001208  1010      1487          move.b    (A0),D0
0000120A  4880      1488          ext.w     D0
0000120C  48C0      1489          ext.l     D0
0000120E  2600      1490          move.l    D0,D3
00001210  42AE FFEC 1491          clr.l     -20(A6)
00001214  4286      1492          clr.l     D6
00001216  42AE FFE8 1493          clr.l     -24(A6)
0000121A  347C 7FFF 1494          move.w    #32767,A2
0000121E  0C83 0000 1495          cmp.l     #42,D3
00001222  002A      
00001224  6612      1496          bne.s     doscan_18
00001226  7C01      1497          moveq     #1,D6
00001228  206E 000C 1498          move.l    12(A6),A0
0000122C  52AE 000C 1499          addq.l    #1,12(A6)
00001230  1010      1500          move.b    (A0),D0
00001232  4880      1501          ext.w     D0
00001234  48C0      1502          ext.l     D0
00001236  2600      1503          move.l    D0,D3
                    1504   doscan_18:
00001238  2003      1505          move.l    D3,D0
0000123A  5280      1506          addq.l    #1,D0
0000123C  41F9 0000 1507          lea       __ctype.L,A0
00001240  26CE      
00001242  1030 0800 1508          move.b    0(A0,D0.L),D0
00001246  C03C 0004 1509          and.b     #4,D0
0000124A  6700 004C 1510          beq       doscan_24
0000124E  2003      1511          move.l    D3,D0
00001250  0480 0000 1512          sub.l     #48,D0
00001254  0030      
00001256  2440      1513          move.l    D0,A2
                    1514   doscan_22:
00001258  206E 000C 1515          move.l    12(A6),A0
0000125C  52AE 000C 1516          addq.l    #1,12(A6)
00001260  1010      1517          move.b    (A0),D0
00001262  4880      1518          ext.w     D0
00001264  48C0      1519          ext.l     D0
00001266  2600      1520          move.l    D0,D3
00001268  5280      1521          addq.l    #1,D0
0000126A  41F9 0000 1522          lea       __ctype.L,A0
0000126E  26CE      
00001270  1030 0800 1523          move.b    0(A0,D0.L),D0
00001274  C03C 0004 1524          and.b     #4,D0
00001278  671E      1525          beq.s     doscan_24
0000127A  2F0A      1526          move.l    A2,-(A7)
0000127C  4878 000A 1527          pea       10
00001280  4EB9 0000 1528          jsr       LMUL
00001284  1E70      
00001286  2017      1529          move.l    (A7),D0
00001288  504F      1530          addq.w    #8,A7
0000128A  2203      1531          move.l    D3,D1
0000128C  0481 0000 1532          sub.l     #48,D1
00001290  0030      
00001292  D081      1533          add.l     D1,D0
00001294  2440      1534          move.l    D0,A2
00001296  60C0      1535          bra       doscan_22
                    1536   doscan_24:
00001298  0C83 0000 1537          cmp.l     #108,D3
0000129C  006C      
0000129E  6708      1538          beq.s     doscan_27
000012A0  0C83 0000 1539          cmp.l     #76,D3
000012A4  004C      
000012A6  661A      1540          bne.s     doscan_25
                    1541   doscan_27:
000012A8  2D7C 0000 1542          move.l    #1,-24(A6)
000012AC  0001 FFE8 
000012B0  206E 000C 1543          move.l    12(A6),A0
000012B4  52AE 000C 1544          addq.l    #1,12(A6)
000012B8  1010      1545          move.b    (A0),D0
000012BA  4880      1546          ext.w     D0
000012BC  48C0      1547          ext.l     D0
000012BE  2600      1548          move.l    D0,D3
000012C0  6020      1549          bra.s     doscan_28
                    1550   doscan_25:
000012C2  0C83 0000 1551          cmp.l     #104,D3
000012C6  0068      
000012C8  6618      1552          bne.s     doscan_28
000012CA  2D7C 0000 1553          move.l    #1,-20(A6)
000012CE  0001 FFEC 
000012D2  206E 000C 1554          move.l    12(A6),A0
000012D6  52AE 000C 1555          addq.l    #1,12(A6)
000012DA  1010      1556          move.b    (A0),D0
000012DC  4880      1557          ext.w     D0
000012DE  48C0      1558          ext.l     D0
000012E0  2600      1559          move.l    D0,D3
                    1560   doscan_28:
000012E2  0C83 0000 1561          cmp.l     #91,D3
000012E6  005B      
000012E8  6600 0036 1562          bne       doscan_30
000012EC  4A86      1563          tst.l     D6
000012EE  660A      1564          bne.s     doscan_32
000012F0  206E 0010 1565          move.l    16(A6),A0
000012F4  58AE 0010 1566          addq.l    #4,16(A6)
000012F8  2E10      1567          move.l    (A0),D7
                    1568   doscan_32:
000012FA  486E FFE4 1569          pea       -28(A6)
000012FE  2F07      1570          move.l    D7,-(A7)
00001300  2F06      1571          move.l    D6,-(A7)
00001302  2F0A      1572          move.l    A2,-(A7)
00001304  2F2E 000C 1573          move.l    12(A6),-(A7)
00001308  2F05      1574          move.l    D5,-(A7)
0000130A  4EB8 0FBE 1575          jsr       @doscan_select
0000130E  DEFC 0018 1576          add.w     #24,A7
00001312  2D40 000C 1577          move.l    D0,12(A6)
00001316  4A86      1578          tst.l     D6
00001318  6602      1579          bne.s     doscan_34
0000131A  5284      1580          addq.l    #1,D4
                    1581   doscan_34:
0000131C  6000 0460 1582          bra       doscan_141
                    1583   doscan_30:
00001320  0C83 0000 1584          cmp.l     #110,D3
00001324  006E      
00001326  661A      1585          bne.s     doscan_36
00001328  4A86      1586          tst.l     D6
0000132A  6612      1587          bne.s     doscan_38
0000132C  206E 0010 1588          move.l    16(A6),A0
00001330  58AE 0010 1589          addq.l    #4,16(A6)
00001334  2E10      1590          move.l    (A0),D7
00001336  2047      1591          move.l    D7,A0
00001338  20AE FFE4 1592          move.l    -28(A6),(A0)
0000133C  5284      1593          addq.l    #1,D4
                    1594   doscan_38:
0000133E  6000 043E 1595          bra       doscan_141
                    1596   doscan_36:
00001342  0C83 0000 1597          cmp.l     #115,D3
00001346  0073      
00001348  6600 00C0 1598          bne       doscan_40
0000134C  486E FFE4 1599          pea       -28(A6)
00001350  2F05      1600          move.l    D5,-(A7)
00001352  4EB8 0F8A 1601          jsr       @doscan_space
00001356  504F      1602          addq.w    #8,A7
00001358  2400      1603          move.l    D0,D2
0000135A  4A86      1604          tst.l     D6
0000135C  660A      1605          bne.s     doscan_42
0000135E  206E 0010 1606          move.l    16(A6),A0
00001362  58AE 0010 1607          addq.l    #4,16(A6)
00001366  2E10      1608          move.l    (A0),D7
                    1609   doscan_42:
00001368  52AE FFE4 1610          addq.l    #1,-28(A6)
                    1611   doscan_44:
0000136C  200A      1612          move.l    A2,D0
0000136E  534A      1613          subq.w    #1,A2
00001370  4A80      1614          tst.l     D0
00001372  6700 0048 1615          beq       doscan_46
00001376  2002      1616          move.l    D2,D0
00001378  5280      1617          addq.l    #1,D0
0000137A  41F9 0000 1618          lea       __ctype.L,A0
0000137E  26CE      
00001380  1030 0800 1619          move.b    0(A0,D0.L),D0
00001384  C03C 0010 1620          and.b     #16,D0
00001388  6604      1621          bne.s     doscan_47
0000138A  7001      1622          moveq     #1,D0
0000138C  6002      1623          bra.s     doscan_48
                    1624   doscan_47:
0000138E  4280      1625          clr.l     D0
                    1626   doscan_48:
00001390  C0BC 0000 1627          and.l     #255,D0
00001394  00FF      
00001396  6724      1628          beq.s     doscan_46
00001398  0C82 FFFF 1629          cmp.l     #-1,D2
0000139C  FFFF      
0000139E  671C      1630          beq.s     doscan_46
000013A0  387C 0001 1631          move.w    #1,A4
000013A4  4A86      1632          tst.l     D6
000013A6  6606      1633          bne.s     doscan_49
000013A8  2047      1634          move.l    D7,A0
000013AA  5287      1635          addq.l    #1,D7
000013AC  1082      1636          move.b    D2,(A0)
                    1637   doscan_49:
000013AE  2F05      1638          move.l    D5,-(A7)
000013B0  4E93      1639          jsr       (A3)
000013B2  584F      1640          addq.w    #4,A7
000013B4  2400      1641          move.l    D0,D2
000013B6  52AE FFE4 1642          addq.l    #1,-28(A6)
000013BA  60B0      1643          bra       doscan_44
                    1644   doscan_46:
000013BC  4A86      1645          tst.l     D6
000013BE  660A      1646          bne.s     doscan_53
000013C0  2047      1647          move.l    D7,A0
000013C2  4210      1648          clr.b     (A0)
000013C4  200C      1649          move.l    A4,D0
000013C6  6702      1650          beq.s     doscan_53
000013C8  5284      1651          addq.l    #1,D4
                    1652   doscan_53:
000013CA  0C82 FFFF 1653          cmp.l     #-1,D2
000013CE  FFFF      
000013D0  6708      1654          beq.s     doscan_57
000013D2  4A86      1655          tst.l     D6
000013D4  6622      1656          bne.s     doscan_55
000013D6  200C      1657          move.l    A4,D0
000013D8  661E      1658          bne.s     doscan_55
                    1659   doscan_57:
000013DA  4A84      1660          tst.l     D4
000013DC  6704      1661          beq.s     doscan_58
000013DE  2004      1662          move.l    D4,D0
000013E0  6012      1663          bra.s     doscan_61
                    1664   doscan_58:
000013E2  0C82 FFFF 1665          cmp.l     #-1,D2
000013E6  FFFF      
000013E8  6608      1666          bne.s     doscan_60
000013EA  70FF      1667          moveq     #-1,D0
000013EC  4880      1668          ext.w     D0
000013EE  48C0      1669          ext.l     D0
000013F0  6002      1670          bra.s     doscan_61
                    1671   doscan_60:
000013F2  2004      1672          move.l    D4,D0
                    1673   doscan_61:
000013F4  6000 038E 1674          bra       doscan_15
                    1675   doscan_55:
000013F8  53AE FFE4 1676          subq.l    #1,-28(A6)
000013FC  2F02      1677          move.l    D2,-(A7)
000013FE  2F05      1678          move.l    D5,-(A7)
00001400  4EB8 0F26 1679          jsr       @doscan_putback
00001404  504F      1680          addq.w    #8,A7
00001406  6000 0376 1681          bra       doscan_141
                    1682   doscan_40:
0000140A  0C83 0000 1683          cmp.l     #99,D3
0000140E  0063      
00001410  6600 0092 1684          bne       doscan_62
00001414  4A86      1685          tst.l     D6
00001416  660A      1686          bne.s     doscan_64
00001418  206E 0010 1687          move.l    16(A6),A0
0000141C  58AE 0010 1688          addq.l    #4,16(A6)
00001420  2E10      1689          move.l    (A0),D7
                    1690   doscan_64:
00001422  2F05      1691          move.l    D5,-(A7)
00001424  4E93      1692          jsr       (A3)
00001426  584F      1693          addq.w    #4,A7
00001428  2400      1694          move.l    D0,D2
0000142A  52AE FFE4 1695          addq.l    #1,-28(A6)
0000142E  200A      1696          move.l    A2,D0
00001430  0C80 0000 1697          cmp.l     #32767,D0
00001434  7FFF      
00001436  6604      1698          bne.s     doscan_66
00001438  347C 0001 1699          move.w    #1,A2
                    1700   doscan_66:
0000143C  0C82 FFFF 1701          cmp.l     #-1,D2
00001440  FFFF      
00001442  6606      1702          bne.s     doscan_68
00001444  4A86      1703          tst.l     D6
00001446  6602      1704          bne.s     doscan_68
00001448  5384      1705          subq.l    #1,D4
                    1706   doscan_68:
0000144A  200A      1707          move.l    A2,D0
0000144C  534A      1708          subq.w    #1,A2
0000144E  4A80      1709          tst.l     D0
00001450  6720      1710          beq.s     doscan_72
00001452  0C82 FFFF 1711          cmp.l     #-1,D2
00001456  FFFF      
00001458  6718      1712          beq.s     doscan_72
0000145A  4A86      1713          tst.l     D6
0000145C  6606      1714          bne.s     doscan_73
0000145E  2047      1715          move.l    D7,A0
00001460  5287      1716          addq.l    #1,D7
00001462  1082      1717          move.b    D2,(A0)
                    1718   doscan_73:
00001464  2F05      1719          move.l    D5,-(A7)
00001466  4E93      1720          jsr       (A3)
00001468  584F      1721          addq.w    #4,A7
0000146A  2400      1722          move.l    D0,D2
0000146C  52AE FFE4 1723          addq.l    #1,-28(A6)
00001470  60D8      1724          bra       doscan_68
                    1725   doscan_72:
00001472  0C82 FFFF 1726          cmp.l     #-1,D2
00001476  FFFF      
00001478  6612      1727          bne.s     doscan_75
0000147A  4A84      1728          tst.l     D4
0000147C  6704      1729          beq.s     doscan_77
0000147E  2004      1730          move.l    D4,D0
00001480  6006      1731          bra.s     doscan_78
                    1732   doscan_77:
00001482  70FF      1733          moveq     #-1,D0
00001484  4880      1734          ext.w     D0
00001486  48C0      1735          ext.l     D0
                    1736   doscan_78:
00001488  6000 02FA 1737          bra       doscan_15
                    1738   doscan_75:
0000148C  4A86      1739          tst.l     D6
0000148E  6602      1740          bne.s     doscan_79
00001490  5284      1741          addq.l    #1,D4
                    1742   doscan_79:
00001492  53AE FFE4 1743          subq.l    #1,-28(A6)
00001496  2F02      1744          move.l    D2,-(A7)
00001498  2F05      1745          move.l    D5,-(A7)
0000149A  4EB8 0F26 1746          jsr       @doscan_putback
0000149E  504F      1747          addq.w    #8,A7
000014A0  6000 02DC 1748          bra       doscan_141
                    1749   doscan_62:
000014A4  0C83 0000 1750          cmp.l     #105,D3
000014A8  0069      
000014AA  6600 0062 1751          bne       doscan_84
000014AE  486E FFE4 1752          pea       -28(A6)
000014B2  2F05      1753          move.l    D5,-(A7)
000014B4  4EB8 0F8A 1754          jsr       @doscan_space
000014B8  504F      1755          addq.w    #8,A7
000014BA  2400      1756          move.l    D0,D2
000014BC  0C82 0000 1757          cmp.l     #48,D2
000014C0  0030      
000014C2  6600 003A 1758          bne       doscan_83
000014C6  387C 0001 1759          move.w    #1,A4
000014CA  2F05      1760          move.l    D5,-(A7)
000014CC  4E93      1761          jsr       (A3)
000014CE  584F      1762          addq.w    #4,A7
000014D0  2400      1763          move.l    D0,D2
000014D2  2F02      1764          move.l    D2,-(A7)
000014D4  4EB9 0000 1765          jsr       _tolower
000014D8  1F74      
000014DA  584F      1766          addq.w    #4,A7
000014DC  0C80 0000 1767          cmp.l     #120,D0
000014E0  0078      
000014E2  6604      1768          bne.s     doscan_85
000014E4  7678      1769          moveq     #120,D3
000014E6  6010      1770          bra.s     doscan_86
                    1771   doscan_85:
000014E8  53AE FFE4 1772          subq.l    #1,-28(A6)
000014EC  2F02      1773          move.l    D2,-(A7)
000014EE  2F05      1774          move.l    D5,-(A7)
000014F0  4EB8 0F26 1775          jsr       @doscan_putback
000014F4  504F      1776          addq.w    #8,A7
000014F6  766F      1777          moveq     #111,D3
                    1778   doscan_86:
000014F8  52AE FFE4 1779          addq.l    #1,-28(A6)
000014FC  6010      1780          bra.s     doscan_84
                    1781   doscan_83:
000014FE  53AE FFE4 1782          subq.l    #1,-28(A6)
00001502  2F02      1783          move.l    D2,-(A7)
00001504  2F05      1784          move.l    D5,-(A7)
00001506  4EB8 0F26 1785          jsr       @doscan_putback
0000150A  504F      1786          addq.w    #8,A7
0000150C  7664      1787          moveq     #100,D3
                    1788   doscan_84:
0000150E  0C83 0000 1789          cmp.l     #100,D3
00001512  0064      
00001514  671A      1790          beq.s     doscan_89
00001516  0C83 0000 1791          cmp.l     #117,D3
0000151A  0075      
0000151C  6712      1792          beq.s     doscan_89
0000151E  0C83 0000 1793          cmp.l     #120,D3
00001522  0078      
00001524  670A      1794          beq.s     doscan_89
00001526  0C83 0000 1795          cmp.l     #111,D3
0000152A  006F      
0000152C  6600 01CA 1796          bne       doscan_87
                    1797   doscan_89:
00001530  486E FFE4 1798          pea       -28(A6)
00001534  2F05      1799          move.l    D5,-(A7)
00001536  4EB8 0F8A 1800          jsr       @doscan_space
0000153A  504F      1801          addq.w    #8,A7
0000153C  2400      1802          move.l    D0,D2
0000153E  2D7C 0000 1803          move.l    #10,-4(A6)
00001542  000A FFFC 
00001546  0C83 0000 1804          cmp.l     #120,D3
0000154A  0078      
0000154C  6608      1805          bne.s     doscan_90
0000154E  2D7C 0000 1806          move.l    #16,-4(A6)
00001552  0010 FFFC 
                    1807   doscan_90:
00001556  0C83 0000 1808          cmp.l     #111,D3
0000155A  006F      
0000155C  6608      1809          bne.s     doscan_92
0000155E  2D7C 0000 1810          move.l    #8,-4(A6)
00001562  0008 FFFC 
                    1811   doscan_92:
00001566  4A86      1812          tst.l     D6
00001568  660A      1813          bne.s     doscan_94
0000156A  206E 0010 1814          move.l    16(A6),A0
0000156E  58AE 0010 1815          addq.l    #4,16(A6)
00001572  2E10      1816          move.l    (A0),D7
                    1817   doscan_94:
00001574  42AE FFE0 1818          clr.l     -32(A6)
00001578  52AE FFE4 1819          addq.l    #1,-28(A6)
0000157C  0C83 0000 1820          cmp.l     #117,D3
00001580  0075      
00001582  6720      1821          beq.s     doscan_96
00001584  0C82 0000 1822          cmp.l     #45,D2
00001588  002D      
0000158A  6618      1823          bne.s     doscan_96
0000158C  2F05      1824          move.l    D5,-(A7)
0000158E  4E93      1825          jsr       (A3)
00001590  584F      1826          addq.w    #4,A7
00001592  2400      1827          move.l    D0,D2
00001594  52AE FFE4 1828          addq.l    #1,-28(A6)
00001598  2D7C 0000 1829          move.l    #1,-32(A6)
0000159C  0001 FFE0 
000015A0  387C 0001 1830          move.w    #1,A4
                    1831   doscan_96:
000015A4  3A7C 0000 1832          move.w    #0,A5
000015A8  0C82 FFFF 1833          cmp.l     #-1,D2
000015AC  FFFF      
000015AE  6612      1834          bne.s     doscan_98
000015B0  4A84      1835          tst.l     D4
000015B2  6704      1836          beq.s     doscan_100
000015B4  2004      1837          move.l    D4,D0
000015B6  6006      1838          bra.s     doscan_101
                    1839   doscan_100:
000015B8  70FF      1840          moveq     #-1,D0
000015BA  4880      1841          ext.w     D0
000015BC  48C0      1842          ext.l     D0
                    1843   doscan_101:
000015BE  6000 01C4 1844          bra       doscan_15
                    1845   doscan_98:
000015C2  200A      1846          move.l    A2,D0
000015C4  534A      1847          subq.w    #1,A2
000015C6  4A80      1848          tst.l     D0
000015C8  6700 00AA 1849          beq       doscan_104
000015CC  0C83 0000 1850          cmp.l     #120,D3
000015D0  0078      
000015D2  6624      1851          bne.s     doscan_106
000015D4  2F02      1852          move.l    D2,-(A7)
000015D6  4EB9 0000 1853          jsr       _toupper
000015DA  1FA6      
000015DC  584F      1854          addq.w    #4,A7
000015DE  0C80 0000 1855          cmp.l     #65,D0
000015E2  0041      
000015E4  6D12      1856          blt.s     doscan_106
000015E6  2F02      1857          move.l    D2,-(A7)
000015E8  4EB9 0000 1858          jsr       _toupper
000015EC  1FA6      
000015EE  584F      1859          addq.w    #4,A7
000015F0  0C80 0000 1860          cmp.l     #70,D0
000015F4  0046      
000015F6  6F1C      1861          ble.s     doscan_105
                    1862   doscan_106:
000015F8  2002      1863          move.l    D2,D0
000015FA  5280      1864          addq.l    #1,D0
000015FC  41F9 0000 1865          lea       __ctype.L,A0
00001600  26CE      
00001602  1030 0800 1866          move.b    0(A0,D0.L),D0
00001606  C03C 0004 1867          and.b     #4,D0
0000160A  C0BC 0000 1868          and.l     #255,D0
0000160E  00FF      
00001610  6700 0062 1869          beq       doscan_104
                    1870   doscan_105:
00001614  2002      1871          move.l    D2,D0
00001616  5280      1872          addq.l    #1,D0
00001618  41F9 0000 1873          lea       __ctype.L,A0
0000161C  26CE      
0000161E  1030 0800 1874          move.b    0(A0,D0.L),D0
00001622  C03C 0004 1875          and.b     #4,D0
00001626  661E      1876          bne.s     doscan_107
00001628  2F02      1877          move.l    D2,-(A7)
0000162A  4EB9 0000 1878          jsr       _toupper
0000162E  1FA6      
00001630  584F      1879          addq.w    #4,A7
00001632  0480 0000 1880          sub.l     #65,D0
00001636  0041      
00001638  0680 0000 1881          add.l     #10,D0
0000163C  000A      
0000163E  0680 0000 1882          add.l     #48,D0
00001642  0030      
00001644  2400      1883          move.l    D0,D2
                    1884   doscan_107:
00001646  2F0D      1885          move.l    A5,-(A7)
00001648  2F2E FFFC 1886          move.l    -4(A6),-(A7)
0000164C  4EB9 0000 1887          jsr       LMUL
00001650  1E70      
00001652  2017      1888          move.l    (A7),D0
00001654  504F      1889          addq.w    #8,A7
00001656  D082      1890          add.l     D2,D0
00001658  0480 0000 1891          sub.l     #48,D0
0000165C  0030      
0000165E  2A40      1892          move.l    D0,A5
00001660  2F05      1893          move.l    D5,-(A7)
00001662  4E93      1894          jsr       (A3)
00001664  584F      1895          addq.w    #4,A7
00001666  2400      1896          move.l    D0,D2
00001668  52AE FFE4 1897          addq.l    #1,-28(A6)
0000166C  387C 0001 1898          move.w    #1,A4
00001670  6000 FF50 1899          bra       doscan_98
                    1900   doscan_104:
00001674  0C82 FFFF 1901          cmp.l     #-1,D2
00001678  FFFF      
0000167A  671A      1902          beq.s     doscan_109
0000167C  2F02      1903          move.l    D2,-(A7)
0000167E  2F05      1904          move.l    D5,-(A7)
00001680  4EB8 0F26 1905          jsr       @doscan_putback
00001684  504F      1906          addq.w    #8,A7
00001686  53AE FFE4 1907          subq.l    #1,-28(A6)
0000168A  200C      1908          move.l    A4,D0
0000168C  6606      1909          bne.s     doscan_111
0000168E  2004      1910          move.l    D4,D0
00001690  6000 00F2 1911          bra       doscan_15
                    1912   doscan_111:
00001694  6016      1913          bra.s     doscan_113
                    1914   doscan_109:
00001696  200C      1915          move.l    A4,D0
00001698  6612      1916          bne.s     doscan_113
0000169A  4A84      1917          tst.l     D4
0000169C  6704      1918          beq.s     doscan_115
0000169E  2004      1919          move.l    D4,D0
000016A0  6006      1920          bra.s     doscan_116
                    1921   doscan_115:
000016A2  70FF      1922          moveq     #-1,D0
000016A4  4880      1923          ext.w     D0
000016A6  48C0      1924          ext.l     D0
                    1925   doscan_116:
000016A8  6000 00DA 1926          bra       doscan_15
                    1927   doscan_113:
000016AC  4AAE FFE0 1928          tst.l     -32(A6)
000016B0  6706      1929          beq.s     doscan_117
000016B2  200D      1930          move.l    A5,D0
000016B4  4480      1931          neg.l     D0
000016B6  2A40      1932          move.l    D0,A5
                    1933   doscan_117:
000016B8  4A86      1934          tst.l     D6
000016BA  661E      1935          bne.s     doscan_119
000016BC  4AAE FFE8 1936          tst.l     -24(A6)
000016C0  6706      1937          beq.s     doscan_121
000016C2  2047      1938          move.l    D7,A0
000016C4  208D      1939          move.l    A5,(A0)
000016C6  6010      1940          bra.s     doscan_124
                    1941   doscan_121:
000016C8  4AAE FFEC 1942          tst.l     -20(A6)
000016CC  6706      1943          beq.s     doscan_123
000016CE  2047      1944          move.l    D7,A0
000016D0  308D      1945          move.w    A5,(A0)
000016D2  6004      1946          bra.s     doscan_124
                    1947   doscan_123:
000016D4  2047      1948          move.l    D7,A0
000016D6  208D      1949          move.l    A5,(A0)
                    1950   doscan_124:
000016D8  5284      1951          addq.l    #1,D4
                    1952   doscan_119:
000016DA  0C82 FFFF 1953          cmp.l     #-1,D2
000016DE  FFFF      
000016E0  6612      1954          bne.s     doscan_125
000016E2  4A84      1955          tst.l     D4
000016E4  6704      1956          beq.s     doscan_127
000016E6  2004      1957          move.l    D4,D0
000016E8  6006      1958          bra.s     doscan_128
                    1959   doscan_127:
000016EA  70FF      1960          moveq     #-1,D0
000016EC  4880      1961          ext.w     D0
000016EE  48C0      1962          ext.l     D0
                    1963   doscan_128:
000016F0  6000 0092 1964          bra       doscan_15
                    1965   doscan_125:
000016F4  6000 0088 1966          bra       doscan_141
                    1967   doscan_87:
000016F8  0C83 0000 1968          cmp.l     #37,D3
000016FC  0025      
000016FE  6600 0044 1969          bne       doscan_129
00001702  2F05      1970          move.l    D5,-(A7)
00001704  4E93      1971          jsr       (A3)
00001706  584F      1972          addq.w    #4,A7
00001708  2400      1973          move.l    D0,D2
0000170A  0C82 FFFF 1974          cmp.l     #-1,D2
0000170E  FFFF      
00001710  6612      1975          bne.s     doscan_131
00001712  4A84      1976          tst.l     D4
00001714  6704      1977          beq.s     doscan_133
00001716  2004      1978          move.l    D4,D0
00001718  6006      1979          bra.s     doscan_134
                    1980   doscan_133:
0000171A  70FF      1981          moveq     #-1,D0
0000171C  4880      1982          ext.w     D0
0000171E  48C0      1983          ext.l     D0
                    1984   doscan_134:
00001720  6000 0062 1985          bra       doscan_15
                    1986   doscan_131:
00001724  52AE FFE4 1987          addq.l    #1,-28(A6)
00001728  B483      1988          cmp.l     D3,D2
0000172A  6714      1989          beq.s     doscan_135
0000172C  2F02      1990          move.l    D2,-(A7)
0000172E  2F05      1991          move.l    D5,-(A7)
00001730  4EB8 0F26 1992          jsr       @doscan_putback
00001734  504F      1993          addq.w    #8,A7
00001736  53AE FFE4 1994          subq.l    #1,-28(A6)
0000173A  2004      1995          move.l    D4,D0
0000173C  6000 0046 1996          bra       doscan_15
                    1997   doscan_135:
00001740  6000 003C 1998          bra       doscan_141
                    1999   doscan_129:
00001744  2F05      2000          move.l    D5,-(A7)
00001746  4E93      2001          jsr       (A3)
00001748  584F      2002          addq.w    #4,A7
0000174A  2400      2003          move.l    D0,D2
0000174C  52AE FFE4 2004          addq.l    #1,-28(A6)
00001750  0C82 FFFF 2005          cmp.l     #-1,D2
00001754  FFFF      
00001756  6610      2006          bne.s     doscan_137
00001758  4A84      2007          tst.l     D4
0000175A  6704      2008          beq.s     doscan_139
0000175C  2004      2009          move.l    D4,D0
0000175E  6006      2010          bra.s     doscan_140
                    2011   doscan_139:
00001760  70FF      2012          moveq     #-1,D0
00001762  4880      2013          ext.w     D0
00001764  48C0      2014          ext.l     D0
                    2015   doscan_140:
00001766  601C      2016          bra.s     doscan_15
                    2017   doscan_137:
00001768  B483      2018          cmp.l     D3,D2
0000176A  6712      2019          beq.s     doscan_141
0000176C  2F02      2020          move.l    D2,-(A7)
0000176E  2F05      2021          move.l    D5,-(A7)
00001770  4EB8 0F26 2022          jsr       @doscan_putback
00001774  504F      2023          addq.w    #8,A7
00001776  53AE FFE4 2024          subq.l    #1,-28(A6)
0000177A  2004      2025          move.l    D4,D0
0000177C  6006      2026          bra.s     doscan_15
                    2027   doscan_141:
0000177E  6000 F9EC 2028          bra       doscan_3
                    2029   doscan_5:
00001782  2004      2030          move.l    D4,D0
                    2031   doscan_15:
00001784  4CDF 3CFC 2032          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
00001788  4E5E      2033          unlk      A6
0000178A  4E75      2034          rts
                    2035   @doprint_copy:
0000178C  4E56 0000 2036          link      A6,#0
00001790  206E 0008 2037          move.l    8(A6),A0
00001794  4A90      2038          tst.l     (A0)
00001796  6710      2039          beq.s     @doprint_copy_1
00001798  202E 000C 2040          move.l    12(A6),D0
0000179C  206E 0008 2041          move.l    8(A6),A0
000017A0  2250      2042          move.l    (A0),A1
000017A2  5290      2043          addq.l    #1,(A0)
000017A4  1280      2044          move.b    D0,(A1)
000017A6  600C      2045          bra.s     @doprint_copy_2
                    2046   @doprint_copy_1:
000017A8  2F2E 000C 2047          move.l    12(A6),-(A7)
000017AC  4EB9 0000 2048          jsr       _putch
000017B0  214C      
000017B2  584F      2049          addq.w    #4,A7
                    2050   @doprint_copy_2:
000017B4  4E5E      2051          unlk      A6
000017B6  4E75      2052          rts
                    2053   @doprint_getval:
000017B8  4E56 0000 2054          link      A6,#0
000017BC  48E7 3000 2055          movem.l   D2/D3,-(A7)
000017C0  262E 0008 2056          move.l    8(A6),D3
000017C4  4282      2057          clr.l     D2
000017C6  2043      2058          move.l    D3,A0
000017C8  2050      2059          move.l    (A0),A0
000017CA  1010      2060          move.b    (A0),D0
000017CC  0C00 002A 2061          cmp.b     #42,D0
000017D0  6612      2062          bne.s     @doprint_getval_1
000017D2  206E 000C 2063          move.l    12(A6),A0
000017D6  2250      2064          move.l    (A0),A1
000017D8  5890      2065          addq.l    #4,(A0)
000017DA  2411      2066          move.l    (A1),D2
000017DC  2043      2067          move.l    D3,A0
000017DE  5290      2068          addq.l    #1,(A0)
000017E0  6000 0048 2069          bra       @doprint_getval_5
                    2070   @doprint_getval_1:
000017E4  7001      2071          moveq     #1,D0
000017E6  2043      2072          move.l    D3,A0
000017E8  2050      2073          move.l    (A0),A0
000017EA  1210      2074          move.b    (A0),D1
000017EC  4881      2075          ext.w     D1
000017EE  48C1      2076          ext.l     D1
000017F0  D081      2077          add.l     D1,D0
000017F2  41F9 0000 2078          lea       __ctype.L,A0
000017F6  26CE      
000017F8  1030 0800 2079          move.b    0(A0,D0.L),D0
000017FC  C03C 0004 2080          and.b     #4,D0
00001800  6728      2081          beq.s     @doprint_getval_5
00001802  2F02      2082          move.l    D2,-(A7)
00001804  4878 000A 2083          pea       10
00001808  4EB9 0000 2084          jsr       LMUL
0000180C  1E70      
0000180E  2017      2085          move.l    (A7),D0
00001810  504F      2086          addq.w    #8,A7
00001812  2043      2087          move.l    D3,A0
00001814  2250      2088          move.l    (A0),A1
00001816  5290      2089          addq.l    #1,(A0)
00001818  1211      2090          move.b    (A1),D1
0000181A  4881      2091          ext.w     D1
0000181C  48C1      2092          ext.l     D1
0000181E  D081      2093          add.l     D1,D0
00001820  0480 0000 2094          sub.l     #48,D0
00001824  0030      
00001826  2400      2095          move.l    D0,D2
00001828  60BA      2096          bra       @doprint_getval_1
                    2097   @doprint_getval_5:
0000182A  2002      2098          move.l    D2,D0
0000182C  4CDF 000C 2099          movem.l   (A7)+,D2/D3
00001830  4E5E      2100          unlk      A6
00001832  4E75      2101          rts
                    2102   _doprint:
00001834  4E56 FFCC 2103          link      A6,#-52
00001838  48E7 3F3C 2104          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
0000183C  45EE 0008 2105          lea       8(A6),A2
00001840  47F8 178C 2106          lea       @doprint_copy.L,A3
00001844  49F9 0000 2107          lea       _ultoa.L,A4
00001848  20D8      
0000184A  4286      2108          clr.l     D6
                    2109   doprint_1:
0000184C  206E 000C 2110          move.l    12(A6),A0
00001850  4A10      2111          tst.b     (A0)
00001852  6700 05EC 2112          beq       doprint_3
00001856  206E 000C 2113          move.l    12(A6),A0
0000185A  1010      2114          move.b    (A0),D0
0000185C  0C00 0025 2115          cmp.b     #37,D0
00001860  671C      2116          beq.s     doprint_4
00001862  206E 000C 2117          move.l    12(A6),A0
00001866  52AE 000C 2118          addq.l    #1,12(A6)
0000186A  1210      2119          move.b    (A0),D1
0000186C  4881      2120          ext.w     D1
0000186E  48C1      2121          ext.l     D1
00001870  2F01      2122          move.l    D1,-(A7)
00001872  2F0A      2123          move.l    A2,-(A7)
00001874  4E93      2124          jsr       (A3)
00001876  504F      2125          addq.w    #8,A7
00001878  5286      2126          addq.l    #1,D6
0000187A  6000 05C0 2127          bra       doprint_2
                    2128   doprint_4:
0000187E  52AE 000C 2129          addq.l    #1,12(A6)
00001882  422E FFD3 2130          clr.b     -45(A6)
00001886  422E FFD2 2131          clr.b     -46(A6)
0000188A  422E FFD0 2132          clr.b     -48(A6)
0000188E  422E FFCF 2133          clr.b     -49(A6)
00001892  422E FFCE 2134          clr.b     -50(A6)
00001896  422E FFCD 2135          clr.b     -51(A6)
0000189A  42AE FFFC 2136          clr.l     -4(A6)
0000189E  7AFF      2137          moveq     #-1,D5
000018A0  41EE FFDC 2138          lea       -36(A6),A0
000018A4  2608      2139          move.l    A0,D3
000018A6  2408      2140          move.l    A0,D2
                    2141   doprint_6:
000018A8  206E 000C 2142          move.l    12(A6),A0
000018AC  1010      2143          move.b    (A0),D0
000018AE  4880      2144          ext.w     D0
000018B0  48C0      2145          ext.l     D0
000018B2  0C80 0000 2146          cmp.l     #43,D0
000018B6  002B      
000018B8  6730      2147          beq.s     doprint_12
000018BA  6E18      2148          bgt.s     doprint_15
000018BC  0C80 0000 2149          cmp.l     #35,D0
000018C0  0023      
000018C2  6700 003E 2150          beq       doprint_14
000018C6  6E00 0046 2151          bgt       doprint_9
000018CA  0C80 0000 2152          cmp.l     #32,D0
000018CE  0020      
000018D0  6724      2153          beq.s     doprint_13
000018D2  603A      2154          bra.s     doprint_9
                    2155   doprint_15:
000018D4  0C80 0000 2156          cmp.l     #45,D0
000018D8  002D      
000018DA  6702      2157          beq.s     doprint_11
000018DC  6030      2158          bra.s     doprint_9
                    2159   doprint_11:
000018DE  1D7C 0001 2160          move.b    #1,-51(A6)
000018E2  FFCD      
000018E4  52AE 000C 2161          addq.l    #1,12(A6)
000018E8  6026      2162          bra.s     doprint_7
                    2163   doprint_12:
000018EA  1D7C 0001 2164          move.b    #1,-50(A6)
000018EE  FFCE      
000018F0  52AE 000C 2165          addq.l    #1,12(A6)
000018F4  601A      2166          bra.s     doprint_7
                    2167   doprint_13:
000018F6  1D7C 0001 2168          move.b    #1,-49(A6)
000018FA  FFCF      
000018FC  52AE 000C 2169          addq.l    #1,12(A6)
00001900  600E      2170          bra.s     doprint_7
                    2171   doprint_14:
00001902  1D7C 0001 2172          move.b    #1,-48(A6)
00001906  FFD0      
00001908  52AE 000C 2173          addq.l    #1,12(A6)
0000190C  6002      2174          bra.s     doprint_7
                    2175   doprint_9:
0000190E  6002      2176          bra.s     doprint_8
                    2177   doprint_7:
00001910  6096      2178          bra       doprint_6
                    2179   doprint_8:
00001912  206E 000C 2180          move.l    12(A6),A0
00001916  1010      2181          move.b    (A0),D0
00001918  0C00 0030 2182          cmp.b     #48,D0
0000191C  660A      2183          bne.s     doprint_16
0000191E  52AE 000C 2184          addq.l    #1,12(A6)
00001922  1D7C 0001 2185          move.b    #1,-46(A6)
00001926  FFD2      
                    2186   doprint_16:
00001928  486E 0010 2187          pea       16(A6)
0000192C  486E 000C 2188          pea       12(A6)
00001930  4EB8 17B8 2189          jsr       @doprint_getval
00001934  504F      2190          addq.w    #8,A7
00001936  2A40      2191          move.l    D0,A5
00001938  206E 000C 2192          move.l    12(A6),A0
0000193C  1010      2193          move.b    (A0),D0
0000193E  0C00 002E 2194          cmp.b     #46,D0
00001942  6614      2195          bne.s     doprint_18
00001944  52AE 000C 2196          addq.l    #1,12(A6)
00001948  486E 0010 2197          pea       16(A6)
0000194C  486E 000C 2198          pea       12(A6)
00001950  4EB8 17B8 2199          jsr       @doprint_getval
00001954  504F      2200          addq.w    #8,A7
00001956  2A00      2201          move.l    D0,D5
                    2202   doprint_18:
00001958  206E 000C 2203          move.l    12(A6),A0
0000195C  1010      2204          move.b    (A0),D0
0000195E  0C00 006C 2205          cmp.b     #108,D0
00001962  660A      2206          bne.s     doprint_20
00001964  52AE 000C 2207          addq.l    #1,12(A6)
00001968  1D7C 0001 2208          move.b    #1,-45(A6)
0000196C  FFD3      
                    2209   doprint_20:
0000196E  206E 000C 2210          move.l    12(A6),A0
00001972  1010      2211          move.b    (A0),D0
00001974  4880      2212          ext.w     D0
00001976  48C0      2213          ext.l     D0
00001978  0C80 0000 2214          cmp.l     #111,D0
0000197C  006F      
0000197E  6700 00D8 2215          beq       doprint_27
00001982  6E34      2216          bgt.s     doprint_33
00001984  0C80 0000 2217          cmp.l     #100,D0
00001988  0064      
0000198A  6700 0054 2218          beq       doprint_24
0000198E  6E1C      2219          bgt.s     doprint_34
00001990  0C80 0000 2220          cmp.l     #99,D0
00001994  0063      
00001996  6700 0130 2221          beq       doprint_30
0000199A  6E00 0174 2222          bgt       doprint_22
0000199E  0C80 0000 2223          cmp.l     #88,D0
000019A2  0058      
000019A4  6700 00EA 2224          beq       doprint_28
000019A8  6000 0166 2225          bra       doprint_22
                    2226   doprint_34:
000019AC  0C80 0000 2227          cmp.l     #105,D0
000019B0  0069      
000019B2  672C      2228          beq.s     doprint_24
000019B4  6000 015A 2229          bra       doprint_22
                    2230   doprint_33:
000019B8  0C80 0000 2231          cmp.l     #117,D0
000019BC  0075      
000019BE  6700 0060 2232          beq       doprint_26
000019C2  6E0E      2233          bgt.s     doprint_35
000019C4  0C80 0000 2234          cmp.l     #115,D0
000019C8  0073      
000019CA  6700 0124 2235          beq       doprint_31
000019CE  6000 0140 2236          bra       doprint_22
                    2237   doprint_35:
000019D2  0C80 0000 2238          cmp.l     #120,D0
000019D6  0078      
000019D8  6700 00B6 2239          beq       doprint_28
000019DC  6000 0132 2240          bra       doprint_22
                    2241   doprint_24:
000019E0  4A2E FFD3 2242          tst.b     -45(A6)
000019E4  671C      2243          beq.s     doprint_36
000019E6  4878 000A 2244          pea       10
000019EA  2F03      2245          move.l    D3,-(A7)
000019EC  206E 0010 2246          move.l    16(A6),A0
000019F0  58AE 0010 2247          addq.l    #4,16(A6)
000019F4  2F10      2248          move.l    (A0),-(A7)
000019F6  4EB9 0000 2249          jsr       _ltoa
000019FA  2052      
000019FC  DEFC 000C 2250          add.w     #12,A7
00001A00  601A      2251          bra.s     doprint_37
                    2252   doprint_36:
00001A02  4878 000A 2253          pea       10
00001A06  2F03      2254          move.l    D3,-(A7)
00001A08  206E 0010 2255          move.l    16(A6),A0
00001A0C  58AE 0010 2256          addq.l    #4,16(A6)
00001A10  2F10      2257          move.l    (A0),-(A7)
00001A12  4EB9 0000 2258          jsr       _ltoa
00001A16  2052      
00001A18  DEFC 000C 2259          add.w     #12,A7
                    2260   doprint_37:
00001A1C  6000 0100 2261          bra       doprint_23
                    2262   doprint_26:
00001A20  4A2E FFD3 2263          tst.b     -45(A6)
00001A24  6718      2264          beq.s     doprint_38
00001A26  4878 000A 2265          pea       10
00001A2A  2F03      2266          move.l    D3,-(A7)
00001A2C  206E 0010 2267          move.l    16(A6),A0
00001A30  58AE 0010 2268          addq.l    #4,16(A6)
00001A34  2F10      2269          move.l    (A0),-(A7)
00001A36  4E94      2270          jsr       (A4)
00001A38  DEFC 000C 2271          add.w     #12,A7
00001A3C  6016      2272          bra.s     doprint_39
                    2273   doprint_38:
00001A3E  4878 000A 2274          pea       10
00001A42  2F03      2275          move.l    D3,-(A7)
00001A44  206E 0010 2276          move.l    16(A6),A0
00001A48  58AE 0010 2277          addq.l    #4,16(A6)
00001A4C  2F10      2278          move.l    (A0),-(A7)
00001A4E  4E94      2279          jsr       (A4)
00001A50  DEFC 000C 2280          add.w     #12,A7
                    2281   doprint_39:
00001A54  6000 00C8 2282          bra       doprint_23
                    2283   doprint_27:
00001A58  4A2E FFD3 2284          tst.b     -45(A6)
00001A5C  6718      2285          beq.s     doprint_40
00001A5E  4878 0008 2286          pea       8
00001A62  2F03      2287          move.l    D3,-(A7)
00001A64  206E 0010 2288          move.l    16(A6),A0
00001A68  58AE 0010 2289          addq.l    #4,16(A6)
00001A6C  2F10      2290          move.l    (A0),-(A7)
00001A6E  4E94      2291          jsr       (A4)
00001A70  DEFC 000C 2292          add.w     #12,A7
00001A74  6016      2293          bra.s     doprint_41
                    2294   doprint_40:
00001A76  4878 0008 2295          pea       8
00001A7A  2F03      2296          move.l    D3,-(A7)
00001A7C  206E 0010 2297          move.l    16(A6),A0
00001A80  58AE 0010 2298          addq.l    #4,16(A6)
00001A84  2F10      2299          move.l    (A0),-(A7)
00001A86  4E94      2300          jsr       (A4)
00001A88  DEFC 000C 2301          add.w     #12,A7
                    2302   doprint_41:
00001A8C  6000 0090 2303          bra       doprint_23
                    2304   doprint_28:
00001A90  4A2E FFD3 2305          tst.b     -45(A6)
00001A94  6718      2306          beq.s     doprint_42
00001A96  4878 0010 2307          pea       16
00001A9A  2F03      2308          move.l    D3,-(A7)
00001A9C  206E 0010 2309          move.l    16(A6),A0
00001AA0  58AE 0010 2310          addq.l    #4,16(A6)
00001AA4  2F10      2311          move.l    (A0),-(A7)
00001AA6  4E94      2312          jsr       (A4)
00001AA8  DEFC 000C 2313          add.w     #12,A7
00001AAC  6016      2314          bra.s     doprint_43
                    2315   doprint_42:
00001AAE  4878 0010 2316          pea       16
00001AB2  2F03      2317          move.l    D3,-(A7)
00001AB4  206E 0010 2318          move.l    16(A6),A0
00001AB8  58AE 0010 2319          addq.l    #4,16(A6)
00001ABC  2F10      2320          move.l    (A0),-(A7)
00001ABE  4E94      2321          jsr       (A4)
00001AC0  DEFC 000C 2322          add.w     #12,A7
                    2323   doprint_43:
00001AC4  6000 0058 2324          bra       doprint_23
                    2325   doprint_30:
00001AC8  206E 0010 2326          move.l    16(A6),A0
00001ACC  58AE 0010 2327          addq.l    #4,16(A6)
00001AD0  2010      2328          move.l    (A0),D0
00001AD2  2042      2329          move.l    D2,A0
00001AD4  5282      2330          addq.l    #1,D2
00001AD6  1080      2331          move.b    D0,(A0)
00001AD8  2042      2332          move.l    D2,A0
00001ADA  4210      2333          clr.b     (A0)
00001ADC  200D      2334          move.l    A5,D0
00001ADE  6704      2335          beq.s     doprint_44
00001AE0  200D      2336          move.l    A5,D0
00001AE2  6006      2337          bra.s     doprint_45
                    2338   doprint_44:
00001AE4  7001      2339          moveq     #1,D0
00001AE6  4880      2340          ext.w     D0
00001AE8  48C0      2341          ext.l     D0
                    2342   doprint_45:
00001AEA  2A00      2343          move.l    D0,D5
00001AEC  6000 0030 2344          bra       doprint_23
                    2345   doprint_31:
00001AF0  206E 0010 2346          move.l    16(A6),A0
00001AF4  58AE 0010 2347          addq.l    #4,16(A6)
00001AF8  2610      2348          move.l    (A0),D3
00001AFA  0C85 FFFF 2349          cmp.l     #-1,D5
00001AFE  FFFF      
00001B00  660C      2350          bne.s     doprint_46
00001B02  2F03      2351          move.l    D3,-(A7)
00001B04  4EB9 0000 2352          jsr       _strlen
00001B08  213A      
00001B0A  584F      2353          addq.w    #4,A7
00001B0C  2A00      2354          move.l    D0,D5
                    2355   doprint_46:
00001B0E  600E      2356          bra.s     doprint_23
                    2357   doprint_22:
00001B10  206E 000C 2358          move.l    12(A6),A0
00001B14  2242      2359          move.l    D2,A1
00001B16  5282      2360          addq.l    #1,D2
00001B18  1290      2361          move.b    (A0),(A1)
00001B1A  2042      2362          move.l    D2,A0
00001B1C  4210      2363          clr.b     (A0)
                    2364   doprint_23:
00001B1E  2F03      2365          move.l    D3,-(A7)
00001B20  4EB9 0000 2366          jsr       _strlen
00001B24  213A      
00001B26  584F      2367          addq.w    #4,A7
00001B28  1800      2368          move.b    D0,D4
00001B2A  206E 000C 2369          move.l    12(A6),A0
00001B2E  1010      2370          move.b    (A0),D0
00001B30  0C00 0073 2371          cmp.b     #115,D0
00001B34  661C      2372          bne.s     doprint_48
00001B36  0C85 0000 2373          cmp.l     #0,D5
00001B3A  0000      
00001B3C  6D14      2374          blt.s     doprint_48
00001B3E  4884      2375          ext.w     D4
00001B40  48C4      2376          ext.l     D4
00001B42  B885      2377          cmp.l     D5,D4
00001B44  6F04      2378          ble.s     doprint_50
00001B46  2005      2379          move.l    D5,D0
00001B48  6006      2380          bra.s     doprint_51
                    2381   doprint_50:
00001B4A  1004      2382          move.b    D4,D0
00001B4C  4880      2383          ext.w     D0
00001B4E  48C0      2384          ext.l     D0
                    2385   doprint_51:
00001B50  1800      2386          move.b    D0,D4
                    2387   doprint_48:
00001B52  206E 000C 2388          move.l    12(A6),A0
00001B56  1010      2389          move.b    (A0),D0
00001B58  0C00 0058 2390          cmp.b     #88,D0
00001B5C  6600 0028 2391          bne       doprint_56
00001B60  41EE FFDC 2392          lea       -36(A6),A0
00001B64  2408      2393          move.l    A0,D2
                    2394   doprint_54:
00001B66  2042      2395          move.l    D2,A0
00001B68  4A10      2396          tst.b     (A0)
00001B6A  671A      2397          beq.s     doprint_56
00001B6C  2042      2398          move.l    D2,A0
00001B6E  1210      2399          move.b    (A0),D1
00001B70  4881      2400          ext.w     D1
00001B72  48C1      2401          ext.l     D1
00001B74  2F01      2402          move.l    D1,-(A7)
00001B76  4EB9 0000 2403          jsr       _toupper
00001B7A  1FA6      
00001B7C  584F      2404          addq.w    #4,A7
00001B7E  2042      2405          move.l    D2,A0
00001B80  1080      2406          move.b    D0,(A0)
00001B82  5282      2407          addq.l    #1,D2
00001B84  60E0      2408          bra       doprint_54
                    2409   doprint_56:
00001B86  7E00      2410          moveq     #0,D7
00001B88  41EE FFD4 2411          lea       -44(A6),A0
00001B8C  2408      2412          move.l    A0,D2
00001B8E  206E 000C 2413          move.l    12(A6),A0
00001B92  1010      2414          move.b    (A0),D0
00001B94  0C00 0064 2415          cmp.b     #100,D0
00001B98  670E      2416          beq.s     doprint_59
00001B9A  206E 000C 2417          move.l    12(A6),A0
00001B9E  1010      2418          move.b    (A0),D0
00001BA0  0C00 0069 2419          cmp.b     #105,D0
00001BA4  6600 0068 2420          bne       doprint_65
                    2421   doprint_59:
00001BA8  102E FFCE 2422          move.b    -50(A6),D0
00001BAC  4880      2423          ext.w     D0
00001BAE  48C0      2424          ext.l     D0
00001BB0  4A80      2425          tst.l     D0
00001BB2  660C      2426          bne.s     doprint_62
00001BB4  2043      2427          move.l    D3,A0
00001BB6  1010      2428          move.b    (A0),D0
00001BB8  0C00 002D 2429          cmp.b     #45,D0
00001BBC  6600 0028 2430          bne       doprint_60
                    2431   doprint_62:
00001BC0  2043      2432          move.l    D3,A0
00001BC2  1010      2433          move.b    (A0),D0
00001BC4  0C00 002D 2434          cmp.b     #45,D0
00001BC8  660E      2435          bne.s     doprint_63
00001BCA  2043      2436          move.l    D3,A0
00001BCC  5283      2437          addq.l    #1,D3
00001BCE  2242      2438          move.l    D2,A1
00001BD0  5282      2439          addq.l    #1,D2
00001BD2  1290      2440          move.b    (A0),(A1)
00001BD4  5304      2441          subq.b    #1,D4
00001BD6  6008      2442          bra.s     doprint_64
                    2443   doprint_63:
00001BD8  2042      2444          move.l    D2,A0
00001BDA  5282      2445          addq.l    #1,D2
00001BDC  10BC 002B 2446          move.b    #43,(A0)
                    2447   doprint_64:
00001BE0  5287      2448          addq.l    #1,D7
00001BE2  6000 002A 2449          bra       doprint_65
                    2450   doprint_60:
00001BE6  4A2E FFCF 2451          tst.b     -49(A6)
00001BEA  6722      2452          beq.s     doprint_65
00001BEC  2043      2453          move.l    D3,A0
00001BEE  1010      2454          move.b    (A0),D0
00001BF0  0C00 002D 2455          cmp.b     #45,D0
00001BF4  660E      2456          bne.s     doprint_67
00001BF6  2043      2457          move.l    D3,A0
00001BF8  5283      2458          addq.l    #1,D3
00001BFA  2242      2459          move.l    D2,A1
00001BFC  5282      2460          addq.l    #1,D2
00001BFE  1290      2461          move.b    (A0),(A1)
00001C00  5304      2462          subq.b    #1,D4
00001C02  6008      2463          bra.s     doprint_68
                    2464   doprint_67:
00001C04  2042      2465          move.l    D2,A0
00001C06  5282      2466          addq.l    #1,D2
00001C08  10BC 0020 2467          move.b    #32,(A0)
                    2468   doprint_68:
00001C0C  5287      2469          addq.l    #1,D7
                    2470   doprint_65:
00001C0E  4A2E FFD0 2471          tst.b     -48(A6)
00001C12  6700 005A 2472          beq       doprint_77
00001C16  206E 000C 2473          move.l    12(A6),A0
00001C1A  1010      2474          move.b    (A0),D0
00001C1C  4880      2475          ext.w     D0
00001C1E  48C0      2476          ext.l     D0
00001C20  0C80 0000 2477          cmp.l     #111,D0
00001C24  006F      
00001C26  671A      2478          beq.s     doprint_73
00001C28  6E0C      2479          bgt.s     doprint_76
00001C2A  0C80 0000 2480          cmp.l     #88,D0
00001C2E  0058      
00001C30  6710      2481          beq.s     doprint_73
00001C32  6000 003A 2482          bra       doprint_77
                    2483   doprint_76:
00001C36  0C80 0000 2484          cmp.l     #120,D0
00001C3A  0078      
00001C3C  6704      2485          beq.s     doprint_73
00001C3E  6000 002E 2486          bra       doprint_77
                    2487   doprint_73:
00001C42  2042      2488          move.l    D2,A0
00001C44  5282      2489          addq.l    #1,D2
00001C46  10BC 0030 2490          move.b    #48,(A0)
00001C4A  5287      2491          addq.l    #1,D7
00001C4C  206E 000C 2492          move.l    12(A6),A0
00001C50  1010      2493          move.b    (A0),D0
00001C52  0C00 0078 2494          cmp.b     #120,D0
00001C56  670C      2495          beq.s     doprint_79
00001C58  206E 000C 2496          move.l    12(A6),A0
00001C5C  1010      2497          move.b    (A0),D0
00001C5E  0C00 0058 2498          cmp.b     #88,D0
00001C62  660A      2499          bne.s     doprint_77
                    2500   doprint_79:
00001C64  2042      2501          move.l    D2,A0
00001C66  5282      2502          addq.l    #1,D2
00001C68  10BC 0078 2503          move.b    #120,(A0)
00001C6C  5287      2504          addq.l    #1,D7
                    2505   doprint_77:
00001C6E  2042      2506          move.l    D2,A0
00001C70  4210      2507          clr.b     (A0)
00001C72  206E 000C 2508          move.l    12(A6),A0
00001C76  1010      2509          move.b    (A0),D0
00001C78  4880      2510          ext.w     D0
00001C7A  48C0      2511          ext.l     D0
00001C7C  0C80 0000 2512          cmp.l     #105,D0
00001C80  0069      
00001C82  6700 0076 2513          beq       doprint_82
00001C86  6E42      2514          bgt.s     doprint_93
00001C88  0C80 0000 2515          cmp.l     #99,D0
00001C8C  0063      
00001C8E  6700 0084 2516          beq       doprint_96
00001C92  6E1C      2517          bgt.s     doprint_94
00001C94  0C80 0000 2518          cmp.l     #88,D0
00001C98  0058      
00001C9A  6700 005E 2519          beq       doprint_82
00001C9E  6E00 0184 2520          bgt       doprint_80
00001CA2  0C80 0000 2521          cmp.l     #69,D0
00001CA6  0045      
00001CA8  6700 0050 2522          beq       doprint_82
00001CAC  6000 0176 2523          bra       doprint_80
                    2524   doprint_94:
00001CB0  0C80 0000 2525          cmp.l     #101,D0
00001CB4  0065      
00001CB6  6700 0042 2526          beq       doprint_82
00001CBA  6E00 0168 2527          bgt       doprint_80
00001CBE  0C80 0000 2528          cmp.l     #100,D0
00001CC2  0064      
00001CC4  6734      2529          beq.s     doprint_82
00001CC6  6000 015C 2530          bra       doprint_80
                    2531   doprint_93:
00001CCA  0C80 0000 2532          cmp.l     #117,D0
00001CCE  0075      
00001CD0  6728      2533          beq.s     doprint_82
00001CD2  6E1A      2534          bgt.s     doprint_95
00001CD4  0C80 0000 2535          cmp.l     #115,D0
00001CD8  0073      
00001CDA  6700 0038 2536          beq       doprint_96
00001CDE  6E00 0144 2537          bgt       doprint_80
00001CE2  0C80 0000 2538          cmp.l     #111,D0
00001CE6  006F      
00001CE8  6710      2539          beq.s     doprint_82
00001CEA  6000 0138 2540          bra       doprint_80
                    2541   doprint_95:
00001CEE  0C80 0000 2542          cmp.l     #120,D0
00001CF2  0078      
00001CF4  6704      2543          beq.s     doprint_82
00001CF6  6000 012C 2544          bra       doprint_80
                    2545   doprint_82:
00001CFA  4A2E FFD2 2546          tst.b     -46(A6)
00001CFE  6714      2547          beq.s     doprint_96
00001D00  4A2E FFCD 2548          tst.b     -51(A6)
00001D04  660E      2549          bne.s     doprint_96
00001D06  200D      2550          move.l    A5,D0
00001D08  9087      2551          sub.l     D7,D0
00001D0A  4884      2552          ext.w     D4
00001D0C  48C4      2553          ext.l     D4
00001D0E  9084      2554          sub.l     D4,D0
00001D10  2D40 FFFC 2555          move.l    D0,-4(A6)
                    2556   doprint_96:
00001D14  202E FFFC 2557          move.l    -4(A6),D0
00001D18  0C80 0000 2558          cmp.l     #0,D0
00001D1C  0000      
00001D1E  6C04      2559          bge.s     doprint_98
00001D20  42AE FFFC 2560          clr.l     -4(A6)
                    2561   doprint_98:
00001D24  4A2E FFCD 2562          tst.b     -51(A6)
00001D28  6600 0030 2563          bne       doprint_104
00001D2C  1004      2564          move.b    D4,D0
00001D2E  4880      2565          ext.w     D0
00001D30  48C0      2566          ext.l     D0
00001D32  D0AE FFFC 2567          add.l     -4(A6),D0
00001D36  D087      2568          add.l     D7,D0
00001D38  1D40 FFD1 2569          move.b    D0,-47(A6)
                    2570   doprint_102:
00001D3C  102E FFD1 2571          move.b    -47(A6),D0
00001D40  4880      2572          ext.w     D0
00001D42  48C0      2573          ext.l     D0
00001D44  220D      2574          move.l    A5,D1
00001D46  534D      2575          subq.w    #1,A5
00001D48  B081      2576          cmp.l     D1,D0
00001D4A  6C0E      2577          bge.s     doprint_104
00001D4C  4878 0020 2578          pea       32
00001D50  2F0A      2579          move.l    A2,-(A7)
00001D52  4E93      2580          jsr       (A3)
00001D54  504F      2581          addq.w    #8,A7
00001D56  5286      2582          addq.l    #1,D6
00001D58  60E2      2583          bra       doprint_102
                    2584   doprint_104:
00001D5A  41EE FFD4 2585          lea       -44(A6),A0
00001D5E  2408      2586          move.l    A0,D2
                    2587   doprint_105:
00001D60  2042      2588          move.l    D2,A0
00001D62  4A10      2589          tst.b     (A0)
00001D64  6716      2590          beq.s     doprint_107
00001D66  2042      2591          move.l    D2,A0
00001D68  5282      2592          addq.l    #1,D2
00001D6A  1210      2593          move.b    (A0),D1
00001D6C  4881      2594          ext.w     D1
00001D6E  48C1      2595          ext.l     D1
00001D70  2F01      2596          move.l    D1,-(A7)
00001D72  2F0A      2597          move.l    A2,-(A7)
00001D74  4E93      2598          jsr       (A3)
00001D76  504F      2599          addq.w    #8,A7
00001D78  5286      2600          addq.l    #1,D6
00001D7A  60E4      2601          bra       doprint_105
                    2602   doprint_107:
00001D7C  202E FFFC 2603          move.l    -4(A6),D0
00001D80  1D40 FFD1 2604          move.b    D0,-47(A6)
                    2605   doprint_108:
00001D84  102E FFD1 2606          move.b    -47(A6),D0
00001D88  532E FFD1 2607          subq.b    #1,-47(A6)
00001D8C  4A00      2608          tst.b     D0
00001D8E  670E      2609          beq.s     doprint_110
00001D90  4878 0030 2610          pea       48
00001D94  2F0A      2611          move.l    A2,-(A7)
00001D96  4E93      2612          jsr       (A3)
00001D98  504F      2613          addq.w    #8,A7
00001D9A  5286      2614          addq.l    #1,D6
00001D9C  60E6      2615          bra       doprint_108
                    2616   doprint_110:
00001D9E  2043      2617          move.l    D3,A0
00001DA0  4A10      2618          tst.b     (A0)
00001DA2  6700 0048 2619          beq       doprint_113
00001DA6  206E 000C 2620          move.l    12(A6),A0
00001DAA  1010      2621          move.b    (A0),D0
00001DAC  4880      2622          ext.w     D0
00001DAE  48C0      2623          ext.l     D0
00001DB0  0C80 0000 2624          cmp.l     #115,D0
00001DB4  0073      
00001DB6  670C      2625          beq.s     doprint_116
00001DB8  6E18      2626          bgt.s     doprint_119
00001DBA  0C80 0000 2627          cmp.l     #99,D0
00001DBE  0063      
00001DC0  6702      2628          beq.s     doprint_116
00001DC2  600E      2629          bra.s     doprint_119
                    2630   doprint_116:
00001DC4  2005      2631          move.l    D5,D0
00001DC6  5385      2632          subq.l    #1,D5
00001DC8  0C80 0000 2633          cmp.l     #0,D0
00001DCC  0000      
00001DCE  6E02      2634          bgt.s     doprint_119
00001DD0  6016      2635          bra.s     doprint_115
                    2636   doprint_119:
00001DD2  2043      2637          move.l    D3,A0
00001DD4  5283      2638          addq.l    #1,D3
00001DD6  1210      2639          move.b    (A0),D1
00001DD8  4881      2640          ext.w     D1
00001DDA  48C1      2641          ext.l     D1
00001DDC  2F01      2642          move.l    D1,-(A7)
00001DDE  2F0A      2643          move.l    A2,-(A7)
00001DE0  4E93      2644          jsr       (A3)
00001DE2  504F      2645          addq.w    #8,A7
00001DE4  5286      2646          addq.l    #1,D6
00001DE6  6002      2647          bra.s     doprint_112
                    2648   doprint_115:
00001DE8  6002      2649          bra.s     doprint_113
                    2650   doprint_112:
00001DEA  60B2      2651          bra       doprint_110
                    2652   doprint_113:
00001DEC  4A2E FFCD 2653          tst.b     -51(A6)
00001DF0  6700 0030 2654          beq       doprint_125
00001DF4  1004      2655          move.b    D4,D0
00001DF6  4880      2656          ext.w     D0
00001DF8  48C0      2657          ext.l     D0
00001DFA  D0AE FFFC 2658          add.l     -4(A6),D0
00001DFE  D087      2659          add.l     D7,D0
00001E00  1D40 FFD1 2660          move.b    D0,-47(A6)
                    2661   doprint_123:
00001E04  102E FFD1 2662          move.b    -47(A6),D0
00001E08  4880      2663          ext.w     D0
00001E0A  48C0      2664          ext.l     D0
00001E0C  220D      2665          move.l    A5,D1
00001E0E  534D      2666          subq.w    #1,A5
00001E10  B081      2667          cmp.l     D1,D0
00001E12  6C0E      2668          bge.s     doprint_125
00001E14  4878 0020 2669          pea       32
00001E18  2F0A      2670          move.l    A2,-(A7)
00001E1A  4E93      2671          jsr       (A3)
00001E1C  504F      2672          addq.w    #8,A7
00001E1E  5386      2673          subq.l    #1,D6
00001E20  60E2      2674          bra       doprint_123
                    2675   doprint_125:
00001E22  6014      2676          bra.s     doprint_81
                    2677   doprint_80:
00001E24  206E 000C 2678          move.l    12(A6),A0
00001E28  1210      2679          move.b    (A0),D1
00001E2A  4881      2680          ext.w     D1
00001E2C  48C1      2681          ext.l     D1
00001E2E  2F01      2682          move.l    D1,-(A7)
00001E30  2F0A      2683          move.l    A2,-(A7)
00001E32  4E93      2684          jsr       (A3)
00001E34  504F      2685          addq.w    #8,A7
00001E36  5286      2686          addq.l    #1,D6
                    2687   doprint_81:
00001E38  52AE 000C 2688          addq.l    #1,12(A6)
                    2689   doprint_2:
00001E3C  6000 FA0E 2690          bra       doprint_1
                    2691   doprint_3:
00001E40  4A92      2692          tst.l     (A2)
00001E42  6710      2693          beq.s     doprint_126
00001E44  4201      2694          clr.b     D1
00001E46  C2BC 0000 2695          and.l     #255,D1
00001E4A  00FF      
00001E4C  2F01      2696          move.l    D1,-(A7)
00001E4E  2F0A      2697          move.l    A2,-(A7)
00001E50  4E93      2698          jsr       (A3)
00001E52  504F      2699          addq.w    #8,A7
                    2700   doprint_126:
00001E54  2006      2701          move.l    D6,D0
00001E56  4CDF 3CFC 2702          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
00001E5A  4E5E      2703          unlk      A6
00001E5C  4E75      2704          rts
                    2705   ULMUL:
00001E5E  4E56 0000 2706          link    A6,#0
00001E62  48E7 C000 2707          movem.l D0/D1,-(A7)
00001E66  222E 0008 2708          move.l  8(A6),D1
00001E6A  202E 000C 2709          move.l  12(A6),D0
00001E6E  602C      2710          bra.s   lmul_3
                    2711   LMUL:
00001E70  4E56 0000 2712          link    A6,#0
00001E74  48E7 C000 2713          movem.l D0/D1,-(A7)
00001E78  222E 0008 2714          move.l  8(A6),D1
00001E7C  202E 000C 2715          move.l  12(A6),D0
00001E80  4A80      2716          tst.l   D0
00001E82  6A0A      2717          bpl.s   lmul_1
00001E84  4480      2718          neg.l   D0
00001E86  4A81      2719          tst.l   D1
00001E88  6A0A      2720          bpl.s   lmul_2
00001E8A  4481      2721          neg.l   D1
00001E8C  600E      2722          bra.s   lmul_3
                    2723   lmul_1:
00001E8E  4A81      2724          tst.l   D1
00001E90  6A0A      2725          bpl.s   lmul_3
00001E92  4481      2726          neg.l   D1
                    2727   lmul_2:
00001E94  6114      2728          bsr.s   domul
00001E96  4481      2729          neg.l   D1
00001E98  4080      2730          negx.l  D0
00001E9A  6002      2731          bra.s   lmul_4
                    2732   lmul_3:
00001E9C  610C      2733          bsr.s   domul
                    2734   lmul_4:
00001E9E  2D41 0008 2735          move.l  D1,8(A6)
00001EA2  4CDF 0003 2736          movem.l (A7)+,D0/D1
00001EA6  4E5E      2737          unlk    A6
00001EA8  4E75      2738          rts
                    2739   domul:
00001EAA  0C81 0000 2740          cmpi.l  #$FFFF,D1
00001EAE  FFFF      
00001EB0  620C      2741          bhi.s   domul_1
00001EB2  0C80 0000 2742          cmpi.l  #$FFFF,D0
00001EB6  FFFF      
00001EB8  620E      2743          bhi.s   domul_2
00001EBA  C2C0      2744          mulu    D0,D1
00001EBC  4E75      2745          rts
                    2746   domul_1:
00001EBE  0C80 0000 2747          cmpi.l  #$FFFF,D0
00001EC2  FFFF      
00001EC4  6218      2748          bhi.s   domul_4
00001EC6  6002      2749          bra.s   domul_3
                    2750   domul_2
00001EC8  C141      2751          exg     D0,D1
                    2752   domul_3:
00001ECA  2F02      2753          move.l  D2,-(A7)
00001ECC  2401      2754          move.l  D1,D2
00001ECE  4842      2755          swap    D2
00001ED0  C2C0      2756          mulu    D0,D1
00001ED2  C4C0      2757          mulu    D0,D2
00001ED4  4842      2758          swap    D2
00001ED6  4242      2759          clr.w   D2
00001ED8  D282      2760          add.l   D2,D1
00001EDA  241F      2761          move.l  (A7)+,D2
00001EDC  4E75      2762          rts
                    2763   domul_4:
00001EDE  48E7 3000 2764          movem.l D2/D3,-(A7)
00001EE2  2401      2765          move.l  D1,D2
00001EE4  2601      2766          move.l  D1,D3
00001EE6  C2C0      2767          mulu    D0,D1
00001EE8  4842      2768          swap    D2
00001EEA  C4C0      2769          mulu    D0,D2
00001EEC  4840      2770          swap    D0
00001EEE  C6C0      2771          mulu    D0,D3
00001EF0  D483      2772          add.l   D3,D2
00001EF2  4842      2773          swap    D2
00001EF4  4242      2774          clr.w   D2
00001EF6  D282      2775          add.l   D2,D1
00001EF8  4CDF 000C 2776          movem.l (A7)+,D2/D3
00001EFC  4E75      2777          rts
                    2778   _gets:
00001EFE  4E56 0000 2779          link      A6,#0
00001F02  48E7 3820 2780          movem.l   D2/D3/D4/A2,-(A7)
00001F06  45F9 0000 2781          lea       _putch.L,A2
00001F0A  214C      
00001F0C  282E 0008 2782          move.l    8(A6),D4
00001F10  2404      2783          move.l    D4,D2
                    2784   gets_1:
00001F12  4EB9 0000 2785          jsr       _getch
00001F16  217C      
00001F18  2600      2786          move.l    D0,D3
00001F1A  0C80 0000 2787          cmp.l     #10,D0
00001F1E  000A      
00001F20  6700 003C 2788          beq       gets_3
00001F24  0C83 0000 2789          cmp.l     #8,D3
00001F28  0008      
00001F2A  6712      2790          beq.s     gets_4
00001F2C  2042      2791          move.l    D2,A0
00001F2E  5282      2792          addq.l    #1,D2
00001F30  1083      2793          move.b    D3,(A0)
00001F32  4883      2794          ext.w     D3
00001F34  48C3      2795          ext.l     D3
00001F36  2F03      2796          move.l    D3,-(A7)
00001F38  4E92      2797          jsr       (A2)
00001F3A  584F      2798          addq.w    #4,A7
00001F3C  601E      2799          bra.s     gets_6
                    2800   gets_4:
00001F3E  B484      2801          cmp.l     D4,D2
00001F40  631A      2802          bls.s     gets_6
00001F42  4878 0008 2803          pea       8
00001F46  4E92      2804          jsr       (A2)
00001F48  584F      2805          addq.w    #4,A7
00001F4A  4878 0020 2806          pea       32
00001F4E  4E92      2807          jsr       (A2)
00001F50  584F      2808          addq.w    #4,A7
00001F52  4878 0008 2809          pea       8
00001F56  4E92      2810          jsr       (A2)
00001F58  584F      2811          addq.w    #4,A7
00001F5A  5382      2812          subq.l    #1,D2
                    2813   gets_6:
00001F5C  60B4      2814          bra       gets_1
                    2815   gets_3:
00001F5E  4878 000A 2816          pea       10
00001F62  4E92      2817          jsr       (A2)
00001F64  584F      2818          addq.w    #4,A7
00001F66  2042      2819          move.l    D2,A0
00001F68  4210      2820          clr.b     (A0)
00001F6A  2004      2821          move.l    D4,D0
00001F6C  4CDF 041C 2822          movem.l   (A7)+,D2/D3/D4/A2
00001F70  4E5E      2823          unlk      A6
00001F72  4E75      2824          rts
                    2825   _tolower:
00001F74  202F 0004 2826          move.l    4(A7),D0
00001F78  0C80 0000 2827          cmp.l     #'A',D0
00001F7C  0041      
00001F7E  6D0E      2828          blt.s     tolower_1
00001F80  0C80 0000 2829          cmp.l     #'Z',D0
00001F84  005A      
00001F86  6E06      2830          bgt.s     tolower_1
00001F88  0680 0000 2831          add.l     #$20,D0
00001F8C  0020      
                    2832   tolower_1:
00001F8E  4E75      2833          rts
                    2834   _strcat:
00001F90  206F 0004 2835          move.l    (4,A7),A0
00001F94  226F 0008 2836          move.l    (8,A7),A1
00001F98  2008      2837          move.l    A0,D0
                    2838   strcat_1:
00001F9A  4A18      2839          tst.b     (A0)+
00001F9C  66FC      2840          bne.s     strcat_1
00001F9E  5388      2841          subq.l    #1,A0
                    2842   strcat_2:
00001FA0  10D9      2843          move.b    (A1)+,(A0)+
00001FA2  66FC      2844          bne.s     strcat_2
00001FA4  4E75      2845          rts
                    2846   _toupper:
00001FA6  202F 0004 2847          move.l    4(A7),D0
00001FAA  0C80 0000 2848          cmp.l     #'a',D0
00001FAE  0061      
00001FB0  6D0E      2849          blt.s     toupper_1
00001FB2  0C80 0000 2850          cmp.l     #'z',D0
00001FB6  007A      
00001FB8  6E06      2851          bgt.s     toupper_1
00001FBA  0480 0000 2852          sub.l     #$20,D0
00001FBE  0020      
                    2853   toupper_1:
00001FC0  4E75      2854          rts
                    2855   _ungetch:
00001FC2  4E56 0000 2856          link      A6,#0
00001FC6  23EE 0008 2857          move.l    8(A6),__ungetbuf.L
00001FCA  0803 00C0 
00001FCE  202E 0008 2858          move.l    8(A6),D0
00001FD2  4E5E      2859          unlk      A6
00001FD4  4E75      2860          rts
                    2861   @itoa_convert:
00001FD6  4E56 0000 2862          link      A6,#0
00001FDA  48E7 3C00 2863          movem.l   D2/D3/D4/D5,-(A7)
00001FDE  242E 0008 2864          move.l    8(A6),D2
00001FE2  262E 0010 2865          move.l    16(A6),D3
00001FE6  2A2E 000C 2866          move.l    12(A6),D5
00001FEA  2F05      2867          move.l    D5,-(A7)
00001FEC  2F03      2868          move.l    D3,-(A7)
00001FEE  4EB8 0D9A 2869          jsr       ULDIV
00001FF2  202F 0004 2870          move.l    4(A7),D0
00001FF6  504F      2871          addq.w    #8,A7
00001FF8  2800      2872          move.l    D0,D4
00001FFA  BA83      2873          cmp.l     D3,D5
00001FFC  651C      2874          blo.s     @itoa_convert_1
00001FFE  2F03      2875          move.l    D3,-(A7)
00002000  2F05      2876          move.l    D5,-(A7)
00002002  2F03      2877          move.l    D3,-(A7)
00002004  4EB8 0D9A 2878          jsr       ULDIV
00002008  2217      2879          move.l    (A7),D1
0000200A  504F      2880          addq.w    #8,A7
0000200C  2F01      2881          move.l    D1,-(A7)
0000200E  2F02      2882          move.l    D2,-(A7)
00002010  4EB8 1FD6 2883          jsr       @itoa_convert
00002014  DEFC 000C 2884          add.w     #12,A7
00002018  2400      2885          move.l    D0,D2
                    2886   @itoa_convert_1:
0000201A  0C84 0000 2887          cmp.l     #9,D4
0000201E  0009      
00002020  6E0E      2888          bgt.s     @itoa_convert_3
00002022  2004      2889          move.l    D4,D0
00002024  7230      2890          moveq     #48,D1
00002026  C2BC 0000 2891          and.l     #255,D1
0000202A  00FF      
0000202C  D081      2892          add.l     D1,D0
0000202E  6012      2893          bra.s     @itoa_convert_4
                    2894   @itoa_convert_3:
00002030  2004      2895          move.l    D4,D0
00002032  7261      2896          moveq     #97,D1
00002034  C2BC 0000 2897          and.l     #255,D1
00002038  00FF      
0000203A  D081      2898          add.l     D1,D0
0000203C  0480 0000 2899          sub.l     #10,D0
00002040  000A      
                    2900   @itoa_convert_4:
00002042  2042      2901          move.l    D2,A0
00002044  1080      2902          move.b    D0,(A0)
00002046  2002      2903          move.l    D2,D0
00002048  5280      2904          addq.l    #1,D0
0000204A  4CDF 003C 2905          movem.l   (A7)+,D2/D3/D4/D5
0000204E  4E5E      2906          unlk      A6
00002050  4E75      2907          rts
                    2908   _ltoa:
00002052  4E56 0000 2909          link      A6,#0
00002056  48E7 3C00 2910          movem.l   D2/D3/D4/D5,-(A7)
0000205A  242E 0008 2911          move.l    8(A6),D2
0000205E  262E 000C 2912          move.l    12(A6),D3
00002062  2A2E 0010 2913          move.l    16(A6),D5
00002066  2803      2914          move.l    D3,D4
00002068  0C85 0000 2915          cmp.l     #2,D5
0000206C  0002      
0000206E  6D08      2916          blt.s     ltoa_3
00002070  0C85 0000 2917          cmp.l     #36,D5
00002074  0024      
00002076  6F06      2918          ble.s     ltoa_1
                    2919   ltoa_3:
00002078  2003      2920          move.l    D3,D0
0000207A  6000 0054 2921          bra       ltoa_4
                    2922   ltoa_1:
0000207E  0C85 0000 2923          cmp.l     #10,D5
00002082  000A      
00002084  6600 0034 2924          bne       ltoa_5
00002088  0C82 0000 2925          cmp.l     #0,D2
0000208C  0000      
0000208E  6C2A      2926          bge.s     ltoa_5
00002090  2002      2927          move.l    D2,D0
00002092  4480      2928          neg.l     D0
00002094  2400      2929          move.l    D0,D2
00002096  0C82 0000 2930          cmp.l     #0,D2
0000209A  0000      
0000209C  6C14      2931          bge.s     ltoa_7
0000209E  4879 0000 2932          pea       @itoa_1.L
000020A2  27D0      
000020A4  2F03      2933          move.l    D3,-(A7)
000020A6  4EB9 0000 2934          jsr       _strcpy
000020AA  21B6      
000020AC  504F      2935          addq.w    #8,A7
000020AE  2003      2936          move.l    D3,D0
000020B0  601E      2937          bra.s     ltoa_4
                    2938   ltoa_7:
000020B2  2044      2939          move.l    D4,A0
000020B4  5284      2940          addq.l    #1,D4
000020B6  10BC 002D 2941          move.b    #45,(A0)
                    2942   ltoa_5:
000020BA  2F05      2943          move.l    D5,-(A7)
000020BC  2F02      2944          move.l    D2,-(A7)
000020BE  2F04      2945          move.l    D4,-(A7)
000020C0  4EB8 1FD6 2946          jsr       @itoa_convert
000020C4  DEFC 000C 2947          add.w     #12,A7
000020C8  2800      2948          move.l    D0,D4
000020CA  2044      2949          move.l    D4,A0
000020CC  4210      2950          clr.b     (A0)
000020CE  2003      2951          move.l    D3,D0
                    2952   ltoa_4:
000020D0  4CDF 003C 2953          movem.l   (A7)+,D2/D3/D4/D5
000020D4  4E5E      2954          unlk      A6
000020D6  4E75      2955          rts
                    2956   _ultoa:
000020D8  4E56 0000 2957          link      A6,#0
000020DC  48E7 3800 2958          movem.l   D2/D3/D4,-(A7)
000020E0  262E 0010 2959          move.l    16(A6),D3
000020E4  282E 000C 2960          move.l    12(A6),D4
000020E8  2404      2961          move.l    D4,D2
000020EA  0C83 0000 2962          cmp.l     #2,D3
000020EE  0002      
000020F0  6D08      2963          blt.s     ultoa_3
000020F2  0C83 0000 2964          cmp.l     #36,D3
000020F6  0024      
000020F8  6F04      2965          ble.s     ultoa_1
                    2966   ultoa_3:
000020FA  2004      2967          move.l    D4,D0
000020FC  6018      2968          bra.s     ultoa_4
                    2969   ultoa_1:
000020FE  2F03      2970          move.l    D3,-(A7)
00002100  2F2E 0008 2971          move.l    8(A6),-(A7)
00002104  2F02      2972          move.l    D2,-(A7)
00002106  4EB8 1FD6 2973          jsr       @itoa_convert
0000210A  DEFC 000C 2974          add.w     #12,A7
0000210E  2400      2975          move.l    D0,D2
00002110  2042      2976          move.l    D2,A0
00002112  4210      2977          clr.b     (A0)
00002114  2004      2978          move.l    D4,D0
                    2979   ultoa_4:
00002116  4CDF 001C 2980          movem.l   (A7)+,D2/D3/D4
0000211A  4E5E      2981          unlk      A6
0000211C  4E75      2982          rts
                    2983   _itoa:
0000211E  4E56 0000 2984          link      A6,#0
00002122  2F2E 0010 2985          move.l    16(A6),-(A7)
00002126  2F2E 000C 2986          move.l    12(A6),-(A7)
0000212A  2F2E 0008 2987          move.l    8(A6),-(A7)
0000212E  4EB8 2052 2988          jsr       _ltoa
00002132  DEFC 000C 2989          add.w     #12,A7
00002136  4E5E      2990          unlk      A6
00002138  4E75      2991          rts
                    2992   _strlen:
0000213A  206F 0004 2993          move.l    (4,A7),A0
0000213E  2248      2994          move.l    A0,A1
                    2995   strlen_1:
00002140  4A19      2996          tst.b     (A1)+
00002142  66FC      2997          bne       strlen_1
00002144  2009      2998          move.l    A1,D0
00002146  9088      2999          sub.l     A0,D0
00002148  5380      3000          subq.l    #1,D0
0000214A  4E75      3001          rts
                    3002   _putch:
0000214C  4E56 0000 3003          link      A6,#0
00002150  2F02      3004          move.l    D2,-(A7)
00002152  242E 0008 3005          move.l    8(A6),D2
00002156  0C82 0000 3006          cmp.l     #10,D2
0000215A  000A      
0000215C  660C      3007          bne.s     putch_1
0000215E  4878 000D 3008          pea       13
                    3009          jsr       __putch
********  **** ****  Error: Undefined or illegal symbol
00002168  584F      3010          addq.w    #4,A7
                    3011   putch_1:
0000216A  2F02      3012          move.l    D2,-(A7)
                    3013          jsr       __putch
********  **** ****  Error: Undefined or illegal symbol
00002172  584F      3014          addq.w    #4,A7
00002174  2002      3015          move.l    D2,D0
00002176  241F      3016          move.l    (A7)+,D2
00002178  4E5E      3017          unlk      A6
0000217A  4E75      3018          rts
                    3019   _getch:
0000217C  2F02      3020          move.l    D2,-(A7)
0000217E  2439 0803 3021          move.l    __ungetbuf.L,D2
00002182  00C0      
00002184  2039 0803 3022          move.l    __ungetbuf.L,D0
00002188  00C0      
0000218A  0C80 FFFF 3023          cmp.l     #-1,D0
0000218E  FFFF      
00002190  670C      3024          beq.s     getch_1
00002192  23FC FFFF 3025          move.l    #-1,__ungetbuf.L
00002196  FFFF 0803 
0000219A  00C0      
0000219C  6012      3026          bra.s     getch_3
                    3027   getch_1:
                    3028          jsr       __getch
********  **** ****  Error: Undefined or illegal symbol
000021A4  2400      3029          move.l    D0,D2
000021A6  0C80 0000 3030          cmp.l     #13,D0
000021AA  000D      
000021AC  6602      3031          bne.s     getch_3
000021AE  740A      3032          moveq     #10,D2
                    3033   getch_3:
000021B0  2002      3034          move.l    D2,D0
000021B2  241F      3035          move.l    (A7)+,D2
000021B4  4E75      3036          rts
                    3037   _strcpy:
000021B6  206F 0004 3038          move.l    (4,A7),A0
000021BA  226F 0008 3039          move.l    (8,A7),A1
000021BE  2008      3040          move.l    A0,D0
                    3041   strcpy_1:
000021C0  10D9      3042          move.b    (A1)+,(A0)+
000021C2  66FC      3043          bne.s     strcpy_1
000021C4  4E75      3044          rts
                    3045          section   const
                    3046   
                    3047   @memtest_1:
000021C6  0D0A 506C 3048          dc.b      13,10,80,108,101,97,115,101,32,101,110,116,101
000021CA  6561 7365 
000021CE  2065 6E74 
000021D2  65        
000021D3  7220 6120 3049          dc.b      114,32,97,32,110,117,109,98,101,114,32,116,111
000021D7  6E75 6D62 
000021DB  6572 2074 
000021DF  6F        
000021E0  2063 686F 3050          dc.b      32,99,104,111,111,115,101,32,111,110,101,32
000021E4  6F73 6520 
000021E8  6F6E 6520 
000021EC  6F66 2074 3051          dc.b      111,102,32,116,104,101,32,102,111,108,108,111
000021F0  6865 2066 
000021F4  6F6C 6C6F 
000021F8  7769 6E67 3052          dc.b      119,105,110,103,32,116,101,115,116,32,111,112
000021FC  2074 6573 
00002200  7420 6F70 
00002204  7469 6F6E 3053          dc.b      116,105,111,110,115,58,13,10,49,32,45,32,66
00002208  733A 0D0A 
0000220C  3120 2D20 
00002210  42        
00002211  7974 6573 3054          dc.b      121,116,101,115,13,10,50,32,45,32,87,111,114
00002215  0D0A 3220 
00002219  2D20 576F 
0000221D  72        
0000221E  6473 0D0A 3055          dc.b      100,115,13,10,51,32,45,32,76,111,110,103,32
00002222  3320 2D20 
00002226  4C6F 6E67 
0000222A  20        
0000222B  576F 7264 3056          dc.b      87,111,114,100,115,13,10,0
0000222F  730D 0A00 
                    3057   @memtest_2:
00002234  2564 00   3058          dc.b      37,100,0
                    3059   @memtest_3:
00002238  0D0A 496E 3060          dc.b      13,10,73,110,118,97,108,105,100,32,83,101,108
0000223C  7661 6C69 
00002240  6420 5365 
00002244  6C        
00002245  6563 7469 3061          dc.b      101,99,116,105,111,110,13,10,0
00002249  6F6E 0D0A 
0000224D  00        
                    3062   @memtest_4:
0000224E  0D0A 596F 3063          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
00002252  7520 6861 
00002256  7665 2073 
0000225A  65        
0000225B  6C65 6374 3064          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
0000225F  6564 2074 
00002263  6573 7420 
00002267  6F70 7469 3065          dc.b      111,112,116,105,111,110,32,66,89,84,69,83,13
0000226B  6F6E 2042 
0000226F  5954 4553 
00002273  0D        
00002274  0A00      3066          dc.b      10,0
                    3067   @memtest_5:
00002276  0D0A 596F 3068          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
0000227A  7520 6861 
0000227E  7665 2073 
00002282  65        
00002283  6C65 6374 3069          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
00002287  6564 2074 
0000228B  6573 7420 
0000228F  6F70 7469 3070          dc.b      111,112,116,105,111,110,32,87,79,82,68,83,13
00002293  6F6E 2057 
00002297  4F52 4453 
0000229B  0D        
0000229C  0A00      3071          dc.b      10,0
                    3072   @memtest_6:
0000229E  0D0A 596F 3073          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
000022A2  7520 6861 
000022A6  7665 2073 
000022AA  65        
000022AB  6C65 6374 3074          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
000022AF  6564 2074 
000022B3  6573 7420 
000022B7  6F70 7469 3075          dc.b      111,112,116,105,111,110,32,76,79,78,71,32,87
000022BB  6F6E 204C 
000022BF  4F4E 4720 
000022C3  57        
000022C4  4F52 4453 3076          dc.b      79,82,68,83,13,10,0
000022C8  0D0A 00   
                    3077   @memtest_7:
000022CC  0D0A 4578 3078          dc.b      13,10,69,120,99,101,112,116,105,111,110,32,45
000022D0  6365 7074 
000022D4  696F 6E20 
000022D8  2D        
000022D9  2069 6E76 3079          dc.b      32,105,110,118,97,108,105,100,32,116,101,115
000022DD  616C 6964 
000022E1  2074 6573 
000022E5  7420 6F70 3080          dc.b      116,32,111,112,116,105,111,110,13,10,0
000022E9  7469 6F6E 
000022ED  0D0A 00   
                    3081   @memtest_8:
000022F0  0D0A 506C 3082          dc.b      13,10,80,108,101,97,115,101,32,101,110,116,101
000022F4  6561 7365 
000022F8  2065 6E74 
000022FC  65        
000022FD  7220 6120 3083          dc.b      114,32,97,32,110,117,109,98,101,114,32,116,111
00002301  6E75 6D62 
00002305  6572 2074 
00002309  6F        
0000230A  2063 686F 3084          dc.b      32,99,104,111,111,115,101,32,111,110,101,32
0000230E  6F73 6520 
00002312  6F6E 6520 
00002316  6F66 2074 3085          dc.b      111,102,32,116,104,101,32,102,111,108,108,111
0000231A  6865 2066 
0000231E  6F6C 6C6F 
00002322  7769 6E67 3086          dc.b      119,105,110,103,32,116,101,115,116,32,112,97
00002326  2074 6573 
0000232A  7420 7061 
0000232E  7474 6572 3087          dc.b      116,116,101,114,110,115,58,13,10,49,32,45,32
00002332  6E73 3A0D 
00002336  0A31 202D 
0000233A  20        
0000233B  3535 0D0A 3088          dc.b      53,53,13,10,50,32,45,32,65,65,13,10,51,32,45
0000233F  3220 2D20 
00002343  4141 0D0A 
00002347  3320 2D   
0000234A  2046 460D 3089          dc.b      32,70,70,13,10,52,32,45,32,48,48,13,10,0
0000234E  0A34 202D 
00002352  2030 300D 
00002356  0A00      
                    3090   @memtest_9:
00002358  2564 00   3091          dc.b      37,100,0
                    3092   @memtest_10:
0000235C  0D0A 496E 3093          dc.b      13,10,73,110,118,97,108,105,100,32,83,101,108
00002360  7661 6C69 
00002364  6420 5365 
00002368  6C        
00002369  6563 7469 3094          dc.b      101,99,116,105,111,110,13,10,0
0000236D  6F6E 0D0A 
00002371  00        
                    3095   @memtest_11:
00002372  0D0A 596F 3096          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
00002376  7520 6861 
0000237A  7665 2073 
0000237E  65        
0000237F  6C65 6374 3097          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
00002383  6564 2074 
00002387  6573 7420 
0000238B  7061 7474 3098          dc.b      112,97,116,116,101,114,110,32,53,53,13,10,0
0000238F  6572 6E20 
00002393  3535 0D0A 
00002397  00        
                    3099   @memtest_12:
00002398  0D0A 596F 3100          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
0000239C  7520 6861 
000023A0  7665 2073 
000023A4  65        
000023A5  6C65 6374 3101          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
000023A9  6564 2074 
000023AD  6573 7420 
000023B1  7061 7474 3102          dc.b      112,97,116,116,101,114,110,32,65,65,13,10,0
000023B5  6572 6E20 
000023B9  4141 0D0A 
000023BD  00        
                    3103   @memtest_13:
000023BE  0D0A 596F 3104          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
000023C2  7520 6861 
000023C6  7665 2073 
000023CA  65        
000023CB  6C65 6374 3105          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
000023CF  6564 2074 
000023D3  6573 7420 
000023D7  7061 7474 3106          dc.b      112,97,116,116,101,114,110,32,70,70,13,10,0
000023DB  6572 6E20 
000023DF  4646 0D0A 
000023E3  00        
                    3107   @memtest_14:
000023E4  0D0A 596F 3108          dc.b      13,10,89,111,117,32,104,97,118,101,32,115,101
000023E8  7520 6861 
000023EC  7665 2073 
000023F0  65        
000023F1  6C65 6374 3109          dc.b      108,101,99,116,101,100,32,116,101,115,116,32
000023F5  6564 2074 
000023F9  6573 7420 
000023FD  7061 7474 3110          dc.b      112,97,116,116,101,114,110,32,48,48,13,10,0
00002401  6572 6E20 
00002405  3030 0D0A 
00002409  00        
                    3111   @memtest_15:
0000240A  0D0A 4578 3112          dc.b      13,10,69,120,99,101,112,116,105,111,110,32,45
0000240E  6365 7074 
00002412  696F 6E20 
00002416  2D        
00002417  2069 6E76 3113          dc.b      32,105,110,118,97,108,105,100,32,116,101,115
0000241B  616C 6964 
0000241F  2074 6573 
00002423  7420 7061 3114          dc.b      116,32,112,97,116,116,101,114,110,13,10,0
00002427  7474 6572 
0000242B  6E0D 0A00 
                    3115   @memtest_16:
00002430  0D0A 4578 3116          dc.b      13,10,69,120,99,101,112,116,105,111,110,32,45
00002434  6365 7074 
00002438  696F 6E20 
0000243C  2D        
0000243D  2063 6F75 3117          dc.b      32,99,111,117,108,100,32,110,111,116,32,103
00002441  6C64 206E 
00002445  6F74 2067 
00002449  656E 6572 3118          dc.b      101,110,101,114,97,116,101,32,119,114,105,116
0000244D  6174 6520 
00002451  7772 6974 
00002455  655F 6461 3119          dc.b      101,95,100,97,116,97,13,10,0
00002459  7461 0D0A 
0000245D  00        
                    3120   @memtest_17:
0000245E  0D0A 506C 3121          dc.b      13,10,80,108,101,97,115,101,32,101,110,116,101
00002462  6561 7365 
00002466  2065 6E74 
0000246A  65        
0000246B  7220 6120 3122          dc.b      114,32,97,32,115,116,97,114,116,105,110,103
0000246F  7374 6172 
00002473  7469 6E67 
00002477  2061 6464 3123          dc.b      32,97,100,100,114,101,115,115,32,102,114,111
0000247B  7265 7373 
0000247F  2066 726F 
00002483  6D20 3038 3124          dc.b      109,32,48,56,48,50,48,48,48,48,32,116,111,32
00002487  3032 3030 
0000248B  3030 2074 
0000248F  6F20      
00002491  3038 3033 3125          dc.b      48,56,48,51,48,48,48,48,13,10,0
00002495  3030 3030 
00002499  0D0A 00   
                    3126   @memtest_18:
0000249C  2564 00   3127          dc.b      37,100,0
                    3128   @memtest_19:
000024A0  0D0A 5374 3129          dc.b      13,10,83,116,97,114,116,32,97,100,100,114,101
000024A4  6172 7420 
000024A8  6164 6472 
000024AC  65        
000024AD  7373 2069 3130          dc.b      115,115,32,105,115,32,105,110,118,97,108,105
000024B1  7320 696E 
000024B5  7661 6C69 
000024B9  640D 0A00 3131          dc.b      100,13,10,0
                    3132   @memtest_20:
000024BE  0D0A 466F 3133          dc.b      13,10,70,111,114,32,119,111,114,100,115,32,111
000024C2  7220 776F 
000024C6  7264 7320 
000024CA  6F        
000024CB  7220 6C6F 3134          dc.b      114,32,108,111,110,103,32,119,111,114,100,115
000024CF  6E67 2077 
000024D3  6F72 6473 
000024D7  2C20 706C 3135          dc.b      44,32,112,108,101,97,115,101,32,101,110,116
000024DB  6561 7365 
000024DF  2065 6E74 
000024E3  6572 2061 3136          dc.b      101,114,32,97,110,32,101,118,101,110,32,110
000024E7  6E20 6576 
000024EB  656E 206E 
000024EF  756D 6265 3137          dc.b      117,109,98,101,114,101,100,32,97,100,100,114
000024F3  7265 6420 
000024F7  6164 6472 
000024FB  6573 730D 3138          dc.b      101,115,115,13,10,0
000024FF  0A00      
                    3139   @memtest_21:
00002502  0D0A 5468 3140          dc.b      13,10,84,104,101,32,99,104,111,115,101,110,32
00002506  6520 6368 
0000250A  6F73 656E 
0000250E  20        
0000250F  7374 6172 3141          dc.b      115,116,97,114,116,105,110,103,32,97,100,100
00002513  7469 6E67 
00002517  2061 6464 
0000251B  7265 7373 3142          dc.b      114,101,115,115,32,105,115,58,32,37,120,0
0000251F  2069 733A 
00002523  2025 7800 
                    3143   @memtest_22:
00002528  0D0A 506C 3144          dc.b      13,10,80,108,101,97,115,101,32,101,110,116,101
0000252C  6561 7365 
00002530  2065 6E74 
00002534  65        
00002535  7220 616E 3145          dc.b      114,32,97,110,32,101,110,100,32,97,100,100,114
00002539  2065 6E64 
0000253D  2061 6464 
00002541  72        
00002542  6573 7320 3146          dc.b      101,115,115,32,102,114,111,109,32,37,120,32
00002546  6672 6F6D 
0000254A  2025 7820 
0000254E  746F 2030 3147          dc.b      116,111,32,48,56,48,51,48,48,48,48,13,10,0
00002552  3830 3330 
00002556  3030 300D 
0000255A  0A00      
                    3148   @memtest_23:
0000255C  2564 00   3149          dc.b      37,100,0
                    3150   @memtest_24:
00002560  0D0A 456E 3151          dc.b      13,10,69,110,100,32,97,100,100,114,101,115,115
00002564  6420 6164 
00002568  6472 6573 
0000256C  73        
0000256D  2069 7320 3152          dc.b      32,105,115,32,105,110,118,97,108,105,100,13
00002571  696E 7661 
00002575  6C69 640D 
00002579  0A00      3153          dc.b      10,0
                    3154   @memtest_25:
0000257C  0D0A 466F 3155          dc.b      13,10,70,111,114,32,119,111,114,100,115,32,111
00002580  7220 776F 
00002584  7264 7320 
00002588  6F        
00002589  7220 6C6F 3156          dc.b      114,32,108,111,110,103,32,119,111,114,100,115
0000258D  6E67 2077 
00002591  6F72 6473 
00002595  2C20 706C 3157          dc.b      44,32,112,108,101,97,115,101,32,101,110,116
00002599  6561 7365 
0000259D  2065 6E74 
000025A1  6572 2061 3158          dc.b      101,114,32,97,110,32,101,118,101,110,32,110
000025A5  6E20 6576 
000025A9  656E 206E 
000025AD  756D 6265 3159          dc.b      117,109,98,101,114,101,100,32,97,100,100,114
000025B1  7265 6420 
000025B5  6164 6472 
000025B9  6573 730D 3160          dc.b      101,115,115,13,10,0
000025BD  0A00      
                    3161   @memtest_26:
000025C0  0D0A 5468 3162          dc.b      13,10,84,104,101,32,99,104,111,115,101,110,32
000025C4  6520 6368 
000025C8  6F73 656E 
000025CC  20        
000025CD  656E 6469 3163          dc.b      101,110,100,105,110,103,32,97,100,100,114,101
000025D1  6E67 2061 
000025D5  6464 7265 
000025D9  7373 2069 3164          dc.b      115,115,32,105,115,58,32,37,120,0
000025DD  733A 2025 
000025E1  7800      
                    3165   @memtest_27:
000025E4  0D0A 5772 3166          dc.b      13,10,87,114,105,116,105,110,103,32,37,120,32
000025E8  6974 696E 
000025EC  6720 2578 
000025F0  20        
000025F1  696E 746F 3167          dc.b      105,110,116,111,32,97,100,100,114,101,115,115
000025F5  2061 6464 
000025F9  7265 7373 
000025FD  2025 780D 3168          dc.b      32,37,120,13,10,0
00002601  0A00      
                    3169   @memtest_28:
00002604  0D0A 5772 3170          dc.b      13,10,87,114,105,116,105,110,103,32,99,111,109
00002608  6974 696E 
0000260C  6720 636F 
00002610  6D        
00002611  706C 6574 3171          dc.b      112,108,101,116,101,100,46,32,87,105,108,108
00002615  6564 2E20 
00002619  5769 6C6C 
0000261D  206E 6F77 3172          dc.b      32,110,111,119,32,115,116,97,114,116,32,114
00002621  2073 7461 
00002625  7274 2072 
00002629  6561 6469 3173          dc.b      101,97,100,105,110,103,46,13,10,0
0000262D  6E67 2E0D 
00002631  0A00      
                    3174   @memtest_29:
00002634  0D0A 416E 3175          dc.b      13,10,65,110,32,69,114,114,111,114,32,104,97
00002638  2045 7272 
0000263C  6F72 2068 
00002640  61        
00002641  7320 6F63 3176          dc.b      115,32,111,99,99,117,114,114,101,100,58,32,100
00002645  6375 7272 
00002649  6564 3A20 
0000264D  64        
0000264E  6174 6120 3177          dc.b      97,116,97,32,97,116,32,97,100,100,114,101,115
00002652  6174 2061 
00002656  6464 7265 
0000265A  73        
0000265B  7320 2578 3178          dc.b      115,32,37,120,32,101,120,112,101,99,116,101
0000265F  2065 7870 
00002663  6563 7465 
00002667  6420 746F 3179          dc.b      100,32,116,111,32,98,101,32,37,120,44,32,105
0000266B  2062 6520 
0000266F  2578 2C20 
00002673  69        
00002674  6E73 7465 3180          dc.b      110,115,116,101,97,100,32,105,115,32,114,101
00002678  6164 2069 
0000267C  7320 7265 
00002680  6164 696E 3181          dc.b      97,100,105,110,103,32,37,120,0
00002684  6720 2578 
00002688  00        
                    3182   @memtest_30:
0000268A  0D0A 4D65 3183          dc.b      13,10,77,101,109,111,114,121,32,116,101,115
0000268E  6D6F 7279 
00002692  2074 6573 
00002696  7420 6661 3184          dc.b      116,32,102,97,105,108,101,100,46,13,10,0
0000269A  696C 6564 
0000269E  2E0D 0A00 
                    3185   @memtest_31:
000026A2  0D0A 5265 3186          dc.b      13,10,82,101,97,100,105,110,103,32,100,97,116
000026A6  6164 696E 
000026AA  6720 6461 
000026AE  74        
000026AF  6120 7661 3187          dc.b      97,32,118,97,108,117,101,32,37,120,32,102,114
000026B3  6C75 6520 
000026B7  2578 2066 
000026BB  72        
000026BC  6F6D 2061 3188          dc.b      111,109,32,97,100,100,114,101,115,115,32,37
000026C0  6464 7265 
000026C4  7373 2025 
000026C8  780D 0A00 3189          dc.b      120,13,10,0
                    3190   @doscan_1:
000026CC  0A00      3191          dc.b      10,0
                    3192   __ctype:
000026CE  0040 4040 3193          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
000026D2  4040 4040 
000026D6  4040 5050 
000026DA  5050 50   
000026DD  4040 4040 3194          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
000026E1  4040 4040 
000026E5  4040 4040 
000026E9  4040 40   
000026EC  4040 40D0 3195          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
000026F0  A0A0 A0A0 
000026F4  A0A0 A0A0 
000026F8  A0A0 A0A0 3196          dc.b      160,160,160,160,160,160,160,140,140,140,140
000026FC  A0A0 A08C 
00002700  8C8C 8C   
00002703  8C8C 8C8C 3197          dc.b      140,140,140,140,140,140,160,160,160,160,160
00002707  8C8C A0A0 
0000270B  A0A0 A0   
0000270E  A0A0 8A8A 3198          dc.b      160,160,138,138,138,138,138,138,130,130,130
00002712  8A8A 8A8A 
00002716  8282 82   
00002719  8282 8282 3199          dc.b      130,130,130,130,130,130,130,130,130,130,130
0000271D  8282 8282 
00002721  8282 82   
00002724  8282 8282 3200          dc.b      130,130,130,130,130,130,160,160,160,160,160
00002728  8282 A0A0 
0000272C  A0A0 A0   
0000272F  A089 8989 3201          dc.b      160,137,137,137,137,137,137,129,129,129,129
00002733  8989 8981 
00002737  8181 81   
0000273A  8181 8181 3202          dc.b      129,129,129,129,129,129,129,129,129,129,129
0000273E  8181 8181 
00002742  8181 81   
00002745  8181 8181 3203          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
00002749  81A0 A0A0 
0000274D  A040 0000 
00002751  00        
00002752  0000 0000 3204          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00002756  0000 0000 
0000275A  0000 0000 
0000275E  0000 0000 
00002762  0000 0000 
00002766  0000      
00002768  0000 0000 3205          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0000276C  0000 0000 
00002770  0000 0000 
00002774  0000 0000 
00002778  0000 0000 
0000277C  0000      
0000277E  0000 0000 3206          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00002782  0000 0000 
00002786  0000 0000 
0000278A  0000 0000 
0000278E  0000 0000 
00002792  0000      
00002794  0000 0000 3207          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00002798  0000 0000 
0000279C  0000 0000 
000027A0  0000 0000 
000027A4  0000 0000 
000027A8  0000      
000027AA  0000 0000 3208          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
000027AE  0000 0000 
000027B2  0000 0000 
000027B6  0000 0000 
000027BA  0000 0000 
000027BE  0000      
000027C0  0000 0000 3209          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
000027C4  0000 0000 
000027C8  0000 0000 
000027CC  0000 00   
                    3210   @itoa_1:
000027D0  2D32 3134 3211          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
000027D4  3734 3833 
000027D8  3634 3800 
                    3212          section   data
000027DC            3213                   align
          0000 27DC 3214   DataStart       equ       *
                    3215   
                    3216   *********************************************************************************************************
                    3217   * Data Section for Initialised Data - these will be placed in rom as constants and have to be copied
                    3218   * to ram as part of the CStart routine in this file
                    3219   *********************************************************************************************************
                    3220   
                    3221   @doscan_lpbuf:
000027DC  0803 00C4 3222          dc.l      @doscan_buf
                    3223          section   bss
000027E0            3224                   align
          0000 27E0 3225   DataEnd         equ     *                       this label will equate to the address of the last byte of global variable in it
                    3226   
                    3227   *********************************************************************************************************
                    3228   * Section for Uninitialised Data held in ROM as constants
                    3229   *********************************************************************************************************
                    3230   
08030000            3231                   org     RamVectorTable          Ram based vector table must be stored here otherwise InstallException Handler will not work
          0000 0004 3232   DataLength      equ     DataEnd-DataStart       length of data needed to copy to Ram on bootup
                    3233   
                    3234   
08030000            3235   bss             org       bss
                    3236   
                    3237   *********************************************************************************************************
                    3238   * Build a ram based vector table for interrupts so we can install our own Exception Handlers in C code at run time
                    3239   * install the exception handler using the C function InstallExceptionHandler()
                    3240   *********************************************************************************************************
                    3241   
                    3242   
                    3243   
08030000            3244   VInitialSP       ds.l    1      dummy as we can't really install a handler for this
08030004            3245   VInitialPC       ds.l    1      dummy as we can't reallin install a handler for this
08030008            3246   VBusError        ds.l    1      storage for address of Bus Error Handler
0803000C            3247   VAddressError    ds.l    1      storage for address of Address Error Handler
08030010            3248   VIllegalInstr    ds.l    1      storage for address of Illegal Instruction handler
08030014            3249   VDividebyZero    ds.l    1      storage for address of divide by zero handler
08030018            3250   VCheck           ds.l    1      ditto
0803001C            3251   VTrapV           ds.l    1      ditto
08030020            3252   VPrivilege       ds.l    1      ditto
08030024            3253   VTrace           ds.l    1
08030028            3254   VLine1010emul    ds.l    1
0803002C            3255   VLine1111emul    ds.l    1
08030030            3256   VUnassigned1     ds.l    1
08030034            3257   VUnassigned2     ds.l    1
08030038            3258   VUnassigned3     ds.l    1
0803003C            3259   VUninit_IRQ      ds.l    1
08030040            3260   VUnassigned4     ds.l    1
08030044            3261   VUnassigned5     ds.l    1
08030048            3262   VUnassigned6     ds.l    1
0803004C            3263   VUnassigned7     ds.l    1
08030050            3264   VUnassigned8     ds.l    1
08030054            3265   VUnassigned9     ds.l    1
08030058            3266   VUnassigned10    ds.l    1
0803005C            3267   VUnassigned11    ds.l    1
08030060            3268   VSpuriousIRQ     ds.l    1
                    3269   
                    3270   * Interrupt handlers Vector 25-31
08030064            3271   VL1IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
08030068            3272   VL2IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
0803006C            3273   VL3IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
08030070            3274   VL4IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
08030074            3275   VL5IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
08030078            3276   VL6IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
0803007C            3277   VL7IRQ           ds.l    1       storage for 4 byte address of IRQ handler in your C program - install the handler using the C function InstallExceptionHandler()
                    3278   
                    3279   * Trap Handler vectors 32-47
08030080            3280   VTrap0           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
08030084            3281   VTrap1           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
08030088            3282   VTrap2           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
0803008C            3283   VTrap3           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
08030090            3284   VTrap4           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
08030094            3285   VTrap5           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
08030098            3286   VTrap6           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
0803009C            3287   VTrap7           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300A0            3288   VTrap8           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300A4            3289   VTrap9           ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300A8            3290   VTrap10          ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300AC            3291   VTrap11          ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300B0            3292   VTrap12          ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300B4            3293   VTrap13          ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300B8            3294   VTrap14          ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
080300BC            3295   VTrap15          ds.l   1        storage for 4 byte address of TRAP handler in your C program - install the handler using the C function InstallExceptionHandler()
                    3296   
                    3297   * the remaining exceptions are unassigned in the 68000 so no need to allocate storage for them here
                    3298   
                    3299   ***********************************************************************************************************
                    3300   * Other Variables
                    3301   ***********************************************************************************************************
                    3302   *__DebugA5       ds.l    1
                    3303   *__UserA5        ds.l    1
                    3304   
                    3305   ***********************************************************************************************************
080300C0            3306   __ungetbuf:     ds.l    1       ; ungetbuffer for stdio functions
080300C4            3307   __allocp:       ds.l    0       ; start of allocation units
080300C4            3308   __heap:         ds.l    0       ; pointers for malloc functions
                    3309   
                    3310   *__himem:       ds.l    himem            ; highest memory location + 1
                    3311   *__stklen:      ds.l    stklen           ; default stack size
                    3312   
                    3313   *********************************************************************************************************
                    3314   * Section for Heap
                    3315   *********************************************************************************************************
                    3316   
                    3317   @doscan_buf:
080300C4            3318          ds.b      80
                    3319          section   heap
08030114            3320                   align
          0803 0114 3321   bssEnd          equ *                   end of storage space for unitialised variables
                    3322   *                                       we have to copy all initialised variable from rom to here at startup
          0803 0114 3323   heap   equ       *
08030114            3324                    align
          0000 0000

Assembly errors: 99
