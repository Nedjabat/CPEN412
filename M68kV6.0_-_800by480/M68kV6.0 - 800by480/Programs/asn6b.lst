680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 13 Apr 2023      Time: 11:29:59          Source: C:\M68KV6.0 - 800BY480\PROGRAMS\ASN6B.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  212A      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  006E      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  200A      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  200E      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  2198 0800 
08000034  2012      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  02B0      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\CPEN412\ASN6\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; #include "Canbus-Controller.h"
                      49   ; /*******************************************************************************************
                      50   ; ** ADC Types
                      51   ; *******************************************************************************************/
                      52   ; #define TEMP        0
                      53   ; #define POTENTIAL   1
                      54   ; #define LIGHT       2
                      55   ; #define SWITCHES    3
                      56   ; //IMPORTANT
                      57   ; //
                      58   ; // Uncomment one of the two #defines below
                      59   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      60   ; // 0B000000 for running programs from dram
                      61   ; //
                      62   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      63   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      64   ; // building
                      65   ; //
                      66   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      67   ; // is based around Dram so #define accordingly before building
                      68   ; //#define StartOfExceptionVectorTable 0x08030000
                      69   ; #define StartOfExceptionVectorTable 0x0B000000
                      70   ; /**********************************************************************************************
                      71   ; **	Parallel port addresses
                      72   ; **********************************************************************************************/
                      73   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      74   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      75   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      76   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      77   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      78   ; /*********************************************************************************************
                      79   ; **	Hex 7 seg displays port addresses
                      80   ; *********************************************************************************************/
                      81   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      82   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      83   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      84   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      85   ; /**********************************************************************************************
                      86   ; **	LCD display port addresses
                      87   ; **********************************************************************************************/
                      88   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      89   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      90   ; /********************************************************************************************
                      91   ; **	Timer Port addresses
                      92   ; *********************************************************************************************/
                      93   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      94   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      95   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      96   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      97   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      98   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      99   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                     100   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                     101   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                     102   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                     103   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                     104   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                     105   ; #define Timer5Data      *(volatile unsigned char *)(0x00400130)
                     106   ; #define Timer5Control   *(volatile unsigned char *)(0x00400132)
                     107   ; #define Timer5Status    *(volatile unsigned char *)(0x00400132)
                     108   ; #define Timer6Data      *(volatile unsigned char *)(0x00400134)
                     109   ; #define Timer6Control   *(volatile unsigned char *)(0x00400136)
                     110   ; #define Timer6Status    *(volatile unsigned char *)(0x00400136)
                     111   ; #define Timer7Data      *(volatile unsigned char *)(0x00400138)
                     112   ; #define Timer7Control   *(volatile unsigned char *)(0x0040013A)
                     113   ; #define Timer7Status    *(volatile unsigned char *)(0x0040013A)
                     114   ; #define Timer8Data      *(volatile unsigned char *)(0x0040013C)
                     115   ; #define Timer8Control   *(volatile unsigned char *)(0x0040013E)
                     116   ; #define Timer8Status    *(volatile unsigned char *)(0x0040013E)
                     117   ; /*********************************************************************************************
                     118   ; **	RS232 port addresses
                     119   ; *********************************************************************************************/
                     120   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     121   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     122   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     123   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     124   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     125   ; /*********************************************************************************************
                     126   ; **	PIA 1 and 2 port addresses
                     127   ; *********************************************************************************************/
                     128   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     129   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     130   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     131   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     132   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     133   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     134   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     135   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     136   ; /*********************************************************************************************************************************
                     137   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     138   ; (( it's a limitation of the compiler
                     139   ; (( YOU HAVE BEEN WARNED
                     140   ; *********************************************************************************************************************************/
                     141   ; unsigned int i, x, y, z, PortA_Count;
                     142   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     143   ; /***Global Variables for Timer ISR*/
                     144   ; unsigned char Timer8ISRCount;
                     145   ; /*******************************************************************************************
                     146   ; ** Function Prototypes
                     147   ; *******************************************************************************************/
                     148   ; void Wait1ms(void);
                     149   ; void Wait3ms(void);
                     150   ; void Init_LCD(void) ;
                     151   ; void LCDOutchar(int c);
                     152   ; void LCDOutMess(char *theMessage);
                     153   ; void LCDClearln(void);
                     154   ; void LCDline1Message(char *theMessage);
                     155   ; void LCDline2Message(char *theMessage);
                     156   ; int sprintf(char *out, const char *format, ...) ;
                     157   ; /*****************************************************************************************
                     158   ; **	Interrupt service routine for Timers
                     159   ; **
                     160   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     161   ; **  out which timer is producing the interrupt
                     162   ; **
                     163   ; *****************************************************************************************/
                     164   ; void Timer_ISR()
                     165   ; {
                     166   _Timer_ISR:
                     167   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  168          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  169          cmp.b     #1,D0
08000048  661A       170          bne.s     Timer_ISR_1
                     171   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  172          move.b    #3,4194354
0800004E  0040 0032 
                     173   ; PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
08000052  1039 0800  174          move.b    _Timer1Count.L,D0
08000056  213E      
08000058  5239 0800  175          addq.b    #1,_Timer1Count.L
0800005C  213E      
0800005E  13C0 0040  176          move.b    D0,4194304
08000062  0000      
                     177   Timer_ISR_1:
                     178   ; }
                     179   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000064  1039 0040  180          move.b    4194358,D0
08000068  0036      
0800006A  0C00 0001  181          cmp.b     #1,D0
0800006E  661A       182          bne.s     Timer_ISR_3
                     183   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000070  13FC 0003  184          move.b    #3,4194358
08000074  0040 0036 
                     185   ; PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
08000078  1039 0800  186          move.b    _Timer2Count.L,D0
0800007C  2140      
0800007E  5239 0800  187          addq.b    #1,_Timer2Count.L
08000082  2140      
08000084  13C0 0040  188          move.b    D0,4194308
08000088  0004      
                     189   Timer_ISR_3:
                     190   ; }
                     191   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
0800008A  1039 0040  192          move.b    4194362,D0
0800008E  003A      
08000090  0C00 0001  193          cmp.b     #1,D0
08000094  661A       194          bne.s     Timer_ISR_5
                     195   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000096  13FC 0003  196          move.b    #3,4194362
0800009A  0040 003A 
                     197   ; HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
0800009E  1039 0800  198          move.b    _Timer3Count.L,D0
080000A2  2142      
080000A4  5239 0800  199          addq.b    #1,_Timer3Count.L
080000A8  2142      
080000AA  13C0 0040  200          move.b    D0,4194320
080000AE  0010      
                     201   Timer_ISR_5:
                     202   ; }
                     203   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
080000B0  1039 0040  204          move.b    4194366,D0
080000B4  003E      
080000B6  0C00 0001  205          cmp.b     #1,D0
080000BA  661A       206          bne.s     Timer_ISR_7
                     207   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
080000BC  13FC 0003  208          move.b    #3,4194366
080000C0  0040 003E 
                     209   ; HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
080000C4  1039 0800  210          move.b    _Timer4Count.L,D0
080000C8  2144      
080000CA  5239 0800  211          addq.b    #1,_Timer4Count.L
080000CE  2144      
080000D0  13C0 0040  212          move.b    D0,4194322
080000D4  0012      
                     213   Timer_ISR_7:
080000D6  4E75       214          rts
                     215   ; }
                     216   ; }
                     217   ; void Timer_IRQ()
                     218   ; {
                     219   _Timer_IRQ:
                     220   ; if (Timer8Status == 1) {        // Did Timer 5 produce the Interrupt?
080000D8  1039 0040  221          move.b    4194622,D0
080000DC  013E      
080000DE  0C00 0001  222          cmp.b     #1,D0
080000E2  661A       223          bne.s     Timer_IRQ_1
                     224   ; Timer8Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
080000E4  13FC 0003  225          move.b    #3,4194622
080000E8  0040 013E 
                     226   ; PortC = Timer8ISRCount++;
080000EC  1039 0800  227          move.b    _Timer8ISRCount.L,D0
080000F0  2146      
080000F2  5239 0800  228          addq.b    #1,_Timer8ISRCount.L
080000F6  2146      
080000F8  13C0 0040  229          move.b    D0,4194308
080000FC  0004      
                     230   Timer_IRQ_1:
080000FE  4E75       231          rts
                     232   ; }
                     233   ; }
                     234   ; /*****************************************************************************************
                     235   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     236   ; **  Add your code here to poll Status register and clear interrupt
                     237   ; *****************************************************************************************/
                     238   ; void ACIA_ISR()
                     239   ; {}
                     240   _ACIA_ISR:
08000100  4E75       241          rts
                     242   ; /***************************************************************************************
                     243   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     244   ; **  Add your code here to poll Status register and clear interrupt
                     245   ; *****************************************************************************************/
                     246   ; void PIA_ISR()
                     247   ; {}
                     248   _PIA_ISR:
08000102  4E75       249          rts
                     250   ; /***********************************************************************************
                     251   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     252   ; ************************************************************************************/
                     253   ; void Key2PressISR()
                     254   ; {}
                     255   _Key2PressISR:
08000104  4E75       256          rts
                     257   ; /***********************************************************************************
                     258   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     259   ; ************************************************************************************/
                     260   ; void Key1PressISR()
                     261   ; {}
                     262   _Key1PressISR:
08000106  4E75       263          rts
                     264   ; /************************************************************************************
                     265   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     266   ; ************************************************************************************/
                     267   ; void Wait1ms(void)
                     268   ; {
                     269   _Wait1ms:
08000108  2F02       270          move.l    D2,-(A7)
                     271   ; int  i ;
                     272   ; for(i = 0; i < 1000; i ++)
0800010A  4282       273          clr.l     D2
                     274   Wait1ms_1:
0800010C  0C82 0000  275          cmp.l     #1000,D2
08000110  03E8      
08000112  6C04       276          bge.s     Wait1ms_3
08000114  5282       277          addq.l    #1,D2
08000116  60F4       278          bra       Wait1ms_1
                     279   Wait1ms_3:
08000118  241F       280          move.l    (A7)+,D2
0800011A  4E75       281          rts
                     282   ; ;
                     283   ; }
                     284   ; /************************************************************************************
                     285   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     286   ; **************************************************************************************/
                     287   ; void Wait3ms(void)
                     288   ; {
                     289   _Wait3ms:
0800011C  2F02       290          move.l    D2,-(A7)
                     291   ; int i ;
                     292   ; for(i = 0; i < 3; i++)
0800011E  4282       293          clr.l     D2
                     294   Wait3ms_1:
08000120  0C82 0000  295          cmp.l     #3,D2
08000124  0003      
08000126  6C0A       296          bge.s     Wait3ms_3
                     297   ; Wait1ms() ;
08000128  4EB9 0800  298          jsr       _Wait1ms
0800012C  0108      
0800012E  5282       299          addq.l    #1,D2
08000130  60EE       300          bra       Wait3ms_1
                     301   Wait3ms_3:
08000132  241F       302          move.l    (A7)+,D2
08000134  4E75       303          rts
                     304   ; }
                     305   ; /*********************************************************************************************
                     306   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     307   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     308   ; *********************************************************************************************/
                     309   ; void Init_LCD(void)
                     310   ; {
                     311   _Init_LCD:
                     312   ; LCDcommand = 0x0c ;
08000136  13FC 000C  313          move.b    #12,4194336
0800013A  0040 0020 
                     314   ; Wait3ms() ;
0800013E  4EB9 0800  315          jsr       _Wait3ms
08000142  011C      
                     316   ; LCDcommand = 0x38 ;
08000144  13FC 0038  317          move.b    #56,4194336
08000148  0040 0020 
                     318   ; Wait3ms() ;
0800014C  4EB9 0800  319          jsr       _Wait3ms
08000150  011C      
08000152  4E75       320          rts
                     321   ; }
                     322   ; /*********************************************************************************************
                     323   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     324   ; *********************************************************************************************/
                     325   ; void Init_RS232(void)
                     326   ; {
                     327   _Init_RS232:
                     328   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
08000154  13FC 0015  329          move.b    #21,4194368
08000158  0040 0040 
                     330   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
0800015C  13FC 0001  331          move.b    #1,4194372
08000160  0040 0044 
08000164  4E75       332          rts
                     333   ; }
                     334   ; /*********************************************************************************************************
                     335   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     336   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     337   ; **  to allow the board to communicate with HyperTerminal Program
                     338   ; **
                     339   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     340   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     341   ; **  call _putch() also
                     342   ; *********************************************************************************************************/
                     343   ; int _putch( int c)
                     344   ; {
                     345   __putch:
08000166  4E56 0000  346          link      A6,#0
                     347   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     348   _putch_1:
0800016A  1039 0040  349          move.b    4194368,D0
0800016E  0040      
08000170  C03C 0002  350          and.b     #2,D0
08000174  0C00 0002  351          cmp.b     #2,D0
08000178  6702       352          beq.s     _putch_3
0800017A  60EE       353          bra       _putch_1
                     354   _putch_3:
                     355   ; ;
                     356   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
0800017C  202E 0008  357          move.l    8(A6),D0
08000180  C0BC 0000  358          and.l     #127,D0
08000184  007F      
08000186  13C0 0040  359          move.b    D0,4194370
0800018A  0042      
                     360   ; return c ;                                              // putchar() expects the character to be returned
0800018C  202E 0008  361          move.l    8(A6),D0
08000190  4E5E       362          unlk      A6
08000192  4E75       363          rts
                     364   ; }
                     365   ; /*********************************************************************************************************
                     366   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     367   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     368   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     369   ; **
                     370   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     371   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     372   ; **  call _getch() also
                     373   ; *********************************************************************************************************/
                     374   ; int _getch( void )
                     375   ; {
                     376   __getch:
08000194  4E56 FFFC  377          link      A6,#-4
                     378   ; char c ;
                     379   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     380   _getch_1:
08000198  1039 0040  381          move.b    4194368,D0
0800019C  0040      
0800019E  C03C 0001  382          and.b     #1,D0
080001A2  0C00 0001  383          cmp.b     #1,D0
080001A6  6702       384          beq.s     _getch_3
080001A8  60EE       385          bra       _getch_1
                     386   _getch_3:
                     387   ; ;
                     388   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
080001AA  1039 0040  389          move.b    4194370,D0
080001AE  0042      
080001B0  C0BC 0000  390          and.l     #255,D0
080001B4  00FF      
080001B6  C0BC 0000  391          and.l     #127,D0
080001BA  007F      
080001BC  4E5E       392          unlk      A6
080001BE  4E75       393          rts
                     394   ; }
                     395   ; /******************************************************************************
                     396   ; **  Subroutine to output a single character to the 2 row LCD display
                     397   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     398   ; **  current cursor position
                     399   ; *******************************************************************************/
                     400   ; void LCDOutchar(int c)
                     401   ; {
                     402   _LCDOutchar:
080001C0  4E56 0000  403          link      A6,#0
                     404   ; LCDdata = (char)(c);
080001C4  202E 0008  405          move.l    8(A6),D0
080001C8  13C0 0040  406          move.b    D0,4194338
080001CC  0022      
                     407   ; Wait1ms() ;
080001CE  4EB9 0800  408          jsr       _Wait1ms
080001D2  0108      
080001D4  4E5E       409          unlk      A6
080001D6  4E75       410          rts
                     411   ; }
                     412   ; /**********************************************************************************
                     413   ; *subroutine to output a message at the current cursor position of the LCD display
                     414   ; ************************************************************************************/
                     415   ; void LCDOutMessage(char *theMessage)
                     416   ; {
                     417   _LCDOutMessage:
080001D8  4E56 FFFC  418          link      A6,#-4
                     419   ; char c ;
                     420   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     421   LCDOutMessage_1:
080001DC  206E 0008  422          move.l    8(A6),A0
080001E0  52AE 0008  423          addq.l    #1,8(A6)
080001E4  1D50 FFFF  424          move.b    (A0),-1(A6)
080001E8  1010       425          move.b    (A0),D0
080001EA  6714       426          beq.s     LCDOutMessage_3
                     427   ; LCDOutchar(c) ;
080001EC  122E FFFF  428          move.b    -1(A6),D1
080001F0  4881       429          ext.w     D1
080001F2  48C1       430          ext.l     D1
080001F4  2F01       431          move.l    D1,-(A7)
080001F6  4EB9 0800  432          jsr       _LCDOutchar
080001FA  01C0      
080001FC  584F       433          addq.w    #4,A7
080001FE  60DC       434          bra       LCDOutMessage_1
                     435   LCDOutMessage_3:
08000200  4E5E       436          unlk      A6
08000202  4E75       437          rts
                     438   ; }
                     439   ; /******************************************************************************
                     440   ; *subroutine to clear the line by issuing 24 space characters
                     441   ; *******************************************************************************/
                     442   ; void LCDClearln(void)
                     443   ; {
                     444   _LCDClearln:
08000204  2F02       445          move.l    D2,-(A7)
                     446   ; int i ;
                     447   ; for(i = 0; i < 24; i ++)
08000206  4282       448          clr.l     D2
                     449   LCDClearln_1:
08000208  0C82 0000  450          cmp.l     #24,D2
0800020C  0018      
0800020E  6C10       451          bge.s     LCDClearln_3
                     452   ; LCDOutchar(' ') ;       // write a space char to the LCD display
08000210  4878 0020  453          pea       32
08000214  4EB9 0800  454          jsr       _LCDOutchar
08000218  01C0      
0800021A  584F       455          addq.w    #4,A7
0800021C  5282       456          addq.l    #1,D2
0800021E  60E8       457          bra       LCDClearln_1
                     458   LCDClearln_3:
08000220  241F       459          move.l    (A7)+,D2
08000222  4E75       460          rts
                     461   ; }
                     462   ; /******************************************************************************
                     463   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     464   ; *******************************************************************************/
                     465   ; void LCDLine1Message(char *theMessage)
                     466   ; {
                     467   _LCDLine1Message:
08000224  4E56 0000  468          link      A6,#0
                     469   ; LCDcommand = 0x80 ;
08000228  13FC 0080  470          move.b    #128,4194336
0800022C  0040 0020 
                     471   ; Wait3ms();
08000230  4EB9 0800  472          jsr       _Wait3ms
08000234  011C      
                     473   ; LCDClearln() ;
08000236  4EB9 0800  474          jsr       _LCDClearln
0800023A  0204      
                     475   ; LCDcommand = 0x80 ;
0800023C  13FC 0080  476          move.b    #128,4194336
08000240  0040 0020 
                     477   ; Wait3ms() ;
08000244  4EB9 0800  478          jsr       _Wait3ms
08000248  011C      
                     479   ; LCDOutMessage(theMessage) ;
0800024A  2F2E 0008  480          move.l    8(A6),-(A7)
0800024E  4EB9 0800  481          jsr       _LCDOutMessage
08000252  01D8      
08000254  584F       482          addq.w    #4,A7
08000256  4E5E       483          unlk      A6
08000258  4E75       484          rts
                     485   ; }
                     486   ; /******************************************************************************
                     487   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     488   ; *******************************************************************************/
                     489   ; void LCDLine2Message(char *theMessage)
                     490   ; {
                     491   _LCDLine2Message:
0800025A  4E56 0000  492          link      A6,#0
                     493   ; LCDcommand = 0xC0 ;
0800025E  13FC 00C0  494          move.b    #192,4194336
08000262  0040 0020 
                     495   ; Wait3ms();
08000266  4EB9 0800  496          jsr       _Wait3ms
0800026A  011C      
                     497   ; LCDClearln() ;
0800026C  4EB9 0800  498          jsr       _LCDClearln
08000270  0204      
                     499   ; LCDcommand = 0xC0 ;
08000272  13FC 00C0  500          move.b    #192,4194336
08000276  0040 0020 
                     501   ; Wait3ms() ;
0800027A  4EB9 0800  502          jsr       _Wait3ms
0800027E  011C      
                     503   ; LCDOutMessage(theMessage) ;
08000280  2F2E 0008  504          move.l    8(A6),-(A7)
08000284  4EB9 0800  505          jsr       _LCDOutMessage
08000288  01D8      
0800028A  584F       506          addq.w    #4,A7
0800028C  4E5E       507          unlk      A6
0800028E  4E75       508          rts
                     509   ; }
                     510   ; /*********************************************************************************************************************************
                     511   ; **  IMPORTANT FUNCTION
                     512   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     513   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     514   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     515   ; **  Calling this function allows you to deal with Interrupts for example
                     516   ; ***********************************************************************************************************************************/
                     517   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     518   ; {
                     519   _InstallExceptionHandler:
08000290  4E56 FFFC  520          link      A6,#-4
                     521   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
08000294  2D7C 0B00  522          move.l    #184549376,-4(A6)
08000298  0000 FFFC 
                     523   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
0800029C  206E FFFC  524          move.l    -4(A6),A0
080002A0  202E 000C  525          move.l    12(A6),D0
080002A4  E588       526          lsl.l     #2,D0
080002A6  21AE 0008  527          move.l    8(A6),0(A0,D0.L)
080002AA  0800      
080002AC  4E5E       528          unlk      A6
080002AE  4E75       529          rts
                     530   ; }
                     531   ; /******************************************************************************************************************************
                     532   ; * Start of user program
                     533   ; ******************************************************************************************************************************/
                     534   ; void main()
                     535   ; {
                     536   _main:
080002B0  4E56 FF4C  537          link      A6,#-180
080002B4  48E7 203C  538          movem.l   D2/A2/A3/A4/A5,-(A7)
080002B8  45F9 0800  539          lea       _InstallExceptionHandler.L,A2
080002BC  0290      
080002BE  47F9 0800  540          lea       _CanBus1_Receive.L,A3
080002C2  0796      
080002C4  49F9 0800  541          lea       _CanBus0_Transmit.L,A4
080002C8  0642      
080002CA  4BF9 0800  542          lea       _ADCWrite.L,A5
080002CE  0984      
                     543   ; unsigned char IQR_Check;
                     544   ; unsigned int row, i=0, count=0, counter1=1;
080002D0  42AE FF50  545          clr.l     -176(A6)
080002D4  42AE FF54  546          clr.l     -172(A6)
080002D8  2D7C 0000  547          move.l    #1,-168(A6)
080002DC  0001 FF58 
                     548   ; char c, text[150] ;
                     549   ; unsigned char temp, potential, light;
                     550   ; int switches;
                     551   ; int PassFailFlag = 1;
080002E0  2D7C 0000  552          move.l    #1,-4(A6)
080002E4  0001 FFFC 
                     553   ; i = x = y = z = PortA_Count = 0;
080002E8  42B9 0800  554          clr.l     _PortA_Count.L
080002EC  213A      
080002EE  42B9 0800  555          clr.l     _z.L
080002F2  2136      
080002F4  42B9 0800  556          clr.l     _y.L
080002F8  2132      
080002FA  42B9 0800  557          clr.l     _x.L
080002FE  212E      
08000300  42AE FF50  558          clr.l     -176(A6)
                     559   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
08000304  4239 0800  560          clr.b     _Timer4Count.L
08000308  2144      
0800030A  4239 0800  561          clr.b     _Timer3Count.L
0800030E  2142      
08000310  4239 0800  562          clr.b     _Timer2Count.L
08000314  2140      
08000316  4239 0800  563          clr.b     _Timer1Count.L
0800031A  213E      
                     564   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
0800031C  4878 0019  565          pea       25
08000320  4879 0800  566          pea       _PIA_ISR.L
08000324  0102      
08000326  4E92       567          jsr       (A2)
08000328  504F       568          addq.w    #8,A7
                     569   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
0800032A  4878 001A  570          pea       26
0800032E  4879 0800  571          pea       _ACIA_ISR.L
08000332  0100      
08000334  4E92       572          jsr       (A2)
08000336  504F       573          addq.w    #8,A7
                     574   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
08000338  4878 001B  575          pea       27
0800033C  4879 0800  576          pea       _Timer_ISR.L
08000340  003E      
08000342  4E92       577          jsr       (A2)
08000344  504F       578          addq.w    #8,A7
                     579   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
08000346  4878 001C  580          pea       28
0800034A  4879 0800  581          pea       _Key2PressISR.L
0800034E  0104      
08000350  4E92       582          jsr       (A2)
08000352  504F       583          addq.w    #8,A7
                     584   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
08000354  4878 001D  585          pea       29
08000358  4879 0800  586          pea       _Key1PressISR.L
0800035C  0106      
0800035E  4E92       587          jsr       (A2)
08000360  504F       588          addq.w    #8,A7
                     589   ; Timer1Data = 0x10;		// program time delay into timers 1-4
08000362  13FC 0010  590          move.b    #16,4194352
08000366  0040 0030 
                     591   ; Timer2Data = 0x20;
0800036A  13FC 0020  592          move.b    #32,4194356
0800036E  0040 0034 
                     593   ; Timer3Data = 0x15;
08000372  13FC 0015  594          move.b    #21,4194360
08000376  0040 0038 
                     595   ; Timer4Data = 0x25;
0800037A  13FC 0025  596          move.b    #37,4194364
0800037E  0040 003C 
                     597   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
08000382  13FC 0003  598          move.b    #3,4194354
08000386  0040 0032 
                     599   ; Timer2Control = 3;
0800038A  13FC 0003  600          move.b    #3,4194358
0800038E  0040 0036 
                     601   ; Timer3Control = 3;
08000392  13FC 0003  602          move.b    #3,4194362
08000396  0040 003A 
                     603   ; Timer4Control = 3;
0800039A  13FC 0003  604          move.b    #3,4194366
0800039E  0040 003E 
                     605   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
080003A2  4EB9 0800  606          jsr       _Init_LCD
080003A6  0136      
                     607   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
080003A8  4EB9 0800  608          jsr       _Init_RS232
080003AC  0154      
                     609   ; I2C_Init();             //initialise the I2C
080003AE  4EB9 0800  610          jsr       _I2C_Init
080003B2  0974      
                     611   ; // initialise CanBus controllers
                     612   ; Init_CanBus_Controller0();
080003B4  4EB9 0800  613          jsr       _Init_CanBus_Controller0
080003B8  0522      
                     614   ; Init_CanBus_Controller1();
080003BA  4EB9 0800  615          jsr       _Init_CanBus_Controller1
080003BE  05B2      
                     616   ; //initialize parameters for timmer
                     617   ; Timer8ISRCount = 0;
080003C0  4239 0800  618          clr.b     _Timer8ISRCount.L
080003C4  2146      
                     619   ; InstallExceptionHandler(Timer_IRQ, 30);
080003C6  4878 001E  620          pea       30
080003CA  4879 0800  621          pea       _Timer_IRQ.L
080003CE  00D8      
080003D0  4E92       622          jsr       (A2)
080003D2  504F       623          addq.w    #8,A7
                     624   ; Timer8Data = 0x1E;
080003D4  13FC 001E  625          move.b    #30,4194620
080003D8  0040 013C 
                     626   ; Timer8Control = 3;
080003DC  13FC 0003  627          move.b    #3,4194622
080003E0  0040 013E 
                     628   ; scanflush() ;                       // flush any text that may have been typed ahead
080003E4  4EB9 0800  629          jsr       _scanflush
080003E8  0CE8      
                     630   ; printf("\n");
080003EA  4879 0800  631          pea       @m68kus~1_1.L
080003EE  1E96      
080003F0  4EB9 0800  632          jsr       _printf
080003F4  12F4      
080003F6  584F       633          addq.w    #4,A7
                     634   ; IQR_Check = 0;
080003F8  4202       635          clr.b     D2
                     636   ; while(1){
                     637   main_1:
                     638   ; if(Timer8ISRCount != IQR_Check){
080003FA  B439 0800  639          cmp.b     _Timer8ISRCount.L,D2
080003FE  2146      
08000400  6700 011C  640          beq       main_4
                     641   ; printf("|==========MEASURING==========|\n");
08000404  4879 0800  642          pea       @m68kus~1_2.L
08000408  1E98      
0800040A  4EB9 0800  643          jsr       _printf
0800040E  12F4      
08000410  584F       644          addq.w    #4,A7
                     645   ; if (Timer8ISRCount % 1 == 0){
08000412  1039 0800  646          move.b    _Timer8ISRCount.L,D0
08000416  2146      
08000418  C0BC 0000  647          and.l     #65535,D0
0800041C  FFFF      
0800041E  80FC 0001  648          divu.w    #1,D0
08000422  4840       649          swap      D0
08000424  4A00       650          tst.b     D0
08000426  6638       651          bne.s     main_6
                     652   ; switches = (PortB << 8) | (PortA);
08000428  1039 0040  653          move.b    4194306,D0
0800042C  0002      
0800042E  C0BC 0000  654          and.l     #255,D0
08000432  00FF      
08000434  E188       655          lsl.l     #8,D0
08000436  1239 0040  656          move.b    4194304,D1
0800043A  0000      
0800043C  C2BC 0000  657          and.l     #255,D1
08000440  00FF      
08000442  8081       658          or.l      D1,D0
08000444  2D40 FFF8  659          move.l    D0,-8(A6)
                     660   ; CanBus0_Transmit(switches);
08000448  222E FFF8  661          move.l    -8(A6),D1
0800044C  C2BC 0000  662          and.l     #255,D1
08000450  00FF      
08000452  2F01       663          move.l    D1,-(A7)
08000454  4E94       664          jsr       (A4)
08000456  584F       665          addq.w    #4,A7
                     666   ; CanBus1_Receive(SWITCHES);
08000458  4878 0003  667          pea       3
0800045C  4E93       668          jsr       (A3)
0800045E  584F       669          addq.w    #4,A7
                     670   main_6:
                     671   ; }
                     672   ; if (Timer8ISRCount % 2 == 0){
08000460  1039 0800  673          move.b    _Timer8ISRCount.L,D0
08000464  2146      
08000466  C0BC 0000  674          and.l     #65535,D0
0800046A  FFFF      
0800046C  80FC 0002  675          divu.w    #2,D0
08000470  4840       676          swap      D0
08000472  4A00       677          tst.b     D0
08000474  6624       678          bne.s     main_8
                     679   ; potential = ADCWrite(POTENTIAL);
08000476  4878 0001  680          pea       1
0800047A  4E95       681          jsr       (A5)
0800047C  584F       682          addq.w    #4,A7
0800047E  1D40 FFF6  683          move.b    D0,-10(A6)
                     684   ; CanBus0_Transmit(potential) ;
08000482  122E FFF6  685          move.b    -10(A6),D1
08000486  C2BC 0000  686          and.l     #255,D1
0800048A  00FF      
0800048C  2F01       687          move.l    D1,-(A7)
0800048E  4E94       688          jsr       (A4)
08000490  584F       689          addq.w    #4,A7
                     690   ; CanBus1_Receive(POTENTIAL) ;
08000492  4878 0001  691          pea       1
08000496  4E93       692          jsr       (A3)
08000498  584F       693          addq.w    #4,A7
                     694   main_8:
                     695   ; }
                     696   ; if (Timer8ISRCount % 5 == 0){
0800049A  1039 0800  697          move.b    _Timer8ISRCount.L,D0
0800049E  2146      
080004A0  C0BC 0000  698          and.l     #65535,D0
080004A4  FFFF      
080004A6  80FC 0005  699          divu.w    #5,D0
080004AA  4840       700          swap      D0
080004AC  4A00       701          tst.b     D0
080004AE  6624       702          bne.s     main_10
                     703   ; light = ADCWrite(LIGHT);
080004B0  4878 0002  704          pea       2
080004B4  4E95       705          jsr       (A5)
080004B6  584F       706          addq.w    #4,A7
080004B8  1D40 FFF7  707          move.b    D0,-9(A6)
                     708   ; CanBus0_Transmit(light) ;
080004BC  122E FFF7  709          move.b    -9(A6),D1
080004C0  C2BC 0000  710          and.l     #255,D1
080004C4  00FF      
080004C6  2F01       711          move.l    D1,-(A7)
080004C8  4E94       712          jsr       (A4)
080004CA  584F       713          addq.w    #4,A7
                     714   ; CanBus1_Receive(LIGHT) ;
080004CC  4878 0002  715          pea       2
080004D0  4E93       716          jsr       (A3)
080004D2  584F       717          addq.w    #4,A7
                     718   main_10:
                     719   ; }
                     720   ; if (Timer8ISRCount % 20 == 0){
080004D4  1039 0800  721          move.b    _Timer8ISRCount.L,D0
080004D8  2146      
080004DA  C0BC 0000  722          and.l     #65535,D0
080004DE  FFFF      
080004E0  80FC 0014  723          divu.w    #20,D0
080004E4  4840       724          swap      D0
080004E6  4A00       725          tst.b     D0
080004E8  6620       726          bne.s     main_12
                     727   ; temp = ADCWrite(TEMP);
080004EA  42A7       728          clr.l     -(A7)
080004EC  4E95       729          jsr       (A5)
080004EE  584F       730          addq.w    #4,A7
080004F0  1D40 FFF5  731          move.b    D0,-11(A6)
                     732   ; CanBus0_Transmit(temp) ;
080004F4  122E FFF5  733          move.b    -11(A6),D1
080004F8  C2BC 0000  734          and.l     #255,D1
080004FC  00FF      
080004FE  2F01       735          move.l    D1,-(A7)
08000500  4E94       736          jsr       (A4)
08000502  584F       737          addq.w    #4,A7
                     738   ; CanBus1_Receive(TEMP) ;
08000504  42A7       739          clr.l     -(A7)
08000506  4E93       740          jsr       (A3)
08000508  584F       741          addq.w    #4,A7
                     742   main_12:
                     743   ; }
                     744   ; IQR_Check = Timer8ISRCount;
0800050A  1439 0800  745          move.b    _Timer8ISRCount.L,D2
0800050E  2146      
                     746   ; printf("|===========================|\n");
08000510  4879 0800  747          pea       @m68kus~1_3.L
08000514  1EBA      
08000516  4EB9 0800  748          jsr       _printf
0800051A  12F4      
0800051C  584F       749          addq.w    #4,A7
                     750   main_4:
0800051E  6000 FEDA  751          bra       main_1
                     752   ; }
                     753   ; }
                     754   ; }
                     755   ; C:\CPEN412\ASN6\CANBUS-CONTROLLER.C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                     756   ; #include <stdio.h>
                     757   ; #include "Canbus-Controller.h"
                     758   ; #include "DebugMonitor.h"
                     759   ; #define TEMP 0
                     760   ; #define POTENTIAL 1
                     761   ; #define LIGHT 2
                     762   ; #define SWITCHES 3
                     763   ; /*********************************************************************************************
                     764   ; ** These addresses and definitions were taken from Appendix 7 of the Can Controller
                     765   ; ** application note and adapted for the 68k assignment
                     766   ; *********************************************************************************************/
                     767   ; /*
                     768   ; ** definition for the SJA1000 registers and bits based on 68k address map areas
                     769   ; ** assume the addresses for the 2 can controllers given in the assignment
                     770   ; **
                     771   ; ** Registers are defined in terms of the following Macro for each Can controller,
                     772   ; ** where (i) represents an registers number
                     773   ; */
                     774   ; /*  bus timing values for
                     775   ; **  bit-rate : 100 kBit/s
                     776   ; **  oscillator frequency : 25 MHz, 1 sample per bit, 0 tolerance %
                     777   ; **  maximum tolerated propagation delay : 4450 ns
                     778   ; **  minimum requested propagation delay : 500 ns
                     779   ; **
                     780   ; **  https://www.kvaser.com/support/calculators/bit-timing-calculator/
                     781   ; **  T1 	T2 	BTQ 	SP% 	SJW 	BIT RATE 	ERR% 	BTR0 	BTR1
                     782   ; **  17	8	25	    68	     1	      100	    0	      04	7f
                     783   ; */
                     784   ; // initialisation for Can controller 0
                     785   ; void Init_CanBus_Controller0(void)
                     786   ; {
                     787   _Init_CanBus_Controller0:
                     788   ; // TODO - put your Canbus initialisation code for CanController 0 here
                     789   ; // See section 4.2.1 in the application note for details (PELICAN MODE)
                     790   ; /* set reset mode/request (Note: after power-on SJA1000 is in BasicCAN mode)
                     791   ; leave loop after a time out and signal an error */
                     792   ; while((Can0_ModeControlReg & RM_RR_Bit ) == ClrByte)
                     793   Init_CanBus_Controller0_1:
08000522  1039 0050  794          move.b    5242880,D0
08000526  0000      
08000528  C03C 0001  795          and.b     #1,D0
0800052C  6612       796          bne.s     Init_CanBus_Controller0_3
                     797   ; {
                     798   ; /* other bits than the reset mode/request bit are unchanged */
                     799   ; Can0_ModeControlReg = Can0_ModeControlReg | RM_RR_Bit ;
0800052E  1039 0050  800          move.b    5242880,D0
08000532  0000      
08000534  803C 0001  801          or.b      #1,D0
08000538  13C0 0050  802          move.b    D0,5242880
0800053C  0000      
0800053E  60E2       803          bra       Init_CanBus_Controller0_1
                     804   Init_CanBus_Controller0_3:
                     805   ; }
                     806   ; /* set the Clock Divider Register according to the given hardware of Figure 3
                     807   ; select PeliCAN mode
                     808   ; bypass CAN input comparator as external transceiver is used
                     809   ; select the clock for the controller S87C654 */
                     810   ; Can0_ClockDivideReg = CANMode_Bit | CBP_Bit | DivBy2;
08000540  13FC 00C0  811          move.b    #192,5242942
08000544  0050 003E 
                     812   ; /* disable CAN interrupts, if required (always necessary after power-on)
                     813   ; (write to SJA1000 Interrupt Enable / Control Register) */
                     814   ; Can0_InterruptEnReg = ClrIntEnSJA;
08000548  4239 0050  815          clr.b     5242888
0800054C  0008      
                     816   ; /* define acceptance code and mask */
                     817   ; Can0_AcceptCode0Reg = ClrByte;
0800054E  4239 0050  818          clr.b     5242912
08000552  0020      
                     819   ; Can0_AcceptCode1Reg = ClrByte;
08000554  4239 0050  820          clr.b     5242914
08000558  0022      
                     821   ; Can0_AcceptCode2Reg = ClrByte;
0800055A  4239 0050  822          clr.b     5242916
0800055E  0024      
                     823   ; Can0_AcceptCode3Reg = ClrByte;
08000560  4239 0050  824          clr.b     5242918
08000564  0026      
                     825   ; Can0_AcceptMask0Reg = DontCare; /* every identifier is accepted */
08000566  13FC 00FF  826          move.b    #255,5242920
0800056A  0050 0028 
                     827   ; Can0_AcceptMask1Reg = DontCare; /* every identifier is accepted */
0800056E  13FC 00FF  828          move.b    #255,5242922
08000572  0050 002A 
                     829   ; Can0_AcceptMask2Reg = DontCare; /* every identifier is accepted */
08000576  13FC 00FF  830          move.b    #255,5242924
0800057A  0050 002C 
                     831   ; Can0_AcceptMask3Reg = DontCare; /* every identifier is accepted */
0800057E  13FC 00FF  832          move.b    #255,5242926
08000582  0050 002E 
                     833   ; /* configure bus timing */
                     834   ; /* bit-rate = 1 Mbit/s @ 24 MHz, the bus is sampled once */
                     835   ; Can0_BusTiming0Reg = 0x04;
08000586  13FC 0004  836          move.b    #4,5242892
0800058A  0050 000C 
                     837   ; Can0_BusTiming1Reg = 0x7F;
0800058E  13FC 007F  838          move.b    #127,5242894
08000592  0050 000E 
                     839   ; /* configure CAN outputs: float on TX1, Push/Pull on TX0,
                     840   ; normal output mode */
                     841   ; Can0_OutControlReg = Tx1Float | Tx0PshPull | NormalMode;
08000596  13FC 001A  842          move.b    #26,5242896
0800059A  0050 0010 
                     843   ; /* leave the reset mode/request i.e. switch to operating mode,
                     844   ; the interrupts of the S87C654 are enabled
                     845   ; but not the CAN interrupts of the SJA1000, which can be done separately
                     846   ; for the different tasks in a system */
                     847   ; /* clear Reset Mode bit, select dual Acceptance Filter Mode,
                     848   ; switch off Self Test Mode and Listen Only Mode,
                     849   ; clear Sleep Mode (wake up) */
                     850   ; /* wait until RM_RR_Bit is cleared */
                     851   ; /* break loop after a time out and signal an error */
                     852   ; do{
                     853   Init_CanBus_Controller0_4:
                     854   ; Can0_ModeControlReg = ClrByte;
0800059E  4239 0050  855          clr.b     5242880
080005A2  0000      
080005A4  1039 0050  856          move.b    5242880,D0
080005A8  0000      
080005AA  C03C 0001  857          and.b     #1,D0
080005AE  66EE       858          bne       Init_CanBus_Controller0_4
080005B0  4E75       859          rts
                     860   ; } while((Can0_ModeControlReg & RM_RR_Bit ) != ClrByte);
                     861   ; /*----- end of Initialization Example of the SJA1000 ------------------------*/
                     862   ; }
                     863   ; // initialisation for Can controller 1
                     864   ; void Init_CanBus_Controller1(void)
                     865   ; {
                     866   _Init_CanBus_Controller1:
                     867   ; // TODO - put your Canbus initialisation code for CanController 1 here
                     868   ; // See section 4.2.1 in the application note for details (PELICAN MODE)
                     869   ; /* set reset mode/request (Note: after power-on SJA1000 is in BasicCAN mode)
                     870   ; leave loop after a time out and signal an error */
                     871   ; while((Can1_ModeControlReg & RM_RR_Bit ) == ClrByte)
                     872   Init_CanBus_Controller1_1:
080005B2  1039 0050  873          move.b    5243392,D0
080005B6  0200      
080005B8  C03C 0001  874          and.b     #1,D0
080005BC  6612       875          bne.s     Init_CanBus_Controller1_3
                     876   ; {
                     877   ; /* other bits than the reset mode/request bit are unchanged */
                     878   ; Can1_ModeControlReg = Can1_ModeControlReg | RM_RR_Bit ;
080005BE  1039 0050  879          move.b    5243392,D0
080005C2  0200      
080005C4  803C 0001  880          or.b      #1,D0
080005C8  13C0 0050  881          move.b    D0,5243392
080005CC  0200      
080005CE  60E2       882          bra       Init_CanBus_Controller1_1
                     883   Init_CanBus_Controller1_3:
                     884   ; }
                     885   ; /* set the Clock Divider Register according to the given hardware of Figure 3
                     886   ; select PeliCAN mode
                     887   ; bypass CAN input comparator as external transceiver is used
                     888   ; select the clock for the controller S87C654 */
                     889   ; Can1_ClockDivideReg = CANMode_Bit | CBP_Bit | DivBy2;
080005D0  13FC 00C0  890          move.b    #192,5243454
080005D4  0050 023E 
                     891   ; /* disable CAN interrupts, if required (always necessary after power-on)
                     892   ; (write to SJA1000 Interrupt Enable / Control Register) */
                     893   ; Can1_InterruptEnReg = ClrIntEnSJA;
080005D8  4239 0050  894          clr.b     5243400
080005DC  0208      
                     895   ; /* define acceptance code and mask */
                     896   ; Can1_AcceptCode0Reg = ClrByte;
080005DE  4239 0050  897          clr.b     5243424
080005E2  0220      
                     898   ; Can1_AcceptCode1Reg = ClrByte;
080005E4  4239 0050  899          clr.b     5243426
080005E8  0222      
                     900   ; Can1_AcceptCode2Reg = ClrByte;
080005EA  4239 0050  901          clr.b     5243428
080005EE  0224      
                     902   ; Can1_AcceptCode3Reg = ClrByte;
080005F0  4239 0050  903          clr.b     5243430
080005F4  0226      
                     904   ; Can1_AcceptMask0Reg = DontCare; /* every identifier is accepted */
080005F6  13FC 00FF  905          move.b    #255,5243432
080005FA  0050 0228 
                     906   ; Can1_AcceptMask1Reg = DontCare; /* every identifier is accepted */
080005FE  13FC 00FF  907          move.b    #255,5243434
08000602  0050 022A 
                     908   ; Can1_AcceptMask2Reg = DontCare; /* every identifier is accepted */
08000606  13FC 00FF  909          move.b    #255,5243436
0800060A  0050 022C 
                     910   ; Can1_AcceptMask3Reg = DontCare; /* every identifier is accepted */
0800060E  13FC 00FF  911          move.b    #255,5243438
08000612  0050 022E 
                     912   ; /* configure bus timing */
                     913   ; /* bit-rate = 1 Mbit/s @ 24 MHz, the bus is sampled once */
                     914   ; Can1_BusTiming0Reg = 0x04;
08000616  13FC 0004  915          move.b    #4,5243404
0800061A  0050 020C 
                     916   ; Can1_BusTiming1Reg = 0x7F;
0800061E  13FC 007F  917          move.b    #127,5243406
08000622  0050 020E 
                     918   ; /* configure CAN outputs: float on TX1, Push/Pull on TX0,
                     919   ; normal output mode */
                     920   ; Can1_OutControlReg = Tx1Float | Tx0PshPull | NormalMode;
08000626  13FC 001A  921          move.b    #26,5243408
0800062A  0050 0210 
                     922   ; /* leave the reset mode/request i.e. switch to operating mode,
                     923   ; the interrupts of the S87C654 are enabled
                     924   ; but not the CAN interrupts of the SJA1000, which can be done separately
                     925   ; for the different tasks in a system */
                     926   ; /* clear Reset Mode bit, select dual Acceptance Filter Mode,
                     927   ; switch off Self Test Mode and Listen Only Mode,
                     928   ; clear Sleep Mode (wake up) */
                     929   ; /* wait until RM_RR_Bit is cleared */
                     930   ; /* break loop after a time out and signal an error */
                     931   ; do{
                     932   Init_CanBus_Controller1_4:
                     933   ; Can1_ModeControlReg = ClrByte;
0800062E  4239 0050  934          clr.b     5243392
08000632  0200      
08000634  1039 0050  935          move.b    5243392,D0
08000638  0200      
0800063A  C03C 0001  936          and.b     #1,D0
0800063E  66EE       937          bne       Init_CanBus_Controller1_4
08000640  4E75       938          rts
                     939   ; } while((Can1_ModeControlReg & RM_RR_Bit ) != ClrByte);
                     940   ; /*----- end of Initialization Example of the SJA1000 ------------------------*/
                     941   ; }
                     942   ; // Transmit for sending a message via Can controller 0
                     943   ; void CanBus0_Transmit(unsigned char data)
                     944   ; {
                     945   _CanBus0_Transmit:
08000642  4E56 0000  946          link      A6,#0
                     947   ; // TODO - put your Canbus transmit code for CanController 0 here
                     948   ; // See section 4.2.2 in the application note for details (PELICAN MODE)
                     949   ; /* wait until the Transmit Buffer is released */
                     950   ; do{
                     951   CanBus0_Transmit_1:
                     952   ; /* start a polling timer and run some tasks while waiting
                     953   ; break the loop and signal an error if time too long */
                     954   ; } while((Can0_StatusReg & TBS_Bit ) != TBS_Bit );
08000646  1039 0050  955          move.b    5242884,D0
0800064A  0004      
0800064C  C03C 0004  956          and.b     #4,D0
08000650  0C00 0004  957          cmp.b     #4,D0
08000654  66F0       958          bne       CanBus0_Transmit_1
                     959   ; /* Transmit Buffer is released, a message may be written into the buffer */
                     960   ; /* in this example a Standard Frame message shall be transmitted */
                     961   ; Can0_TxFrameInfo = 0x08; /* SFF (data), DLC=8 */
08000656  13FC 0008  962          move.b    #8,5242912
0800065A  0050 0020 
                     963   ; Can0_TxBuffer1 = data; /*Data that will be sent*/
0800065E  13EE 000B  964          move.b    11(A6),5242914
08000662  0050 0022 
                     965   ; /* Start the transmission */
                     966   ; Can0_CommandReg = TR_Bit ; /* Set Transmission Request bit */
08000666  13FC 0001  967          move.b    #1,5242882
0800066A  0050 0002 
0800066E  4E5E       968          unlk      A6
08000670  4E75       969          rts
                     970   ; }
                     971   ; // Transmit for sending a message via Can controller 1
                     972   ; void CanBus1_Transmit(unsigned char data)
                     973   ; {
                     974   _CanBus1_Transmit:
08000672  4E56 0000  975          link      A6,#0
                     976   ; // TODO - put your Canbus transmit code for CanController 1 here
                     977   ; // See section 4.2.2 in the application note for details (PELICAN MODE)
                     978   ; /* wait until the Transmit Buffer is released */
                     979   ; do{
                     980   CanBus1_Transmit_1:
                     981   ; /* start a polling timer and run some tasks while waiting
                     982   ; break the loop and signal an error if time too long */
                     983   ; } while((Can1_StatusReg & TBS_Bit ) != TBS_Bit );
08000676  1039 0050  984          move.b    5243396,D0
0800067A  0204      
0800067C  C03C 0004  985          and.b     #4,D0
08000680  0C00 0004  986          cmp.b     #4,D0
08000684  66F0       987          bne       CanBus1_Transmit_1
                     988   ; /* Transmit Buffer is released, a message may be written into the buffer */
                     989   ; /* in this example a Standard Frame message shall be transmitted */
                     990   ; Can1_TxFrameInfo = 0x08; /* SFF (data), DLC=8 */
08000686  13FC 0008  991          move.b    #8,5243424
0800068A  0050 0220 
                     992   ; Can1_TxBuffer1 = data; /*Data that will be sent*/
0800068E  13EE 000B  993          move.b    11(A6),5243426
08000692  0050 0222 
                     994   ; /* Start the transmission */
                     995   ; Can1_CommandReg = TR_Bit ; /* Set Transmission Request bit */
08000696  13FC 0001  996          move.b    #1,5243394
0800069A  0050 0202 
0800069E  4E5E       997          unlk      A6
080006A0  4E75       998          rts
                     999   ; }
                    1000   ; // Receive for reading a received message via Can controller 0
                    1001   ; void CanBus0_Receive(int type)
                    1002   ; {
                    1003   _CanBus0_Receive:
080006A2  4E56 FFFC 1004          link      A6,#-4
080006A6  48E7 3820 1005          movem.l   D2/D3/D4/A2,-(A7)
080006AA  45F9 0800 1006          lea       _printf.L,A2
080006AE  12F4      
080006B0  282E 0008 1007          move.l    8(A6),D4
                    1008   ; unsigned char data;
                    1009   ; unsigned char c = 0xFF;
080006B4  1D7C 00FF 1010          move.b    #255,-1(A6)
080006B8  FFFF      
                    1011   ; unsigned int i = 0;
080006BA  4283      1012          clr.l     D3
                    1013   ; // TODO - put your Canbus receive code for CanController 0 here
                    1014   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                    1015   ; //Bottom of page 35
                    1016   ; /* enable the receive interrupt */
                    1017   ; //Can0_InterruptEnReg = RIE_Bit; ////
                    1018   ; /* wait until the Receiver Buffer is released */
                    1019   ; do{
                    1020   CanBus0_Receive_1:
                    1021   ; /* start a polling timer and run some tasks while waiting
                    1022   ; break the loop and signal an error if time too long */
                    1023   ; } while((Can0_StatusReg & RBS_Bit) != RBS_Bit );
080006BC  1039 0050 1024          move.b    5242884,D0
080006C0  0004      
080006C2  C03C 0001 1025          and.b     #1,D0
080006C6  0C00 0001 1026          cmp.b     #1,D0
080006CA  66F0      1027          bne       CanBus0_Receive_1
                    1028   ; /* read the Interrupt Register content from SJA1000 and save temporarily
                    1029   ; all interrupt flags are cleared (in PeliCAN mode the Receive
                    1030   ; Interrupt (RI) is cleared first, when giving the Release Buffer command)
                    1031   ; */
                    1032   ; /* get the content of the Receive Buffer from SJA1000 and store the
                    1033   ; message into internal memory of the controller,
                    1034   ; it is possible at once to decode the FrameInfo and Data Length Code
                    1035   ; and adapt the fetch appropriately */
                    1036   ; data = Can0_RxBuffer1;
080006CC  1439 0050 1037          move.b    5242914,D2
080006D0  0022      
                    1038   ; if(type == TEMP){
080006D2  4A84      1039          tst.l     D4
080006D4  6616      1040          bne.s     CanBus0_Receive_3
                    1041   ; printf("Value of Thermistor (CAN0): %d\n", data);
080006D6  C4BC 0000 1042          and.l     #255,D2
080006DA  00FF      
080006DC  2F02      1043          move.l    D2,-(A7)
080006DE  4879 0800 1044          pea       @canbus~1_1.L
080006E2  1EDA      
080006E4  4E92      1045          jsr       (A2)
080006E6  504F      1046          addq.w    #8,A7
080006E8  6000 009C 1047          bra       CanBus0_Receive_10
                    1048   CanBus0_Receive_3:
                    1049   ; }else if(type == POTENTIAL){
080006EC  0C84 0000 1050          cmp.l     #1,D4
080006F0  0001      
080006F2  6616      1051          bne.s     CanBus0_Receive_5
                    1052   ; printf("Value of Potentiometer (CAN0): %d\n", data);
080006F4  C4BC 0000 1053          and.l     #255,D2
080006F8  00FF      
080006FA  2F02      1054          move.l    D2,-(A7)
080006FC  4879 0800 1055          pea       @canbus~1_2.L
08000700  1EFA      
08000702  4E92      1056          jsr       (A2)
08000704  504F      1057          addq.w    #8,A7
08000706  6000 007E 1058          bra       CanBus0_Receive_10
                    1059   CanBus0_Receive_5:
                    1060   ; }else if(type == LIGHT){
0800070A  0C84 0000 1061          cmp.l     #2,D4
0800070E  0002      
08000710  6616      1062          bne.s     CanBus0_Receive_7
                    1063   ; printf("Value of Photo-resister (CAN0): %d\n", data);
08000712  C4BC 0000 1064          and.l     #255,D2
08000716  00FF      
08000718  2F02      1065          move.l    D2,-(A7)
0800071A  4879 0800 1066          pea       @canbus~1_3.L
0800071E  1F1E      
08000720  4E92      1067          jsr       (A2)
08000722  504F      1068          addq.w    #8,A7
08000724  6000 0060 1069          bra       CanBus0_Receive_10
                    1070   CanBus0_Receive_7:
                    1071   ; }else if(type == SWITCHES){
08000728  0C84 0000 1072          cmp.l     #3,D4
0800072C  0003      
0800072E  6600 004C 1073          bne       CanBus0_Receive_9
                    1074   ; printf("Value of SW[7-0] (CAN0): ");
08000732  4879 0800 1075          pea       @canbus~1_4.L
08000736  1F42      
08000738  4E92      1076          jsr       (A2)
0800073A  584F      1077          addq.w    #4,A7
                    1078   ; for (i = (int)(0x00000080); i > 0; i = i >> 1) {
0800073C  263C 0000 1079          move.l    #128,D3
08000740  0080      
                    1080   CanBus0_Receive_11:
08000742  0C83 0000 1081          cmp.l     #0,D3
08000746  0000      
08000748  6326      1082          bls.s     CanBus0_Receive_13
                    1083   ; if ((data & i) == 0)
0800074A  1002      1084          move.b    D2,D0
0800074C  C0BC 0000 1085          and.l     #255,D0
08000750  00FF      
08000752  C083      1086          and.l     D3,D0
08000754  660C      1087          bne.s     CanBus0_Receive_14
                    1088   ; printf("0");
08000756  4879 0800 1089          pea       @canbus~1_5.L
0800075A  1F5C      
0800075C  4E92      1090          jsr       (A2)
0800075E  584F      1091          addq.w    #4,A7
08000760  600A      1092          bra.s     CanBus0_Receive_15
                    1093   CanBus0_Receive_14:
                    1094   ; else
                    1095   ; printf("1");
08000762  4879 0800 1096          pea       @canbus~1_6.L
08000766  1F5E      
08000768  4E92      1097          jsr       (A2)
0800076A  584F      1098          addq.w    #4,A7
                    1099   CanBus0_Receive_15:
0800076C  E28B      1100          lsr.l     #1,D3
0800076E  60D2      1101          bra       CanBus0_Receive_11
                    1102   CanBus0_Receive_13:
                    1103   ; }
                    1104   ; printf("\n");
08000770  4879 0800 1105          pea       @canbus~1_7.L
08000774  1F60      
08000776  4E92      1106          jsr       (A2)
08000778  584F      1107          addq.w    #4,A7
0800077A  600A      1108          bra.s     CanBus0_Receive_10
                    1109   CanBus0_Receive_9:
                    1110   ; }else{
                    1111   ; printf("ERROR");
0800077C  4879 0800 1112          pea       @canbus~1_8.L
08000780  1F62      
08000782  4E92      1113          jsr       (A2)
08000784  584F      1114          addq.w    #4,A7
                    1115   CanBus0_Receive_10:
                    1116   ; }
                    1117   ; /* release the Receive Buffer, now the Receive Interrupt flag is cleared,
                    1118   ; further messages will generate a new interrupt */
                    1119   ; Can0_CommandReg = RRB_Bit; /* Release Receive Buffer */
08000786  13FC 0004 1120          move.b    #4,5242882
0800078A  0050 0002 
0800078E  4CDF 041C 1121          movem.l   (A7)+,D2/D3/D4/A2
08000792  4E5E      1122          unlk      A6
08000794  4E75      1123          rts
                    1124   ; }
                    1125   ; // Receive for reading a received message via Can controller 1
                    1126   ; void CanBus1_Receive(int type)
                    1127   ; {
                    1128   _CanBus1_Receive:
08000796  4E56 FFFC 1129          link      A6,#-4
0800079A  48E7 3820 1130          movem.l   D2/D3/D4/A2,-(A7)
0800079E  45F9 0800 1131          lea       _printf.L,A2
080007A2  12F4      
080007A4  282E 0008 1132          move.l    8(A6),D4
                    1133   ; unsigned char data;
                    1134   ; unsigned char c = 0xFF;
080007A8  1D7C 00FF 1135          move.b    #255,-1(A6)
080007AC  FFFF      
                    1136   ; unsigned int i = 0;        
080007AE  4283      1137          clr.l     D3
                    1138   ; // TODO - put your Canbus receive code for CanController 1 here
                    1139   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                    1140   ; //Bottom of page 35
                    1141   ; // TODO - put your Canbus receive code for CanController 0 here
                    1142   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                    1143   ; /* enable the receive interrupt */
                    1144   ; //Can1_InterruptEnReg = RIE_Bit;
                    1145   ; /* wait until the Receiver Buffer is released */
                    1146   ; do{
                    1147   CanBus1_Receive_1:
                    1148   ; /* start a polling timer and run some tasks while waiting
                    1149   ; break the loop and signal an error if time too long */
                    1150   ; } while((Can1_StatusReg & RBS_Bit) != RBS_Bit );
080007B0  1039 0050 1151          move.b    5243396,D0
080007B4  0204      
080007B6  C03C 0001 1152          and.b     #1,D0
080007BA  0C00 0001 1153          cmp.b     #1,D0
080007BE  66F0      1154          bne       CanBus1_Receive_1
                    1155   ; /* read the Interrupt Register content from SJA1000 and save temporarily
                    1156   ; all interrupt flags are cleared (in PeliCAN mode the Receive
                    1157   ; Interrupt (RI) is cleared first, when giving the Release Buffer command)
                    1158   ; */
                    1159   ; /* get the content of the Receive Buffer from SJA1000 and store the
                    1160   ; message into internal memory of the controller,
                    1161   ; it is possible at once to decode the FrameInfo and Data Length Code
                    1162   ; and adapt the fetch appropriately */
                    1163   ; data = Can1_RxBuffer1;
080007C0  1439 0050 1164          move.b    5243426,D2
080007C4  0222      
                    1165   ; if(type == TEMP){
080007C6  4A84      1166          tst.l     D4
080007C8  6616      1167          bne.s     CanBus1_Receive_3
                    1168   ; printf("Value of Thermistor (CAN1): %d\n", data);
080007CA  C4BC 0000 1169          and.l     #255,D2
080007CE  00FF      
080007D0  2F02      1170          move.l    D2,-(A7)
080007D2  4879 0800 1171          pea       @canbus~1_9.L
080007D6  1F68      
080007D8  4E92      1172          jsr       (A2)
080007DA  504F      1173          addq.w    #8,A7
080007DC  6000 009C 1174          bra       CanBus1_Receive_10
                    1175   CanBus1_Receive_3:
                    1176   ; }else if(type == POTENTIAL){
080007E0  0C84 0000 1177          cmp.l     #1,D4
080007E4  0001      
080007E6  6616      1178          bne.s     CanBus1_Receive_5
                    1179   ; printf("Value of Potentiometer (CAN1): %d\n", data);
080007E8  C4BC 0000 1180          and.l     #255,D2
080007EC  00FF      
080007EE  2F02      1181          move.l    D2,-(A7)
080007F0  4879 0800 1182          pea       @canbus~1_10.L
080007F4  1F88      
080007F6  4E92      1183          jsr       (A2)
080007F8  504F      1184          addq.w    #8,A7
080007FA  6000 007E 1185          bra       CanBus1_Receive_10
                    1186   CanBus1_Receive_5:
                    1187   ; }else if(type == LIGHT){
080007FE  0C84 0000 1188          cmp.l     #2,D4
08000802  0002      
08000804  6616      1189          bne.s     CanBus1_Receive_7
                    1190   ; printf("Value of Photo-resister (CAN1): %d\n", data);
08000806  C4BC 0000 1191          and.l     #255,D2
0800080A  00FF      
0800080C  2F02      1192          move.l    D2,-(A7)
0800080E  4879 0800 1193          pea       @canbus~1_11.L
08000812  1FAC      
08000814  4E92      1194          jsr       (A2)
08000816  504F      1195          addq.w    #8,A7
08000818  6000 0060 1196          bra       CanBus1_Receive_10
                    1197   CanBus1_Receive_7:
                    1198   ; }else if(type == SWITCHES){
0800081C  0C84 0000 1199          cmp.l     #3,D4
08000820  0003      
08000822  6600 004C 1200          bne       CanBus1_Receive_9
                    1201   ; printf("Value of SW[7-0] (CAN1): ");
08000826  4879 0800 1202          pea       @canbus~1_12.L
0800082A  1FD0      
0800082C  4E92      1203          jsr       (A2)
0800082E  584F      1204          addq.w    #4,A7
                    1205   ; for (i = (int)(0x00000080); i > 0; i = i >> 1) {
08000830  263C 0000 1206          move.l    #128,D3
08000834  0080      
                    1207   CanBus1_Receive_11:
08000836  0C83 0000 1208          cmp.l     #0,D3
0800083A  0000      
0800083C  6326      1209          bls.s     CanBus1_Receive_13
                    1210   ; if ((data & i) == 0)
0800083E  1002      1211          move.b    D2,D0
08000840  C0BC 0000 1212          and.l     #255,D0
08000844  00FF      
08000846  C083      1213          and.l     D3,D0
08000848  660C      1214          bne.s     CanBus1_Receive_14
                    1215   ; printf("0");
0800084A  4879 0800 1216          pea       @canbus~1_5.L
0800084E  1F5C      
08000850  4E92      1217          jsr       (A2)
08000852  584F      1218          addq.w    #4,A7
08000854  600A      1219          bra.s     CanBus1_Receive_15
                    1220   CanBus1_Receive_14:
                    1221   ; else
                    1222   ; printf("1");
08000856  4879 0800 1223          pea       @canbus~1_6.L
0800085A  1F5E      
0800085C  4E92      1224          jsr       (A2)
0800085E  584F      1225          addq.w    #4,A7
                    1226   CanBus1_Receive_15:
08000860  E28B      1227          lsr.l     #1,D3
08000862  60D2      1228          bra       CanBus1_Receive_11
                    1229   CanBus1_Receive_13:
                    1230   ; }
                    1231   ; printf("\n");
08000864  4879 0800 1232          pea       @canbus~1_7.L
08000868  1F60      
0800086A  4E92      1233          jsr       (A2)
0800086C  584F      1234          addq.w    #4,A7
0800086E  600A      1235          bra.s     CanBus1_Receive_10
                    1236   CanBus1_Receive_9:
                    1237   ; }else{
                    1238   ; printf("ERROR");
08000870  4879 0800 1239          pea       @canbus~1_8.L
08000874  1F62      
08000876  4E92      1240          jsr       (A2)
08000878  584F      1241          addq.w    #4,A7
                    1242   CanBus1_Receive_10:
                    1243   ; }
                    1244   ; /* release the Receive Buffer, now the Receive Interrupt flag is cleared,
                    1245   ; further messages will generate a new interrupt */
                    1246   ; Can1_CommandReg = RRB_Bit; /* Release Receive Buffer */
0800087A  13FC 0004 1247          move.b    #4,5243394
0800087E  0050 0202 
08000882  4CDF 041C 1248          movem.l   (A7)+,D2/D3/D4/A2
08000886  4E5E      1249          unlk      A6
08000888  4E75      1250          rts
                    1251   ; }
                    1252   ; void CanBusTest(void)
                    1253   ; {
                    1254   _CanBusTest:
0800088A  48E7 2020 1255          movem.l   D2/A2,-(A7)
0800088E  45F9 0800 1256          lea       _printf.L,A2
08000892  12F4      
                    1257   ; unsigned char data = 0xFF;
08000894  143C 00FF 1258          move.b    #255,D2
                    1259   ; // initialise the two Can controllers
                    1260   ; Init_CanBus_Controller0();
08000898  4EB9 0800 1261          jsr       _Init_CanBus_Controller0
0800089C  0522      
                    1262   ; Init_CanBus_Controller1();
0800089E  4EB9 0800 1263          jsr       _Init_CanBus_Controller1
080008A2  05B2      
                    1264   ; printf("\r\n\r\n---- CANBUS Test ----\r\n") ;
080008A4  4879 0800 1265          pea       @canbus~1_13.L
080008A8  1FEA      
080008AA  4E92      1266          jsr       (A2)
080008AC  584F      1267          addq.w    #4,A7
                    1268   ; // simple application to alternately transmit and receive messages from each of two nodes
                    1269   ; while(1)    {
                    1270   CanBusTest_1:
                    1271   ; WaitHalfSecond();                    // write a routine to delay say 1/2 second so we don't flood the network with messages to0 quickly
080008AE  4EB9 0800 1272          jsr       _WaitHalfSecond
080008B2  0904      
                    1273   ; CanBus0_Transmit(data) ;       // transmit a message via Controller 0
080008B4  C4BC 0000 1274          and.l     #255,D2
080008B8  00FF      
080008BA  2F02      1275          move.l    D2,-(A7)
080008BC  4EB9 0800 1276          jsr       _CanBus0_Transmit
080008C0  0642      
080008C2  584F      1277          addq.w    #4,A7
                    1278   ; CanBus1_Receive(TEMP) ;        // receive a message via Controller 1 (and display it)
080008C4  42A7      1279          clr.l     -(A7)
080008C6  4EB9 0800 1280          jsr       _CanBus1_Receive
080008CA  0796      
080008CC  584F      1281          addq.w    #4,A7
                    1282   ; printf("\r\n") ;
080008CE  4879 0800 1283          pea       @canbus~1_14.L
080008D2  2006      
080008D4  4E92      1284          jsr       (A2)
080008D6  584F      1285          addq.w    #4,A7
                    1286   ; WaitHalfSecond();                    // write a routine to delay say 1/2 second so we don't flood the network with messages to0 quickly
080008D8  4EB9 0800 1287          jsr       _WaitHalfSecond
080008DC  0904      
                    1288   ; CanBus1_Transmit(data) ;        // transmit a message via Controller 1
080008DE  C4BC 0000 1289          and.l     #255,D2
080008E2  00FF      
080008E4  2F02      1290          move.l    D2,-(A7)
080008E6  4EB9 0800 1291          jsr       _CanBus1_Transmit
080008EA  0672      
080008EC  584F      1292          addq.w    #4,A7
                    1293   ; CanBus0_Receive(TEMP) ;         // receive a message via Controller 0 (and display it)
080008EE  42A7      1294          clr.l     -(A7)
080008F0  4EB9 0800 1295          jsr       _CanBus0_Receive
080008F4  06A2      
080008F6  584F      1296          addq.w    #4,A7
                    1297   ; printf("\r\n") ;
080008F8  4879 0800 1298          pea       @canbus~1_14.L
080008FC  2006      
080008FE  4E92      1299          jsr       (A2)
08000900  584F      1300          addq.w    #4,A7
08000902  60AA      1301          bra       CanBusTest_1
                    1302   ; }
                    1303   ; }
                    1304   ; /************************************************************************************
                    1305   ; *Subroutine to give the 68000 something useless to do to waste 1 x 500 mSec = 500mSec = 0.5sec therefore 500000
                    1306   ; ************************************************************************************/
                    1307   ; void WaitHalfSecond(void)
                    1308   ; {
                    1309   _WaitHalfSecond:
08000904  2F02      1310          move.l    D2,-(A7)
                    1311   ; long int  i;
                    1312   ; for (i = 0; i < 500000; i++)
08000906  4282      1313          clr.l     D2
                    1314   WaitHalfSecond_1:
08000908  0C82 0007 1315          cmp.l     #500000,D2
0800090C  A120      
0800090E  6C04      1316          bge.s     WaitHalfSecond_3
08000910  5282      1317          addq.l    #1,D2
08000912  60F4      1318          bra       WaitHalfSecond_1
                    1319   WaitHalfSecond_3:
08000914  241F      1320          move.l    (A7)+,D2
08000916  4E75      1321          rts
                    1322   ; ;
                    1323   ; }
                    1324   ; /************************************************************************************
                    1325   ; ** Subfunctions for I2C
                    1326   ; ************************************************************************************/
                    1327   ; void Enable_SCL_Clock(void){
                    1328   _Enable_SCL_Clock:
                    1329   ; I2C_Clock_PrerLo = 0x31;
08000918  13FC 0031 1330          move.b    #49,4227072
0800091C  0040 8000 
                    1331   ; I2C_Clock_PrerHi = 0x00;
08000920  4239 0040 1332          clr.b     4227074
08000924  8002      
                    1333   ; return;
08000926  4E75      1334          rts
                    1335   ; }
                    1336   ; void WaitForI2C_TIP(void){
                    1337   _WaitForI2C_TIP:
08000928  4E56 FFFC 1338          link      A6,#-4
                    1339   ; int TIP_bit;
                    1340   ; do{
                    1341   WaitForI2C_TIP_1:
                    1342   ; TIP_bit = (I2C_Status >> 1) & 0x01; 
0800092C  1039 0040 1343          move.b    4227080,D0
08000930  8008      
08000932  C0BC 0000 1344          and.l     #255,D0
08000936  00FF      
08000938  E288      1345          lsr.l     #1,D0
0800093A  C0BC 0000 1346          and.l     #1,D0
0800093E  0001      
08000940  2D40 FFFC 1347          move.l    D0,-4(A6)
08000944  202E FFFC 1348          move.l    -4(A6),D0
08000948  66E2      1349          bne       WaitForI2C_TIP_1
                    1350   ; }while(TIP_bit != 0);
                    1351   ; return;
0800094A  4E5E      1352          unlk      A6
0800094C  4E75      1353          rts
                    1354   ; }
                    1355   ; void WaitForI2C_RxACK(void){
                    1356   _WaitForI2C_RxACK:
0800094E  4E56 FFFC 1357          link      A6,#-4
                    1358   ; int RxACK_bit;
                    1359   ; do{
                    1360   WaitForI2C_RxACK_1:
                    1361   ; RxACK_bit = (I2C_Status >> 7) & 0x01;
08000952  1039 0040 1362          move.b    4227080,D0
08000956  8008      
08000958  C0BC 0000 1363          and.l     #255,D0
0800095C  00FF      
0800095E  EE88      1364          lsr.l     #7,D0
08000960  C0BC 0000 1365          and.l     #1,D0
08000964  0001      
08000966  2D40 FFFC 1366          move.l    D0,-4(A6)
0800096A  202E FFFC 1367          move.l    -4(A6),D0
0800096E  66E2      1368          bne       WaitForI2C_RxACK_1
                    1369   ; }while(RxACK_bit != 0);
                    1370   ; return;
08000970  4E5E      1371          unlk      A6
08000972  4E75      1372          rts
                    1373   ; }
                    1374   ; /************************************************************************************
                    1375   ; ** initialises the I2C controller 
                    1376   ; ************************************************************************************/
                    1377   ; void I2C_Init(void){
                    1378   _I2C_Init:
                    1379   ; //Enabling 100Khz SCL Clock Line
                    1380   ; Enable_SCL_Clock();
08000974  4EB9 0800 1381          jsr       _Enable_SCL_Clock
08000978  0918      
                    1382   ; //Enabling I2C for no interupts and enabling core
                    1383   ; Enable_I2C_CS();
0800097A  13FC 0080 1384          move.b    #128,4227076
0800097E  0040 8004 
                    1385   ; return;
08000982  4E75      1386          rts
                    1387   ; }
                    1388   ; /************************************************************************************
                    1389   ; ** ADC Write Function to measure Thermistor, Potentimeter, Photo-resistor
                    1390   ; ************************************************************************************/
                    1391   ; unsigned char ADCWrite(int type){
                    1392   _ADCWrite:
08000984  4E56 FFE8 1393          link      A6,#-24
08000988  48E7 3030 1394          movem.l   D2/D3/A2/A3,-(A7)
0800098C  45F9 0800 1395          lea       _WaitForI2C_TIP.L,A2
08000990  0928      
08000992  262E 0008 1396          move.l    8(A6),D3
08000996  47F9 0800 1397          lea       _WaitForI2C_RxACK.L,A3
0800099A  094E      
                    1398   ; int i;
                    1399   ; unsigned char c;
                    1400   ; unsigned char* data[3];
                    1401   ; unsigned char temp, light, potential;
                    1402   ; unsigned int delay = 0xFFFFF;
0800099C  2D7C 000F 1403          move.l    #1048575,-4(A6)
080009A0  FFFF FFFC 
                    1404   ; //Wait for TIP bit in Status Register 
                    1405   ; WaitForI2C_TIP();
080009A4  4E92      1406          jsr       (A2)
                    1407   ; //Send data to Transmit register
                    1408   ; I2C_Transmit = ADC_DAC_WRITE_ADDRESS;
080009A6  13FC 0092 1409          move.b    #146,4227078
080009AA  0040 8006 
                    1410   ; //Set Command register
                    1411   ; I2C_Command = I2C_Slave_Write_Start_Command;
080009AE  13FC 0091 1412          move.b    #145,4227080
080009B2  0040 8008 
                    1413   ; //Wait for TIP bit in Status Register 
                    1414   ; WaitForI2C_TIP();
080009B6  4E92      1415          jsr       (A2)
                    1416   ; //Wait RxACK bit in Status Register 
                    1417   ; WaitForI2C_RxACK();
080009B8  4E93      1418          jsr       (A3)
                    1419   ; //Send data to Transmit register
                    1420   ; I2C_Transmit = ADC_ENABLE_COMMAND;
080009BA  13FC 0044 1421          move.b    #68,4227078
080009BE  0040 8006 
                    1422   ; //Set Command register
                    1423   ; I2C_Command = I2C_Slave_Write_Command;
080009C2  13FC 0011 1424          move.b    #17,4227080
080009C6  0040 8008 
                    1425   ; //Wait for TIP bit in Status Register 
                    1426   ; WaitForI2C_TIP();
080009CA  4E92      1427          jsr       (A2)
                    1428   ; //Wait RxACK bit in Status Register 
                    1429   ; WaitForI2C_RxACK();
080009CC  4E93      1430          jsr       (A3)
                    1431   ; //Send data to Transmit register
                    1432   ; I2C_Transmit = ADC_READ_ADDRESS;
080009CE  13FC 0093 1433          move.b    #147,4227078
080009D2  0040 8006 
                    1434   ; //Set Command register
                    1435   ; I2C_Command = I2C_Slave_Write_Start_Command;
080009D6  13FC 0091 1436          move.b    #145,4227080
080009DA  0040 8008 
                    1437   ; //Wait for TIP bit in Status Register 
                    1438   ; WaitForI2C_TIP();
080009DE  4E92      1439          jsr       (A2)
                    1440   ; //Wait RxACK bit in Status Register 
                    1441   ; WaitForI2C_RxACK();
080009E0  4E93      1442          jsr       (A3)
                    1443   ; //Set Command register to skip
                    1444   ; I2C_Command = I2C_Slave_Read_Command;
080009E2  13FC 0021 1445          move.b    #33,4227080
080009E6  0040 8008 
                    1446   ; //Wait for TIP bit in Status Register 
                    1447   ; WaitForI2C_TIP();
080009EA  4E92      1448          jsr       (A2)
                    1449   ; //Set Command register to skip
                    1450   ; I2C_Command = I2C_Slave_Read_Command;
080009EC  13FC 0021 1451          move.b    #33,4227080
080009F0  0040 8008 
                    1452   ; //Wait for TIP bit in Status Register 
                    1453   ; WaitForI2C_TIP();
080009F4  4E92      1454          jsr       (A2)
                    1455   ; //Grabbing read data from Receive Register for Thermistor
                    1456   ; c = I2C_Receive;
080009F6  1439 0040 1457          move.b    4227078,D2
080009FA  8006      
                    1458   ; temp = c;
080009FC  1D42 FFF9 1459          move.b    D2,-7(A6)
                    1460   ; //Set Command register to skip
                    1461   ; I2C_Command = I2C_Slave_Read_Command;
08000A00  13FC 0021 1462          move.b    #33,4227080
08000A04  0040 8008 
                    1463   ; //Wait for TIP bit in Status Register 
                    1464   ; WaitForI2C_TIP();
08000A08  4E92      1465          jsr       (A2)
                    1466   ; //Grabbing read data from Receive Register for Potentiometer
                    1467   ; c = I2C_Receive;
08000A0A  1439 0040 1468          move.b    4227078,D2
08000A0E  8006      
                    1469   ; potential = c;
08000A10  1D42 FFFB 1470          move.b    D2,-5(A6)
                    1471   ; //Set Command register to skip
                    1472   ; I2C_Command = I2C_Slave_Read_Command;
08000A14  13FC 0021 1473          move.b    #33,4227080
08000A18  0040 8008 
                    1474   ; //Wait for TIP bit in Status Register 
                    1475   ; WaitForI2C_TIP();
08000A1C  4E92      1476          jsr       (A2)
                    1477   ; //Grabbing read data from Receive Register for Photo-resister
                    1478   ; c = I2C_Receive;
08000A1E  1439 0040 1479          move.b    4227078,D2
08000A22  8006      
                    1480   ; light = c;
08000A24  1D42 FFFA 1481          move.b    D2,-6(A6)
                    1482   ; c = 0xFF; //Give garabage value after in case
08000A28  143C 00FF 1483          move.b    #255,D2
                    1484   ; if(type == TEMP){
08000A2C  4A83      1485          tst.l     D3
08000A2E  6606      1486          bne.s     ADCWrite_1
                    1487   ; return temp;
08000A30  102E FFF9 1488          move.b    -7(A6),D0
08000A34  601E      1489          bra.s     ADCWrite_3
                    1490   ADCWrite_1:
                    1491   ; }else if(type == POTENTIAL){
08000A36  0C83 0000 1492          cmp.l     #1,D3
08000A3A  0001      
08000A3C  6606      1493          bne.s     ADCWrite_4
                    1494   ; return potential;
08000A3E  102E FFFB 1495          move.b    -5(A6),D0
08000A42  6010      1496          bra.s     ADCWrite_3
                    1497   ADCWrite_4:
                    1498   ; }else if(type == LIGHT){
08000A44  0C83 0000 1499          cmp.l     #2,D3
08000A48  0002      
08000A4A  6606      1500          bne.s     ADCWrite_6
                    1501   ; return light;
08000A4C  102E FFFA 1502          move.b    -6(A6),D0
08000A50  6002      1503          bra.s     ADCWrite_3
                    1504   ADCWrite_6:
                    1505   ; }else{
                    1506   ; return c;
08000A52  1002      1507          move.b    D2,D0
                    1508   ADCWrite_3:
08000A54  4CDF 0C0C 1509          movem.l   (A7)+,D2/D3/A2/A3
08000A58  4E5E      1510          unlk      A6
08000A5A  4E75      1511          rts
                    1512   ; }
                    1513   ; }
                    1514   @vsscanf_scanread:
08000A5C  4E56 FFFC 1515          link      A6,#-4
08000A60  48E7 0020 1516          movem.l   A2,-(A7)
08000A64  45F9 0800 1517          lea       @vsscanf_bufx,A2
08000A68  2016      
08000A6A  4AAE 0008 1518          tst.l     8(A6)
08000A6E  6722      1519          beq.s     @vsscanf_scanread_1
08000A70  206E 0008 1520          move.l    8(A6),A0
08000A74  58AE 0008 1521          addq.l    #4,8(A6)
08000A78  2050      1522          move.l    (A0),A0
08000A7A  1010      1523          move.b    (A0),D0
08000A7C  4880      1524          ext.w     D0
08000A7E  48C0      1525          ext.l     D0
08000A80  2D40 FFFC 1526          move.l    D0,-4(A6)
08000A84  6706      1527          beq.s     @vsscanf_scanread_3
08000A86  202E FFFC 1528          move.l    -4(A6),D0
08000A8A  6002      1529          bra.s     @vsscanf_scanread_4
                    1530   @vsscanf_scanread_3:
08000A8C  70FF      1531          moveq     #-1,D0
                    1532   @vsscanf_scanread_4:
08000A8E  6000 0032 1533          bra       @vsscanf_scanread_5
                    1534   @vsscanf_scanread_1:
08000A92  2052      1535          move.l    (A2),A0
08000A94  1010      1536          move.b    (A0),D0
08000A96  6620      1537          bne.s     @vsscanf_scanread_6
08000A98  4879 0800 1538          pea       @vsscanf_buf
08000A9C  2148      
08000A9E  6100 0926 1539          bsr       _gets
08000AA2  584F      1540          addq.w    #4,A7
08000AA4  2480      1541          move.l    D0,(A2)
08000AA6  4879 0800 1542          pea       @vsscanf_1
08000AAA  201A      
08000AAC  4879 0800 1543          pea       @vsscanf_buf
08000AB0  2148      
08000AB2  6100 09B2 1544          bsr       _strcat
08000AB6  504F      1545          addq.w    #8,A7
                    1546   @vsscanf_scanread_6:
08000AB8  2052      1547          move.l    (A2),A0
08000ABA  5292      1548          addq.l    #1,(A2)
08000ABC  1010      1549          move.b    (A0),D0
08000ABE  4880      1550          ext.w     D0
08000AC0  48C0      1551          ext.l     D0
                    1552   @vsscanf_scanread_5:
08000AC2  4CDF 0400 1553          movem.l   (A7)+,A2
08000AC6  4E5E      1554          unlk      A6
08000AC8  4E75      1555          rts
                    1556   @vsscanf_scanputback:
08000ACA  4E56 0000 1557          link      A6,#0
08000ACE  48E7 3000 1558          movem.l   D2/D3,-(A7)
08000AD2  242E 000C 1559          move.l    12(A6),D2
08000AD6  262E 0008 1560          move.l    8(A6),D3
08000ADA  6718      1561          beq.s     @vsscanf_scanputback_1
08000ADC  0C82 FFFF 1562          cmp.l     #-1,D2
08000AE0  FFFF      
08000AE2  670A      1563          beq.s     @vsscanf_scanputback_3
08000AE4  5983      1564          subq.l    #4,D3
08000AE6  2043      1565          move.l    D3,A0
08000AE8  2050      1566          move.l    (A0),A0
08000AEA  1082      1567          move.b    D2,(A0)
08000AEC  6004      1568          bra.s     @vsscanf_scanputback_4
                    1569   @vsscanf_scanputback_3:
08000AEE  2043      1570          move.l    D3,A0
08000AF0  5390      1571          subq.l    #1,(A0)
                    1572   @vsscanf_scanputback_4:
08000AF2  602E      1573          bra.s     @vsscanf_scanputback_6
                    1574   @vsscanf_scanputback_1:
08000AF4  41F9 0800 1575          lea       @vsscanf_buf,A0
08000AF8  2148      
08000AFA  2008      1576          move.l    A0,D0
08000AFC  B0B9 0800 1577          cmp.l     @vsscanf_bufx,D0
08000B00  2016      
08000B02  6610      1578          bne.s     @vsscanf_scanputback_5
08000B04  4239 0800 1579          clr.b     @vsscanf_buf
08000B08  2148      
08000B0A  2F02      1580          move.l    D2,-(A7)
08000B0C  6100 099A 1581          bsr       _ungetch
08000B10  584F      1582          addq.w    #4,A7
08000B12  600E      1583          bra.s     @vsscanf_scanputback_6
                    1584   @vsscanf_scanputback_5:
08000B14  53B9 0800 1585          subq.l    #1,@vsscanf_bufx
08000B18  2016      
08000B1A  2079 0800 1586          move.l    @vsscanf_bufx,A0
08000B1E  2016      
08000B20  1082      1587          move.b    D2,(A0)
                    1588   @vsscanf_scanputback_6:
08000B22  2002      1589          move.l    D2,D0
08000B24  4CDF 000C 1590          movem.l   (A7)+,D2/D3
08000B28  4E5E      1591          unlk      A6
08000B2A  4E75      1592          rts
                    1593   @vsscanf_scanspace:
08000B2C  4E56 0000 1594          link      A6,#0
08000B30  48E7 2000 1595          movem.l   D2,-(A7)
                    1596   @vsscanf_scanspace_1:
08000B34  2F2E 0008 1597          move.l    8(A6),-(A7)
08000B38  6100 FF22 1598          bsr       @vsscanf_scanread
08000B3C  584F      1599          addq.w    #4,A7
08000B3E  2400      1600          move.l    D0,D2
08000B40  206E 000C 1601          move.l    12(A6),A0
08000B44  5290      1602          addq.l    #1,(A0)
08000B46  2042      1603          move.l    D2,A0
08000B48  43F9 0800 1604          lea       __ctype,A1
08000B4C  201C      
08000B4E  1030 9801 1605          move.b    1(A0,A1.L),D0
08000B52  C03C 0010 1606          and.b     #16,D0
08000B56  66DC      1607          bne       @vsscanf_scanspace_1
08000B58  2002      1608          move.l    D2,D0
08000B5A  4CDF 0004 1609          movem.l   (A7)+,D2
08000B5E  4E5E      1610          unlk      A6
08000B60  4E75      1611          rts
                    1612   @vsscanf_scanselect:
08000B62  4E56 0000 1613          link      A6,#0
08000B66  48E7 3F20 1614          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
08000B6A  262E 000C 1615          move.l    12(A6),D3
08000B6E  2C2E 0018 1616          move.l    24(A6),D6
08000B72  2E2E 0014 1617          move.l    20(A6),D7
08000B76  2043      1618          move.l    D3,A0
08000B78  1010      1619          move.b    (A0),D0
08000B7A  4880      1620          ext.w     D0
08000B7C  48C0      1621          ext.l     D0
08000B7E  0C80 0000 1622          cmp.l     #94,D0
08000B82  005E      
08000B84  6608      1623          bne.s     @vsscanf_scanselect_1
08000B86  347C 0001 1624          move.w    #1,A2
08000B8A  5283      1625          addq.l    #1,D3
08000B8C  6004      1626          bra.s     @vsscanf_scanselect_2
                    1627   @vsscanf_scanselect_1:
08000B8E  347C 0000 1628          move.w    #0,A2
                    1629   @vsscanf_scanselect_2:
08000B92  202E 0010 1630          move.l    16(A6),D0
08000B96  53AE 0010 1631          subq.l    #1,16(A6)
08000B9A  4A80      1632          tst.l     D0
08000B9C  6700 0108 1633          beq       @vsscanf_scanselect_5
08000BA0  2F2E 0008 1634          move.l    8(A6),-(A7)
08000BA4  6100 FEB6 1635          bsr       @vsscanf_scanread
08000BA8  584F      1636          addq.w    #4,A7
08000BAA  2800      1637          move.l    D0,D4
08000BAC  0C84 FFFF 1638          cmp.l     #-1,D4
08000BB0  FFFF      
08000BB2  6604      1639          bne.s     @vsscanf_scanselect_6
08000BB4  6000 00F0 1640          bra       @vsscanf_scanselect_5
                    1641   @vsscanf_scanselect_6:
08000BB8  206E 001C 1642          move.l    28(A6),A0
08000BBC  5290      1643          addq.l    #1,(A0)
08000BBE  4285      1644          clr.l     D5
08000BC0  4282      1645          clr.l     D2
                    1646   @vsscanf_scanselect_8:
08000BC2  2043      1647          move.l    D3,A0
08000BC4  1030 2800 1648          move.b    0(A0,D2.L),D0
08000BC8  4880      1649          ext.w     D0
08000BCA  48C0      1650          ext.l     D0
08000BCC  0C80 0000 1651          cmp.l     #93,D0
08000BD0  005D      
08000BD2  6700 008E 1652          beq       @vsscanf_scanselect_10
08000BD6  4A82      1653          tst.l     D2
08000BD8  6716      1654          beq.s     @vsscanf_scanselect_11
08000BDA  2043      1655          move.l    D3,A0
08000BDC  1030 2800 1656          move.b    0(A0,D2.L),D0
08000BE0  4880      1657          ext.w     D0
08000BE2  48C0      1658          ext.l     D0
08000BE4  0C80 0000 1659          cmp.l     #93,D0
08000BE8  005D      
08000BEA  6604      1660          bne.s     @vsscanf_scanselect_11
08000BEC  6000 0074 1661          bra       @vsscanf_scanselect_10
                    1662   @vsscanf_scanselect_11:
08000BF0  4A82      1663          tst.l     D2
08000BF2  6700 0058 1664          beq       @vsscanf_scanselect_15
08000BF6  2043      1665          move.l    D3,A0
08000BF8  1030 2800 1666          move.b    0(A0,D2.L),D0
08000BFC  4880      1667          ext.w     D0
08000BFE  48C0      1668          ext.l     D0
08000C00  0C80 0000 1669          cmp.l     #45,D0
08000C04  002D      
08000C06  6600 0044 1670          bne       @vsscanf_scanselect_15
08000C0A  2043      1671          move.l    D3,A0
08000C0C  2002      1672          move.l    D2,D0
08000C0E  5380      1673          subq.l    #1,D0
08000C10  2243      1674          move.l    D3,A1
08000C12  2F08      1675          move.l    A0,-(A7)
08000C14  2042      1676          move.l    D2,A0
08000C16  1230 0800 1677          move.b    0(A0,D0.L),D1
08000C1A  B230 9801 1678          cmp.b     1(A0,A1.L),D1
08000C1E  6C00 002C 1679          bge       @vsscanf_scanselect_15
08000C22  205F      1680          move.l    (A7)+,A0
08000C24  2043      1681          move.l    D3,A0
08000C26  2002      1682          move.l    D2,D0
08000C28  5380      1683          subq.l    #1,D0
08000C2A  1030 0800 1684          move.b    0(A0,D0.L),D0
08000C2E  4880      1685          ext.w     D0
08000C30  48C0      1686          ext.l     D0
08000C32  B880      1687          cmp.l     D0,D4
08000C34  6D12      1688          blt.s     @vsscanf_scanselect_17
08000C36  2043      1689          move.l    D3,A0
08000C38  2242      1690          move.l    D2,A1
08000C3A  1031 8801 1691          move.b    1(A1,A0.L),D0
08000C3E  4880      1692          ext.w     D0
08000C40  48C0      1693          ext.l     D0
08000C42  B880      1694          cmp.l     D0,D4
08000C44  6E02      1695          bgt.s     @vsscanf_scanselect_17
08000C46  601A      1696          bra.s     @vsscanf_scanselect_10
                    1697   @vsscanf_scanselect_17:
08000C48  5282      1698          addq.l    #1,D2
08000C4A  6010      1699          bra.s     @vsscanf_scanselect_19
                    1700   @vsscanf_scanselect_15:
08000C4C  2043      1701          move.l    D3,A0
08000C4E  1030 2800 1702          move.b    0(A0,D2.L),D0
08000C52  4880      1703          ext.w     D0
08000C54  48C0      1704          ext.l     D0
08000C56  B880      1705          cmp.l     D0,D4
08000C58  6602      1706          bne.s     @vsscanf_scanselect_19
08000C5A  6006      1707          bra.s     @vsscanf_scanselect_10
                    1708   @vsscanf_scanselect_19:
08000C5C  5282      1709          addq.l    #1,D2
08000C5E  6000 FF62 1710          bra       @vsscanf_scanselect_8
                    1711   @vsscanf_scanselect_10:
08000C62  4A82      1712          tst.l     D2
08000C64  6712      1713          beq.s     @vsscanf_scanselect_23
08000C66  2043      1714          move.l    D3,A0
08000C68  1030 2800 1715          move.b    0(A0,D2.L),D0
08000C6C  4880      1716          ext.w     D0
08000C6E  48C0      1717          ext.l     D0
08000C70  0C80 0000 1718          cmp.l     #93,D0
08000C74  005D      
08000C76  6702      1719          beq.s     @vsscanf_scanselect_21
                    1720   @vsscanf_scanselect_23:
08000C78  7A01      1721          moveq     #1,D5
                    1722   @vsscanf_scanselect_21:
08000C7A  200A      1723          move.l    A2,D0
08000C7C  6712      1724          beq.s     @vsscanf_scanselect_24
08000C7E  4A85      1725          tst.l     D5
08000C80  660C      1726          bne.s     @vsscanf_scanselect_26
08000C82  4A87      1727          tst.l     D7
08000C84  6606      1728          bne.s     @vsscanf_scanselect_28
08000C86  2046      1729          move.l    D6,A0
08000C88  5286      1730          addq.l    #1,D6
08000C8A  1084      1731          move.b    D4,(A0)
                    1732   @vsscanf_scanselect_28:
08000C8C  6014      1733          bra.s     @vsscanf_scanselect_4
                    1734   @vsscanf_scanselect_26:
08000C8E  6016      1735          bra.s     @vsscanf_scanselect_5
                    1736   @vsscanf_scanselect_24:
08000C90  4A85      1737          tst.l     D5
08000C92  670C      1738          beq.s     @vsscanf_scanselect_30
08000C94  4A87      1739          tst.l     D7
08000C96  6606      1740          bne.s     @vsscanf_scanselect_32
08000C98  2046      1741          move.l    D6,A0
08000C9A  5286      1742          addq.l    #1,D6
08000C9C  1084      1743          move.b    D4,(A0)
                    1744   @vsscanf_scanselect_32:
08000C9E  6002      1745          bra.s     @vsscanf_scanselect_4
                    1746   @vsscanf_scanselect_30:
08000CA0  6004      1747          bra.s     @vsscanf_scanselect_5
                    1748   @vsscanf_scanselect_4:
08000CA2  6000 FEEE 1749          bra       @vsscanf_scanselect_2
                    1750   @vsscanf_scanselect_5:
08000CA6  0C84 FFFF 1751          cmp.l     #-1,D4
08000CAA  FFFF      
08000CAC  6712      1752          beq.s     @vsscanf_scanselect_34
08000CAE  2F04      1753          move.l    D4,-(A7)
08000CB0  2F2E 0008 1754          move.l    8(A6),-(A7)
08000CB4  6100 FE14 1755          bsr       @vsscanf_scanputback
08000CB8  504F      1756          addq.w    #8,A7
08000CBA  206E 001C 1757          move.l    28(A6),A0
08000CBE  5390      1758          subq.l    #1,(A0)
                    1759   @vsscanf_scanselect_34:
08000CC0  4A87      1760          tst.l     D7
08000CC2  6604      1761          bne.s     @vsscanf_scanselect_36
08000CC4  2046      1762          move.l    D6,A0
08000CC6  4210      1763          clr.b     (A0)
                    1764   @vsscanf_scanselect_36:
08000CC8  5283      1765          addq.l    #1,D3
08000CCA  2043      1766          move.l    D3,A0
08000CCC  1010      1767          move.b    (A0),D0
08000CCE  4880      1768          ext.w     D0
08000CD0  48C0      1769          ext.l     D0
08000CD2  0C80 0000 1770          cmp.l     #93,D0
08000CD6  005D      
08000CD8  6702      1771          beq.s     @vsscanf_scanselect_40
08000CDA  60EC      1772          bra       @vsscanf_scanselect_36
                    1773   @vsscanf_scanselect_40:
08000CDC  5283      1774          addq.l    #1,D3
08000CDE  2003      1775          move.l    D3,D0
08000CE0  4CDF 04FC 1776          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
08000CE4  4E5E      1777          unlk      A6
08000CE6  4E75      1778          rts
                    1779   _scanflush:
08000CE8  41F9 0800 1780          lea       @vsscanf_buf,A0
08000CEC  2148      
08000CEE  23C8 0800 1781          move.l    A0,@vsscanf_bufx
08000CF2  2016      
08000CF4  4239 0800 1782          clr.b     @vsscanf_buf
08000CF8  2148      
08000CFA  4878 FFFF 1783          pea       -1
08000CFE  6100 07A8 1784          bsr       _ungetch
08000D02  584F      1785          addq.w    #4,A7
08000D04  4E75      1786          rts
                    1787   _vsscanf:
08000D06  4E56 FF88 1788          link      A6,#-120
08000D0A  48E7 3F3C 1789          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000D0E  47F9 0800 1790          lea       @vsscanf_scanread,A3
08000D12  0A5C      
08000D14  4AAE 0008 1791          tst.l     8(A6)
08000D18  6706      1792          beq.s     vsscanf_1
08000D1A  41EE 0008 1793          lea       8(A6),A0
08000D1E  6004      1794          bra.s     vsscanf_2
                    1795   vsscanf_1:
08000D20  4280      1796          clr.l     D0
08000D22  2040      1797          move.l    D0,A0
                    1798   vsscanf_2:
08000D24  2A08      1799          move.l    A0,D5
08000D26  42AE FFE4 1800          clr.l     -28(A6)
08000D2A  4284      1801          clr.l     D4
                    1802   vsscanf_3:
08000D2C  206E 000C 1803          move.l    12(A6),A0
08000D30  52AE 000C 1804          addq.l    #1,12(A6)
08000D34  1010      1805          move.b    (A0),D0
08000D36  4880      1806          ext.w     D0
08000D38  48C0      1807          ext.l     D0
08000D3A  2600      1808          move.l    D0,D3
08000D3C  6700 05AC 1809          beq       vsscanf_5
08000D40  4286      1810          clr.l     D6
08000D42  387C 0000 1811          move.w    #0,A4
08000D46  0C83 0000 1812          cmp.l     #32,D3
08000D4A  0020      
08000D4C  6712      1813          beq.s     vsscanf_8
08000D4E  0C83 0000 1814          cmp.l     #9,D3
08000D52  0009      
08000D54  670A      1815          beq.s     vsscanf_8
08000D56  0C83 0000 1816          cmp.l     #10,D3
08000D5A  000A      
08000D5C  6600 0048 1817          bne       vsscanf_6
                    1818   vsscanf_8:
08000D60  2F05      1819          move.l    D5,-(A7)
08000D62  4E93      1820          jsr       (A3)
08000D64  584F      1821          addq.w    #4,A7
08000D66  2400      1822          move.l    D0,D2
08000D68  52AE FFE4 1823          addq.l    #1,-28(A6)
08000D6C  0C82 FFFF 1824          cmp.l     #-1,D2
08000D70  FFFF      
08000D72  660E      1825          bne.s     vsscanf_11
08000D74  4A84      1826          tst.l     D4
08000D76  6704      1827          beq.s     vsscanf_13
08000D78  2004      1828          move.l    D4,D0
08000D7A  6002      1829          bra.s     vsscanf_14
                    1830   vsscanf_13:
08000D7C  70FF      1831          moveq     #-1,D0
                    1832   vsscanf_14:
08000D7E  6000 056C 1833          bra       vsscanf_15
                    1834   vsscanf_11:
08000D82  2042      1835          move.l    D2,A0
08000D84  43F9 0800 1836          lea       __ctype,A1
08000D88  201C      
08000D8A  1030 9801 1837          move.b    1(A0,A1.L),D0
08000D8E  C03C 0010 1838          and.b     #16,D0
08000D92  66CC      1839          bne       vsscanf_8
08000D94  53AE FFE4 1840          subq.l    #1,-28(A6)
08000D98  2F02      1841          move.l    D2,-(A7)
08000D9A  2F05      1842          move.l    D5,-(A7)
08000D9C  6100 FD2C 1843          bsr       @vsscanf_scanputback
08000DA0  504F      1844          addq.w    #8,A7
08000DA2  6000 0542 1845          bra       vsscanf_139
                    1846   vsscanf_6:
08000DA6  0C83 0000 1847          cmp.l     #37,D3
08000DAA  0025      
08000DAC  6600 0502 1848          bne       vsscanf_127
08000DB0  206E 000C 1849          move.l    12(A6),A0
08000DB4  52AE 000C 1850          addq.l    #1,12(A6)
08000DB8  1010      1851          move.b    (A0),D0
08000DBA  4880      1852          ext.w     D0
08000DBC  48C0      1853          ext.l     D0
08000DBE  2600      1854          move.l    D0,D3
08000DC0  42AE FFEC 1855          clr.l     -20(A6)
08000DC4  4286      1856          clr.l     D6
08000DC6  42AE FFE8 1857          clr.l     -24(A6)
08000DCA  347C 7FFF 1858          move.w    #32767,A2
08000DCE  0C83 0000 1859          cmp.l     #42,D3
08000DD2  002A      
08000DD4  6612      1860          bne.s     vsscanf_18
08000DD6  7C01      1861          moveq     #1,D6
08000DD8  206E 000C 1862          move.l    12(A6),A0
08000DDC  52AE 000C 1863          addq.l    #1,12(A6)
08000DE0  1010      1864          move.b    (A0),D0
08000DE2  4880      1865          ext.w     D0
08000DE4  48C0      1866          ext.l     D0
08000DE6  2600      1867          move.l    D0,D3
                    1868   vsscanf_18:
08000DE8  2043      1869          move.l    D3,A0
08000DEA  43F9 0800 1870          lea       __ctype,A1
08000DEE  201C      
08000DF0  1030 9801 1871          move.b    1(A0,A1.L),D0
08000DF4  C03C 0004 1872          and.b     #4,D0
08000DF8  6700 004E 1873          beq       vsscanf_24
08000DFC  2003      1874          move.l    D3,D0
08000DFE  0480 0000 1875          sub.l     #48,D0
08000E02  0030      
08000E04  2440      1876          move.l    D0,A2
                    1877   vsscanf_22:
08000E06  206E 000C 1878          move.l    12(A6),A0
08000E0A  52AE 000C 1879          addq.l    #1,12(A6)
08000E0E  1010      1880          move.b    (A0),D0
08000E10  4880      1881          ext.w     D0
08000E12  48C0      1882          ext.l     D0
08000E14  2600      1883          move.l    D0,D3
08000E16  2040      1884          move.l    D0,A0
08000E18  43F9 0800 1885          lea       __ctype,A1
08000E1C  201C      
08000E1E  1030 9801 1886          move.b    1(A0,A1.L),D0
08000E22  C0BC 0000 1887          and.l     #255,D0
08000E26  00FF      
08000E28  C0BC 0000 1888          and.l     #4,D0
08000E2C  0004      
08000E2E  6718      1889          beq.s     vsscanf_24
08000E30  70D0      1890          moveq     #-48,D0
08000E32  2F0A      1891          move.l    A2,-(A7)
08000E34  4878 000A 1892          pea       10
08000E38  6100 04FE 1893          bsr       LMUL
08000E3C  2217      1894          move.l    (A7),D1
08000E3E  504F      1895          addq.w    #8,A7
08000E40  D283      1896          add.l     D3,D1
08000E42  D081      1897          add.l     D1,D0
08000E44  2440      1898          move.l    D0,A2
08000E46  60BE      1899          bra       vsscanf_22
                    1900   vsscanf_24:
08000E48  0C83 0000 1901          cmp.l     #108,D3
08000E4C  006C      
08000E4E  6708      1902          beq.s     vsscanf_27
08000E50  0C83 0000 1903          cmp.l     #76,D3
08000E54  004C      
08000E56  661A      1904          bne.s     vsscanf_25
                    1905   vsscanf_27:
08000E58  2D7C 0000 1906          move.l    #1,-24(A6)
08000E5C  0001 FFE8 
08000E60  206E 000C 1907          move.l    12(A6),A0
08000E64  52AE 000C 1908          addq.l    #1,12(A6)
08000E68  1010      1909          move.b    (A0),D0
08000E6A  4880      1910          ext.w     D0
08000E6C  48C0      1911          ext.l     D0
08000E6E  2600      1912          move.l    D0,D3
08000E70  6020      1913          bra.s     vsscanf_28
                    1914   vsscanf_25:
08000E72  0C83 0000 1915          cmp.l     #104,D3
08000E76  0068      
08000E78  6618      1916          bne.s     vsscanf_28
08000E7A  2D7C 0000 1917          move.l    #1,-20(A6)
08000E7E  0001 FFEC 
08000E82  206E 000C 1918          move.l    12(A6),A0
08000E86  52AE 000C 1919          addq.l    #1,12(A6)
08000E8A  1010      1920          move.b    (A0),D0
08000E8C  4880      1921          ext.w     D0
08000E8E  48C0      1922          ext.l     D0
08000E90  2600      1923          move.l    D0,D3
                    1924   vsscanf_28:
08000E92  0C83 0000 1925          cmp.l     #91,D3
08000E96  005B      
08000E98  6600 0036 1926          bne       vsscanf_30
08000E9C  4A86      1927          tst.l     D6
08000E9E  660A      1928          bne.s     vsscanf_32
08000EA0  206E 0010 1929          move.l    16(A6),A0
08000EA4  58AE 0010 1930          addq.l    #4,16(A6)
08000EA8  2E10      1931          move.l    (A0),D7
                    1932   vsscanf_32:
08000EAA  486E FFE4 1933          pea       -28(A6)
08000EAE  2F07      1934          move.l    D7,-(A7)
08000EB0  2F06      1935          move.l    D6,-(A7)
08000EB2  2F0A      1936          move.l    A2,-(A7)
08000EB4  2F2E 000C 1937          move.l    12(A6),-(A7)
08000EB8  2F05      1938          move.l    D5,-(A7)
08000EBA  6100 FCA6 1939          bsr       @vsscanf_scanselect
08000EBE  DEFC 0018 1940          add.w     #24,A7
08000EC2  2D40 000C 1941          move.l    D0,12(A6)
08000EC6  4A86      1942          tst.l     D6
08000EC8  6602      1943          bne.s     vsscanf_34
08000ECA  5284      1944          addq.l    #1,D4
                    1945   vsscanf_34:
08000ECC  6000 0418 1946          bra       vsscanf_139
                    1947   vsscanf_30:
08000ED0  0C83 0000 1948          cmp.l     #110,D3
08000ED4  006E      
08000ED6  661A      1949          bne.s     vsscanf_36
08000ED8  4A86      1950          tst.l     D6
08000EDA  6612      1951          bne.s     vsscanf_38
08000EDC  206E 0010 1952          move.l    16(A6),A0
08000EE0  58AE 0010 1953          addq.l    #4,16(A6)
08000EE4  2E10      1954          move.l    (A0),D7
08000EE6  2047      1955          move.l    D7,A0
08000EE8  20AE FFE4 1956          move.l    -28(A6),(A0)
08000EEC  5284      1957          addq.l    #1,D4
                    1958   vsscanf_38:
08000EEE  6000 03F6 1959          bra       vsscanf_139
                    1960   vsscanf_36:
08000EF2  0C83 0000 1961          cmp.l     #115,D3
08000EF6  0073      
08000EF8  6600 00AC 1962          bne       vsscanf_40
08000EFC  486E FFE4 1963          pea       -28(A6)
08000F00  2F05      1964          move.l    D5,-(A7)
08000F02  6100 FC28 1965          bsr       @vsscanf_scanspace
08000F06  504F      1966          addq.w    #8,A7
08000F08  2400      1967          move.l    D0,D2
08000F0A  4A86      1968          tst.l     D6
08000F0C  660A      1969          bne.s     vsscanf_42
08000F0E  206E 0010 1970          move.l    16(A6),A0
08000F12  58AE 0010 1971          addq.l    #4,16(A6)
08000F16  2E10      1972          move.l    (A0),D7
                    1973   vsscanf_42:
08000F18  52AE FFE4 1974          addq.l    #1,-28(A6)
                    1975   vsscanf_44:
08000F1C  200A      1976          move.l    A2,D0
08000F1E  534A      1977          subq.w    #1,A2
08000F20  4A80      1978          tst.l     D0
08000F22  6700 0038 1979          beq       vsscanf_46
08000F26  2042      1980          move.l    D2,A0
08000F28  43F9 0800 1981          lea       __ctype,A1
08000F2C  201C      
08000F2E  1030 9801 1982          move.b    1(A0,A1.L),D0
08000F32  C03C 0010 1983          and.b     #16,D0
08000F36  6624      1984          bne.s     vsscanf_46
08000F38  0C82 FFFF 1985          cmp.l     #-1,D2
08000F3C  FFFF      
08000F3E  671C      1986          beq.s     vsscanf_46
08000F40  387C 0001 1987          move.w    #1,A4
08000F44  4A86      1988          tst.l     D6
08000F46  6606      1989          bne.s     vsscanf_47
08000F48  2047      1990          move.l    D7,A0
08000F4A  5287      1991          addq.l    #1,D7
08000F4C  1082      1992          move.b    D2,(A0)
                    1993   vsscanf_47:
08000F4E  2F05      1994          move.l    D5,-(A7)
08000F50  4E93      1995          jsr       (A3)
08000F52  584F      1996          addq.w    #4,A7
08000F54  2400      1997          move.l    D0,D2
08000F56  52AE FFE4 1998          addq.l    #1,-28(A6)
08000F5A  60C0      1999          bra       vsscanf_44
                    2000   vsscanf_46:
08000F5C  4A86      2001          tst.l     D6
08000F5E  660A      2002          bne.s     vsscanf_51
08000F60  2047      2003          move.l    D7,A0
08000F62  4210      2004          clr.b     (A0)
08000F64  200C      2005          move.l    A4,D0
08000F66  6702      2006          beq.s     vsscanf_51
08000F68  5284      2007          addq.l    #1,D4
                    2008   vsscanf_51:
08000F6A  0C82 FFFF 2009          cmp.l     #-1,D2
08000F6E  FFFF      
08000F70  6708      2010          beq.s     vsscanf_55
08000F72  4A86      2011          tst.l     D6
08000F74  661E      2012          bne.s     vsscanf_53
08000F76  200C      2013          move.l    A4,D0
08000F78  661A      2014          bne.s     vsscanf_53
                    2015   vsscanf_55:
08000F7A  4A84      2016          tst.l     D4
08000F7C  6704      2017          beq.s     vsscanf_56
08000F7E  2004      2018          move.l    D4,D0
08000F80  600E      2019          bra.s     vsscanf_59
                    2020   vsscanf_56:
08000F82  0C82 FFFF 2021          cmp.l     #-1,D2
08000F86  FFFF      
08000F88  6604      2022          bne.s     vsscanf_58
08000F8A  70FF      2023          moveq     #-1,D0
08000F8C  6002      2024          bra.s     vsscanf_59
                    2025   vsscanf_58:
08000F8E  2004      2026          move.l    D4,D0
                    2027   vsscanf_59:
08000F90  6000 035A 2028          bra       vsscanf_15
                    2029   vsscanf_53:
08000F94  53AE FFE4 2030          subq.l    #1,-28(A6)
08000F98  2F02      2031          move.l    D2,-(A7)
08000F9A  2F05      2032          move.l    D5,-(A7)
08000F9C  6100 FB2C 2033          bsr       @vsscanf_scanputback
08000FA0  504F      2034          addq.w    #8,A7
08000FA2  6000 0342 2035          bra       vsscanf_139
                    2036   vsscanf_40:
08000FA6  0C83 0000 2037          cmp.l     #99,D3
08000FAA  0063      
08000FAC  6600 008E 2038          bne       vsscanf_60
08000FB0  4A86      2039          tst.l     D6
08000FB2  660A      2040          bne.s     vsscanf_62
08000FB4  206E 0010 2041          move.l    16(A6),A0
08000FB8  58AE 0010 2042          addq.l    #4,16(A6)
08000FBC  2E10      2043          move.l    (A0),D7
                    2044   vsscanf_62:
08000FBE  2F05      2045          move.l    D5,-(A7)
08000FC0  4E93      2046          jsr       (A3)
08000FC2  584F      2047          addq.w    #4,A7
08000FC4  2400      2048          move.l    D0,D2
08000FC6  52AE FFE4 2049          addq.l    #1,-28(A6)
08000FCA  200A      2050          move.l    A2,D0
08000FCC  0C80 0000 2051          cmp.l     #32767,D0
08000FD0  7FFF      
08000FD2  6604      2052          bne.s     vsscanf_64
08000FD4  347C 0001 2053          move.w    #1,A2
                    2054   vsscanf_64:
08000FD8  0C82 FFFF 2055          cmp.l     #-1,D2
08000FDC  FFFF      
08000FDE  6606      2056          bne.s     vsscanf_66
08000FE0  4A86      2057          tst.l     D6
08000FE2  6602      2058          bne.s     vsscanf_66
08000FE4  5384      2059          subq.l    #1,D4
                    2060   vsscanf_66:
08000FE6  200A      2061          move.l    A2,D0
08000FE8  534A      2062          subq.w    #1,A2
08000FEA  4A80      2063          tst.l     D0
08000FEC  6720      2064          beq.s     vsscanf_70
08000FEE  0C82 FFFF 2065          cmp.l     #-1,D2
08000FF2  FFFF      
08000FF4  6718      2066          beq.s     vsscanf_70
08000FF6  4A86      2067          tst.l     D6
08000FF8  6606      2068          bne.s     vsscanf_71
08000FFA  2047      2069          move.l    D7,A0
08000FFC  5287      2070          addq.l    #1,D7
08000FFE  1082      2071          move.b    D2,(A0)
                    2072   vsscanf_71:
08001000  2F05      2073          move.l    D5,-(A7)
08001002  4E93      2074          jsr       (A3)
08001004  584F      2075          addq.w    #4,A7
08001006  2400      2076          move.l    D0,D2
08001008  52AE FFE4 2077          addq.l    #1,-28(A6)
0800100C  60D8      2078          bra       vsscanf_66
                    2079   vsscanf_70:
0800100E  0C82 FFFF 2080          cmp.l     #-1,D2
08001012  FFFF      
08001014  660E      2081          bne.s     vsscanf_73
08001016  4A84      2082          tst.l     D4
08001018  6704      2083          beq.s     vsscanf_75
0800101A  2004      2084          move.l    D4,D0
0800101C  6002      2085          bra.s     vsscanf_76
                    2086   vsscanf_75:
0800101E  70FF      2087          moveq     #-1,D0
                    2088   vsscanf_76:
08001020  6000 02CA 2089          bra       vsscanf_15
                    2090   vsscanf_73:
08001024  4A86      2091          tst.l     D6
08001026  6602      2092          bne.s     vsscanf_77
08001028  5284      2093          addq.l    #1,D4
                    2094   vsscanf_77:
0800102A  53AE FFE4 2095          subq.l    #1,-28(A6)
0800102E  2F02      2096          move.l    D2,-(A7)
08001030  2F05      2097          move.l    D5,-(A7)
08001032  6100 FA96 2098          bsr       @vsscanf_scanputback
08001036  504F      2099          addq.w    #8,A7
08001038  6000 02AC 2100          bra       vsscanf_139
                    2101   vsscanf_60:
0800103C  0C83 0000 2102          cmp.l     #105,D3
08001040  0069      
08001042  6600 0060 2103          bne       vsscanf_82
08001046  486E FFE4 2104          pea       -28(A6)
0800104A  2F05      2105          move.l    D5,-(A7)
0800104C  6100 FADE 2106          bsr       @vsscanf_scanspace
08001050  504F      2107          addq.w    #8,A7
08001052  2400      2108          move.l    D0,D2
08001054  0C82 0000 2109          cmp.l     #48,D2
08001058  0030      
0800105A  6600 0038 2110          bne       vsscanf_81
0800105E  387C 0001 2111          move.w    #1,A4
08001062  2F05      2112          move.l    D5,-(A7)
08001064  4E93      2113          jsr       (A3)
08001066  584F      2114          addq.w    #4,A7
08001068  2400      2115          move.l    D0,D2
0800106A  2F02      2116          move.l    D2,-(A7)
0800106C  6100 03CC 2117          bsr       _tolower
08001070  584F      2118          addq.w    #4,A7
08001072  0C80 0000 2119          cmp.l     #120,D0
08001076  0078      
08001078  6604      2120          bne.s     vsscanf_83
0800107A  7678      2121          moveq     #120,D3
0800107C  6010      2122          bra.s     vsscanf_84
                    2123   vsscanf_83:
0800107E  53AE FFE4 2124          subq.l    #1,-28(A6)
08001082  2F02      2125          move.l    D2,-(A7)
08001084  2F05      2126          move.l    D5,-(A7)
08001086  6100 FA42 2127          bsr       @vsscanf_scanputback
0800108A  504F      2128          addq.w    #8,A7
0800108C  766F      2129          moveq     #111,D3
                    2130   vsscanf_84:
0800108E  52AE FFE4 2131          addq.l    #1,-28(A6)
08001092  6010      2132          bra.s     vsscanf_82
                    2133   vsscanf_81:
08001094  53AE FFE4 2134          subq.l    #1,-28(A6)
08001098  2F02      2135          move.l    D2,-(A7)
0800109A  2F05      2136          move.l    D5,-(A7)
0800109C  6100 FA2C 2137          bsr       @vsscanf_scanputback
080010A0  504F      2138          addq.w    #8,A7
080010A2  7664      2139          moveq     #100,D3
                    2140   vsscanf_82:
080010A4  0C83 0000 2141          cmp.l     #100,D3
080010A8  0064      
080010AA  671A      2142          beq.s     vsscanf_87
080010AC  0C83 0000 2143          cmp.l     #117,D3
080010B0  0075      
080010B2  6712      2144          beq.s     vsscanf_87
080010B4  0C83 0000 2145          cmp.l     #120,D3
080010B8  0078      
080010BA  670A      2146          beq.s     vsscanf_87
080010BC  0C83 0000 2147          cmp.l     #111,D3
080010C0  006F      
080010C2  6600 01A4 2148          bne       vsscanf_85
                    2149   vsscanf_87:
080010C6  486E FFE4 2150          pea       -28(A6)
080010CA  2F05      2151          move.l    D5,-(A7)
080010CC  6100 FA5E 2152          bsr       @vsscanf_scanspace
080010D0  504F      2153          addq.w    #8,A7
080010D2  2400      2154          move.l    D0,D2
080010D4  2D7C 0000 2155          move.l    #10,-4(A6)
080010D8  000A FFFC 
080010DC  0C83 0000 2156          cmp.l     #120,D3
080010E0  0078      
080010E2  6608      2157          bne.s     vsscanf_88
080010E4  2D7C 0000 2158          move.l    #16,-4(A6)
080010E8  0010 FFFC 
                    2159   vsscanf_88:
080010EC  0C83 0000 2160          cmp.l     #111,D3
080010F0  006F      
080010F2  6608      2161          bne.s     vsscanf_90
080010F4  2D7C 0000 2162          move.l    #8,-4(A6)
080010F8  0008 FFFC 
                    2163   vsscanf_90:
080010FC  4A86      2164          tst.l     D6
080010FE  660A      2165          bne.s     vsscanf_92
08001100  206E 0010 2166          move.l    16(A6),A0
08001104  58AE 0010 2167          addq.l    #4,16(A6)
08001108  2E10      2168          move.l    (A0),D7
                    2169   vsscanf_92:
0800110A  42AE FFE0 2170          clr.l     -32(A6)
0800110E  52AE FFE4 2171          addq.l    #1,-28(A6)
08001112  0C83 0000 2172          cmp.l     #117,D3
08001116  0075      
08001118  6720      2173          beq.s     vsscanf_94
0800111A  0C82 0000 2174          cmp.l     #45,D2
0800111E  002D      
08001120  6618      2175          bne.s     vsscanf_94
08001122  2F05      2176          move.l    D5,-(A7)
08001124  4E93      2177          jsr       (A3)
08001126  584F      2178          addq.w    #4,A7
08001128  2400      2179          move.l    D0,D2
0800112A  52AE FFE4 2180          addq.l    #1,-28(A6)
0800112E  2D7C 0000 2181          move.l    #1,-32(A6)
08001132  0001 FFE0 
08001136  387C 0001 2182          move.w    #1,A4
                    2183   vsscanf_94:
0800113A  3A7C 0000 2184          move.w    #0,A5
0800113E  0C82 FFFF 2185          cmp.l     #-1,D2
08001142  FFFF      
08001144  660E      2186          bne.s     vsscanf_96
08001146  4A84      2187          tst.l     D4
08001148  6704      2188          beq.s     vsscanf_98
0800114A  2004      2189          move.l    D4,D0
0800114C  6002      2190          bra.s     vsscanf_99
                    2191   vsscanf_98:
0800114E  70FF      2192          moveq     #-1,D0
                    2193   vsscanf_99:
08001150  6000 019A 2194          bra       vsscanf_15
                    2195   vsscanf_96:
08001154  200A      2196          move.l    A2,D0
08001156  534A      2197          subq.w    #1,A2
08001158  4A80      2198          tst.l     D0
0800115A  6700 0090 2199          beq       vsscanf_102
0800115E  0C83 0000 2200          cmp.l     #120,D3
08001162  0078      
08001164  6620      2201          bne.s     vsscanf_104
08001166  2F02      2202          move.l    D2,-(A7)
08001168  6100 0312 2203          bsr       _toupper
0800116C  584F      2204          addq.w    #4,A7
0800116E  0C80 0000 2205          cmp.l     #65,D0
08001172  0041      
08001174  6D10      2206          blt.s     vsscanf_104
08001176  2F02      2207          move.l    D2,-(A7)
08001178  6100 0302 2208          bsr       _toupper
0800117C  584F      2209          addq.w    #4,A7
0800117E  0C80 0000 2210          cmp.l     #70,D0
08001182  0046      
08001184  6F14      2211          ble.s     vsscanf_103
                    2212   vsscanf_104:
08001186  2042      2213          move.l    D2,A0
08001188  43F9 0800 2214          lea       __ctype,A1
0800118C  201C      
0800118E  1030 9801 2215          move.b    1(A0,A1.L),D0
08001192  C03C 0004 2216          and.b     #4,D0
08001196  6700 0054 2217          beq       vsscanf_102
                    2218   vsscanf_103:
0800119A  2042      2219          move.l    D2,A0
0800119C  43F9 0800 2220          lea       __ctype,A1
080011A0  201C      
080011A2  1030 9801 2221          move.b    1(A0,A1.L),D0
080011A6  C03C 0004 2222          and.b     #4,D0
080011AA  6614      2223          bne.s     vsscanf_105
080011AC  70F9      2224          moveq     #-7,D0
080011AE  2F00      2225          move.l    D0,-(A7)
080011B0  2F02      2226          move.l    D2,-(A7)
080011B2  6100 02C8 2227          bsr       _toupper
080011B6  584F      2228          addq.w    #4,A7
080011B8  2200      2229          move.l    D0,D1
080011BA  201F      2230          move.l    (A7)+,D0
080011BC  D081      2231          add.l     D1,D0
080011BE  2400      2232          move.l    D0,D2
                    2233   vsscanf_105:
080011C0  2F0D      2234          move.l    A5,-(A7)
080011C2  2F2E FFFC 2235          move.l    -4(A6),-(A7)
080011C6  6100 0170 2236          bsr       LMUL
080011CA  2017      2237          move.l    (A7),D0
080011CC  504F      2238          addq.w    #8,A7
080011CE  D082      2239          add.l     D2,D0
080011D0  0480 0000 2240          sub.l     #48,D0
080011D4  0030      
080011D6  2A40      2241          move.l    D0,A5
080011D8  2F05      2242          move.l    D5,-(A7)
080011DA  4E93      2243          jsr       (A3)
080011DC  584F      2244          addq.w    #4,A7
080011DE  2400      2245          move.l    D0,D2
080011E0  52AE FFE4 2246          addq.l    #1,-28(A6)
080011E4  387C 0001 2247          move.w    #1,A4
080011E8  6000 FF6A 2248          bra       vsscanf_96
                    2249   vsscanf_102:
080011EC  0C82 FFFF 2250          cmp.l     #-1,D2
080011F0  FFFF      
080011F2  671A      2251          beq.s     vsscanf_107
080011F4  2F02      2252          move.l    D2,-(A7)
080011F6  2F05      2253          move.l    D5,-(A7)
080011F8  6100 F8D0 2254          bsr       @vsscanf_scanputback
080011FC  504F      2255          addq.w    #8,A7
080011FE  53AE FFE4 2256          subq.l    #1,-28(A6)
08001202  200C      2257          move.l    A4,D0
08001204  6606      2258          bne.s     vsscanf_109
08001206  2004      2259          move.l    D4,D0
08001208  6000 00E2 2260          bra       vsscanf_15
                    2261   vsscanf_109:
0800120C  6012      2262          bra.s     vsscanf_111
                    2263   vsscanf_107:
0800120E  200C      2264          move.l    A4,D0
08001210  660E      2265          bne.s     vsscanf_111
08001212  4A84      2266          tst.l     D4
08001214  6704      2267          beq.s     vsscanf_113
08001216  2004      2268          move.l    D4,D0
08001218  6002      2269          bra.s     vsscanf_114
                    2270   vsscanf_113:
0800121A  70FF      2271          moveq     #-1,D0
                    2272   vsscanf_114:
0800121C  6000 00CE 2273          bra       vsscanf_15
                    2274   vsscanf_111:
08001220  4AAE FFE0 2275          tst.l     -32(A6)
08001224  6706      2276          beq.s     vsscanf_115
08001226  200D      2277          move.l    A5,D0
08001228  4480      2278          neg.l     D0
0800122A  2A40      2279          move.l    D0,A5
                    2280   vsscanf_115:
0800122C  4A86      2281          tst.l     D6
0800122E  661E      2282          bne.s     vsscanf_117
08001230  4AAE FFE8 2283          tst.l     -24(A6)
08001234  6706      2284          beq.s     vsscanf_119
08001236  2047      2285          move.l    D7,A0
08001238  208D      2286          move.l    A5,(A0)
0800123A  6010      2287          bra.s     vsscanf_122
                    2288   vsscanf_119:
0800123C  4AAE FFEC 2289          tst.l     -20(A6)
08001240  6706      2290          beq.s     vsscanf_121
08001242  2047      2291          move.l    D7,A0
08001244  308D      2292          move.w    A5,(A0)
08001246  6004      2293          bra.s     vsscanf_122
                    2294   vsscanf_121:
08001248  2047      2295          move.l    D7,A0
0800124A  208D      2296          move.l    A5,(A0)
                    2297   vsscanf_122:
0800124C  5284      2298          addq.l    #1,D4
                    2299   vsscanf_117:
0800124E  0C82 FFFF 2300          cmp.l     #-1,D2
08001252  FFFF      
08001254  660E      2301          bne.s     vsscanf_123
08001256  4A84      2302          tst.l     D4
08001258  6704      2303          beq.s     vsscanf_125
0800125A  2004      2304          move.l    D4,D0
0800125C  6002      2305          bra.s     vsscanf_126
                    2306   vsscanf_125:
0800125E  70FF      2307          moveq     #-1,D0
                    2308   vsscanf_126:
08001260  6000 008A 2309          bra       vsscanf_15
                    2310   vsscanf_123:
08001264  6000 0080 2311          bra       vsscanf_139
                    2312   vsscanf_85:
08001268  0C83 0000 2313          cmp.l     #37,D3
0800126C  0025      
0800126E  6600 0040 2314          bne       vsscanf_127
08001272  2F05      2315          move.l    D5,-(A7)
08001274  4E93      2316          jsr       (A3)
08001276  584F      2317          addq.w    #4,A7
08001278  2400      2318          move.l    D0,D2
0800127A  0C82 FFFF 2319          cmp.l     #-1,D2
0800127E  FFFF      
08001280  660E      2320          bne.s     vsscanf_129
08001282  4A84      2321          tst.l     D4
08001284  6704      2322          beq.s     vsscanf_131
08001286  2004      2323          move.l    D4,D0
08001288  6002      2324          bra.s     vsscanf_132
                    2325   vsscanf_131:
0800128A  70FF      2326          moveq     #-1,D0
                    2327   vsscanf_132:
0800128C  6000 005E 2328          bra       vsscanf_15
                    2329   vsscanf_129:
08001290  52AE FFE4 2330          addq.l    #1,-28(A6)
08001294  B483      2331          cmp.l     D3,D2
08001296  6714      2332          beq.s     vsscanf_133
08001298  2F02      2333          move.l    D2,-(A7)
0800129A  2F05      2334          move.l    D5,-(A7)
0800129C  6100 F82C 2335          bsr       @vsscanf_scanputback
080012A0  504F      2336          addq.w    #8,A7
080012A2  53AE FFE4 2337          subq.l    #1,-28(A6)
080012A6  2004      2338          move.l    D4,D0
080012A8  6000 0042 2339          bra       vsscanf_15
                    2340   vsscanf_133:
080012AC  6000 0038 2341          bra       vsscanf_139
                    2342   vsscanf_127:
080012B0  2F05      2343          move.l    D5,-(A7)
080012B2  4E93      2344          jsr       (A3)
080012B4  584F      2345          addq.w    #4,A7
080012B6  2400      2346          move.l    D0,D2
080012B8  52AE FFE4 2347          addq.l    #1,-28(A6)
080012BC  0C82 FFFF 2348          cmp.l     #-1,D2
080012C0  FFFF      
080012C2  660C      2349          bne.s     vsscanf_135
080012C4  4A84      2350          tst.l     D4
080012C6  6704      2351          beq.s     vsscanf_137
080012C8  2004      2352          move.l    D4,D0
080012CA  6002      2353          bra.s     vsscanf_138
                    2354   vsscanf_137:
080012CC  70FF      2355          moveq     #-1,D0
                    2356   vsscanf_138:
080012CE  601C      2357          bra.s     vsscanf_15
                    2358   vsscanf_135:
080012D0  B483      2359          cmp.l     D3,D2
080012D2  6712      2360          beq.s     vsscanf_139
080012D4  2F02      2361          move.l    D2,-(A7)
080012D6  2F05      2362          move.l    D5,-(A7)
080012D8  6100 F7F0 2363          bsr       @vsscanf_scanputback
080012DC  504F      2364          addq.w    #8,A7
080012DE  53AE FFE4 2365          subq.l    #1,-28(A6)
080012E2  2004      2366          move.l    D4,D0
080012E4  6006      2367          bra.s     vsscanf_15
                    2368   vsscanf_139:
080012E6  6000 FA44 2369          bra       vsscanf_3
                    2370   vsscanf_5:
080012EA  2004      2371          move.l    D4,D0
                    2372   vsscanf_15:
080012EC  4CDF 3CFC 2373          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
080012F0  4E5E      2374          unlk      A6
080012F2  4E75      2375          rts
                    2376   _printf:
080012F4  4E56 FFFC 2377          link      A6,#-4
080012F8  48E7 2000 2378          movem.l   D2,-(A7)
080012FC  41EE 0008 2379          lea       8(A6),A0
08001300  5848      2380          addq.w    #4,A0
08001302  2408      2381          move.l    A0,D2
08001304  2F02      2382          move.l    D2,-(A7)
08001306  2F2E 0008 2383          move.l    8(A6),-(A7)
0800130A  42A7      2384          clr.l     -(A7)
0800130C  6100 0260 2385          bsr       _vsprintf
08001310  DEFC 000C 2386          add.w     #12,A7
08001314  2D40 FFFC 2387          move.l    D0,-4(A6)
08001318  4282      2388          clr.l     D2
0800131A  202E FFFC 2389          move.l    -4(A6),D0
0800131E  4CDF 0004 2390          movem.l   (A7)+,D2
08001322  4E5E      2391          unlk      A6
08001324  4E75      2392          rts
                    2393   ULMUL:
08001326  4E56 0000 2394          link    A6,#0
0800132A  48E7 C000 2395          movem.l D0/D1,-(A7)
0800132E  222E 0008 2396          move.l  8(A6),D1
08001332  202E 000C 2397          move.l  12(A6),D0
08001336  602C      2398          bra.s   lmul_3
                    2399   LMUL:
08001338  4E56 0000 2400          link    A6,#0
0800133C  48E7 C000 2401          movem.l D0/D1,-(A7)
08001340  222E 0008 2402          move.l  8(A6),D1
08001344  202E 000C 2403          move.l  12(A6),D0
08001348  4A80      2404          tst.l   D0
0800134A  6A0A      2405          bpl.s   lmul_1
0800134C  4480      2406          neg.l   D0
0800134E  4A81      2407          tst.l   D1
08001350  6A0A      2408          bpl.s   lmul_2
08001352  4481      2409          neg.l   D1
08001354  600E      2410          bra.s   lmul_3
                    2411   lmul_1:
08001356  4A81      2412          tst.l   D1
08001358  6A0A      2413          bpl.s   lmul_3
0800135A  4481      2414          neg.l   D1
                    2415   lmul_2:
0800135C  6114      2416          bsr.s   domul
0800135E  4481      2417          neg.l   D1
08001360  4080      2418          negx.l  D0
08001362  6002      2419          bra.s   lmul_4
                    2420   lmul_3:
08001364  610C      2421          bsr.s   domul
                    2422   lmul_4:
08001366  2D41 0008 2423          move.l  D1,8(A6)
0800136A  4CDF 0003 2424          movem.l (A7)+,D0/D1
0800136E  4E5E      2425          unlk    A6
08001370  4E75      2426          rts
                    2427   domul:
08001372  0C81 0000 2428          cmpi.l  #$FFFF,D1
08001376  FFFF      
08001378  620C      2429          bhi.s   domul_1
0800137A  0C80 0000 2430          cmpi.l  #$FFFF,D0
0800137E  FFFF      
08001380  620E      2431          bhi.s   domul_2
08001382  C2C0      2432          mulu    D0,D1
08001384  4E75      2433          rts
                    2434   domul_1:
08001386  0C80 0000 2435          cmpi.l  #$FFFF,D0
0800138A  FFFF      
0800138C  6218      2436          bhi.s   domul_4
0800138E  6002      2437          bra.s   domul_3
                    2438   domul_2
08001390  C141      2439          exg     D0,D1
                    2440   domul_3:
08001392  2F02      2441          move.l  D2,-(A7)
08001394  2401      2442          move.l  D1,D2
08001396  4842      2443          swap    D2
08001398  C2C0      2444          mulu    D0,D1
0800139A  C4C0      2445          mulu    D0,D2
0800139C  4842      2446          swap    D2
0800139E  4242      2447          clr.w   D2
080013A0  D282      2448          add.l   D2,D1
080013A2  241F      2449          move.l  (A7)+,D2
080013A4  4E75      2450          rts
                    2451   domul_4:
080013A6  48E7 3000 2452          movem.l D2/D3,-(A7)
080013AA  2401      2453          move.l  D1,D2
080013AC  2601      2454          move.l  D1,D3
080013AE  C2C0      2455          mulu    D0,D1
080013B0  4842      2456          swap    D2
080013B2  C4C0      2457          mulu    D0,D2
080013B4  4840      2458          swap    D0
080013B6  C6C0      2459          mulu    D0,D3
080013B8  D483      2460          add.l   D3,D2
080013BA  4842      2461          swap    D2
080013BC  4242      2462          clr.w   D2
080013BE  D282      2463          add.l   D2,D1
080013C0  4CDF 000C 2464          movem.l (A7)+,D2/D3
080013C4  4E75      2465          rts
                    2466   _gets:
080013C6  4E56 0000 2467          link      A6,#0
080013CA  48E7 3820 2468          movem.l   D2/D3/D4/A2,-(A7)
080013CE  45F9 0800 2469          lea       _putch,A2
080013D2  1BD2      
080013D4  282E 0008 2470          move.l    8(A6),D4
080013D8  2404      2471          move.l    D4,D2
                    2472   gets_1:
080013DA  6100 0826 2473          bsr       _getch
080013DE  2600      2474          move.l    D0,D3
080013E0  0C80 0000 2475          cmp.l     #10,D0
080013E4  000A      
080013E6  6700 003C 2476          beq       gets_3
080013EA  0C83 0000 2477          cmp.l     #8,D3
080013EE  0008      
080013F0  6712      2478          beq.s     gets_4
080013F2  2042      2479          move.l    D2,A0
080013F4  5282      2480          addq.l    #1,D2
080013F6  1083      2481          move.b    D3,(A0)
080013F8  4883      2482          ext.w     D3
080013FA  48C3      2483          ext.l     D3
080013FC  2F03      2484          move.l    D3,-(A7)
080013FE  4E92      2485          jsr       (A2)
08001400  584F      2486          addq.w    #4,A7
08001402  601E      2487          bra.s     gets_6
                    2488   gets_4:
08001404  B484      2489          cmp.l     D4,D2
08001406  631A      2490          bls.s     gets_6
08001408  4878 0008 2491          pea       8
0800140C  4E92      2492          jsr       (A2)
0800140E  584F      2493          addq.w    #4,A7
08001410  4878 0020 2494          pea       32
08001414  4E92      2495          jsr       (A2)
08001416  584F      2496          addq.w    #4,A7
08001418  4878 0008 2497          pea       8
0800141C  4E92      2498          jsr       (A2)
0800141E  584F      2499          addq.w    #4,A7
08001420  5382      2500          subq.l    #1,D2
                    2501   gets_6:
08001422  60B6      2502          bra       gets_1
                    2503   gets_3:
08001424  4878 000A 2504          pea       10
08001428  4E92      2505          jsr       (A2)
0800142A  584F      2506          addq.w    #4,A7
0800142C  2042      2507          move.l    D2,A0
0800142E  4210      2508          clr.b     (A0)
08001430  2004      2509          move.l    D4,D0
08001432  4CDF 041C 2510          movem.l   (A7)+,D2/D3/D4/A2
08001436  4E5E      2511          unlk      A6
08001438  4E75      2512          rts
                    2513   _tolower:
0800143A  4E56 0000 2514          link      A6,#0
0800143E  48E7 2000 2515          movem.l   D2,-(A7)
08001442  242E 0008 2516          move.l    8(A6),D2
08001446  0C82 0000 2517          cmp.l     #65,D2
0800144A  0041      
0800144C  6D0E      2518          blt.s     tolower_1
0800144E  0C82 0000 2519          cmp.l     #90,D2
08001452  005A      
08001454  6E06      2520          bgt.s     tolower_1
08001456  84BC 0000 2521          or.l      #32,D2
0800145A  0020      
                    2522   tolower_1:
0800145C  2002      2523          move.l    D2,D0
0800145E  4CDF 0004 2524          movem.l   (A7)+,D2
08001462  4E5E      2525          unlk      A6
08001464  4E75      2526          rts
                    2527   _strcat:
08001466  206F 0004 2528          move.l    (4,A7),A0	
0800146A  226F 0008 2529          move.l    (8,A7),A1	
0800146E  2008      2530          move.l    A0,D0		
                    2531   strcat_0:
08001470  4A18      2532          tst.b     (A0)+
08001472  66FC      2533          bne       strcat_0
08001474  5348      2534          subq      #1,A0
                    2535   strcat_1:
08001476  10D9      2536          move.b    (A1)+,(A0)+
08001478  66FC      2537          bne       strcat_1
0800147A  4E75      2538          rts
                    2539   _toupper:
0800147C  4E56 0000 2540          link      A6,#0
08001480  48E7 2000 2541          movem.l   D2,-(A7)
08001484  242E 0008 2542          move.l    8(A6),D2
08001488  0C82 0000 2543          cmp.l     #97,D2
0800148C  0061      
0800148E  6D0E      2544          blt.s     toupper_1
08001490  0C82 0000 2545          cmp.l     #122,D2
08001494  007A      
08001496  6E06      2546          bgt.s     toupper_1
08001498  C4BC 0000 2547          and.l     #95,D2
0800149C  005F      
                    2548   toupper_1:
0800149E  2002      2549          move.l    D2,D0
080014A0  4CDF 0004 2550          movem.l   (A7)+,D2
080014A4  4E5E      2551          unlk      A6
080014A6  4E75      2552          rts
                    2553   _ungetch:
080014A8  4E56 0000 2554          link      A6,#0
080014AC  23EE 0008 2555          move.l    8(A6),__ungetbuf
080014B0  0800 200A 
080014B4  202E 0008 2556          move.l    8(A6),D0
080014B8  4E5E      2557          unlk      A6
080014BA  4E75      2558          rts
                    2559   @vsprintf_copy:
080014BC  4E56 0000 2560          link      A6,#0
080014C0  206E 0008 2561          move.l    8(A6),A0
080014C4  4A90      2562          tst.l     (A0)
080014C6  6710      2563          beq.s     @vsprintf_copy_1
080014C8  202E 000C 2564          move.l    12(A6),D0
080014CC  206E 0008 2565          move.l    8(A6),A0
080014D0  2250      2566          move.l    (A0),A1
080014D2  5290      2567          addq.l    #1,(A0)
080014D4  1280      2568          move.b    D0,(A1)
080014D6  600A      2569          bra.s     @vsprintf_copy_2
                    2570   @vsprintf_copy_1:
080014D8  2F2E 000C 2571          move.l    12(A6),-(A7)
080014DC  6100 06F4 2572          bsr       _putch
080014E0  584F      2573          addq.w    #4,A7
                    2574   @vsprintf_copy_2:
080014E2  4E5E      2575          unlk      A6
080014E4  4E75      2576          rts
                    2577   @vsprintf_getval:
080014E6  4E56 0000 2578          link      A6,#0
080014EA  48E7 3000 2579          movem.l   D2/D3,-(A7)
080014EE  242E 0008 2580          move.l    8(A6),D2
080014F2  4283      2581          clr.l     D3
080014F4  2042      2582          move.l    D2,A0
080014F6  2050      2583          move.l    (A0),A0
080014F8  1010      2584          move.b    (A0),D0
080014FA  4880      2585          ext.w     D0
080014FC  48C0      2586          ext.l     D0
080014FE  0C80 0000 2587          cmp.l     #42,D0
08001502  002A      
08001504  6612      2588          bne.s     @vsprintf_getval_1
08001506  206E 000C 2589          move.l    12(A6),A0
0800150A  2250      2590          move.l    (A0),A1
0800150C  5890      2591          addq.l    #4,(A0)
0800150E  2611      2592          move.l    (A1),D3
08001510  2042      2593          move.l    D2,A0
08001512  5290      2594          addq.l    #1,(A0)
08001514  6000 004E 2595          bra       @vsprintf_getval_5
                    2596   @vsprintf_getval_1:
08001518  2042      2597          move.l    D2,A0
0800151A  2050      2598          move.l    (A0),A0
0800151C  1010      2599          move.b    (A0),D0
0800151E  4880      2600          ext.w     D0
08001520  48C0      2601          ext.l     D0
08001522  0C80 0000 2602          cmp.l     #48,D0
08001526  0030      
08001528  6D00 003A 2603          blt       @vsprintf_getval_5
0800152C  2042      2604          move.l    D2,A0
0800152E  2050      2605          move.l    (A0),A0
08001530  1010      2606          move.b    (A0),D0
08001532  4880      2607          ext.w     D0
08001534  48C0      2608          ext.l     D0
08001536  0C80 0000 2609          cmp.l     #57,D0
0800153A  0039      
0800153C  6E26      2610          bgt.s     @vsprintf_getval_5
0800153E  2F03      2611          move.l    D3,-(A7)
08001540  4878 000A 2612          pea       10
08001544  6100 FDF2 2613          bsr       LMUL
08001548  2017      2614          move.l    (A7),D0
0800154A  504F      2615          addq.w    #8,A7
0800154C  2042      2616          move.l    D2,A0
0800154E  2250      2617          move.l    (A0),A1
08001550  5290      2618          addq.l    #1,(A0)
08001552  1211      2619          move.b    (A1),D1
08001554  4881      2620          ext.w     D1
08001556  48C1      2621          ext.l     D1
08001558  D081      2622          add.l     D1,D0
0800155A  0480 0000 2623          sub.l     #48,D0
0800155E  0030      
08001560  2600      2624          move.l    D0,D3
08001562  60B4      2625          bra       @vsprintf_getval_1
                    2626   @vsprintf_getval_5:
08001564  2003      2627          move.l    D3,D0
08001566  4CDF 000C 2628          movem.l   (A7)+,D2/D3
0800156A  4E5E      2629          unlk      A6
0800156C  4E75      2630          rts
                    2631   _vsprintf:
0800156E  4E56 FFCC 2632          link      A6,#-52
08001572  48E7 3F3C 2633          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08001576  45EE 0008 2634          lea       8(A6),A2
0800157A  47F9 0800 2635          lea       @vsprintf_copy,A3
0800157E  14BC      
08001580  49F9 0800 2636          lea       _ultoa,A4
08001584  1D34      
08001586  4286      2637          clr.l     D6
                    2638   vsprintf_1:
08001588  206E 000C 2639          move.l    12(A6),A0
0800158C  4A10      2640          tst.b     (A0)
0800158E  6700 0624 2641          beq       vsprintf_3
08001592  206E 000C 2642          move.l    12(A6),A0
08001596  1010      2643          move.b    (A0),D0
08001598  4880      2644          ext.w     D0
0800159A  48C0      2645          ext.l     D0
0800159C  0C80 0000 2646          cmp.l     #37,D0
080015A0  0025      
080015A2  671C      2647          beq.s     vsprintf_4
080015A4  206E 000C 2648          move.l    12(A6),A0
080015A8  52AE 000C 2649          addq.l    #1,12(A6)
080015AC  1210      2650          move.b    (A0),D1
080015AE  4881      2651          ext.w     D1
080015B0  48C1      2652          ext.l     D1
080015B2  2F01      2653          move.l    D1,-(A7)
080015B4  2F0A      2654          move.l    A2,-(A7)
080015B6  4E93      2655          jsr       (A3)
080015B8  504F      2656          addq.w    #8,A7
080015BA  5286      2657          addq.l    #1,D6
080015BC  6000 05F2 2658          bra       vsprintf_2
                    2659   vsprintf_4:
080015C0  52AE 000C 2660          addq.l    #1,12(A6)
080015C4  422E FFD3 2661          clr.b     -45(A6)
080015C8  422E FFD2 2662          clr.b     -46(A6)
080015CC  422E FFD0 2663          clr.b     -48(A6)
080015D0  422E FFCF 2664          clr.b     -49(A6)
080015D4  422E FFCE 2665          clr.b     -50(A6)
080015D8  422E FFCD 2666          clr.b     -51(A6)
080015DC  42AE FFFC 2667          clr.l     -4(A6)
080015E0  7AFF      2668          moveq     #-1,D5
080015E2  41EE FFDC 2669          lea       -36(A6),A0
080015E6  2608      2670          move.l    A0,D3
080015E8  2408      2671          move.l    A0,D2
                    2672   vsprintf_6:
080015EA  206E 000C 2673          move.l    12(A6),A0
080015EE  1010      2674          move.b    (A0),D0
080015F0  4880      2675          ext.w     D0
080015F2  48C0      2676          ext.l     D0
080015F4  0C80 0000 2677          cmp.l     #43,D0
080015F8  002B      
080015FA  6730      2678          beq.s     vsprintf_12
080015FC  6E18      2679          bgt.s     vsprintf_15
080015FE  0C80 0000 2680          cmp.l     #35,D0
08001602  0023      
08001604  6700 003E 2681          beq       vsprintf_14
08001608  6E00 0046 2682          bgt       vsprintf_9
0800160C  0C80 0000 2683          cmp.l     #32,D0
08001610  0020      
08001612  6724      2684          beq.s     vsprintf_13
08001614  603A      2685          bra.s     vsprintf_9
                    2686   vsprintf_15:
08001616  0C80 0000 2687          cmp.l     #45,D0
0800161A  002D      
0800161C  6702      2688          beq.s     vsprintf_11
0800161E  6030      2689          bra.s     vsprintf_9
                    2690   vsprintf_11:
08001620  1D7C 0001 2691          move.b    #1,-51(A6)
08001624  FFCD      
08001626  52AE 000C 2692          addq.l    #1,12(A6)
0800162A  6026      2693          bra.s     vsprintf_7
                    2694   vsprintf_12:
0800162C  1D7C 0001 2695          move.b    #1,-50(A6)
08001630  FFCE      
08001632  52AE 000C 2696          addq.l    #1,12(A6)
08001636  601A      2697          bra.s     vsprintf_7
                    2698   vsprintf_13:
08001638  1D7C 0001 2699          move.b    #1,-49(A6)
0800163C  FFCF      
0800163E  52AE 000C 2700          addq.l    #1,12(A6)
08001642  600E      2701          bra.s     vsprintf_7
                    2702   vsprintf_14:
08001644  1D7C 0001 2703          move.b    #1,-48(A6)
08001648  FFD0      
0800164A  52AE 000C 2704          addq.l    #1,12(A6)
0800164E  6002      2705          bra.s     vsprintf_7
                    2706   vsprintf_9:
08001650  6002      2707          bra.s     vsprintf_8
                    2708   vsprintf_7:
08001652  6096      2709          bra       vsprintf_6
                    2710   vsprintf_8:
08001654  206E 000C 2711          move.l    12(A6),A0
08001658  1010      2712          move.b    (A0),D0
0800165A  4880      2713          ext.w     D0
0800165C  48C0      2714          ext.l     D0
0800165E  0C80 0000 2715          cmp.l     #48,D0
08001662  0030      
08001664  660A      2716          bne.s     vsprintf_16
08001666  52AE 000C 2717          addq.l    #1,12(A6)
0800166A  1D7C 0001 2718          move.b    #1,-46(A6)
0800166E  FFD2      
                    2719   vsprintf_16:
08001670  486E 0010 2720          pea       16(A6)
08001674  486E 000C 2721          pea       12(A6)
08001678  6100 FE6C 2722          bsr       @vsprintf_getval
0800167C  504F      2723          addq.w    #8,A7
0800167E  2A40      2724          move.l    D0,A5
08001680  206E 000C 2725          move.l    12(A6),A0
08001684  1010      2726          move.b    (A0),D0
08001686  4880      2727          ext.w     D0
08001688  48C0      2728          ext.l     D0
0800168A  0C80 0000 2729          cmp.l     #46,D0
0800168E  002E      
08001690  6614      2730          bne.s     vsprintf_18
08001692  52AE 000C 2731          addq.l    #1,12(A6)
08001696  486E 0010 2732          pea       16(A6)
0800169A  486E 000C 2733          pea       12(A6)
0800169E  6100 FE46 2734          bsr       @vsprintf_getval
080016A2  504F      2735          addq.w    #8,A7
080016A4  2A00      2736          move.l    D0,D5
                    2737   vsprintf_18:
080016A6  206E 000C 2738          move.l    12(A6),A0
080016AA  1010      2739          move.b    (A0),D0
080016AC  4880      2740          ext.w     D0
080016AE  48C0      2741          ext.l     D0
080016B0  0C80 0000 2742          cmp.l     #108,D0
080016B4  006C      
080016B6  660A      2743          bne.s     vsprintf_20
080016B8  52AE 000C 2744          addq.l    #1,12(A6)
080016BC  1D7C 0001 2745          move.b    #1,-45(A6)
080016C0  FFD3      
                    2746   vsprintf_20:
080016C2  206E 000C 2747          move.l    12(A6),A0
080016C6  1010      2748          move.b    (A0),D0
080016C8  4880      2749          ext.w     D0
080016CA  48C0      2750          ext.l     D0
080016CC  0C80 0000 2751          cmp.l     #111,D0
080016D0  006F      
080016D2  6700 00D4 2752          beq       vsprintf_27
080016D6  6E34      2753          bgt.s     vsprintf_33
080016D8  0C80 0000 2754          cmp.l     #100,D0
080016DC  0064      
080016DE  6700 0054 2755          beq       vsprintf_24
080016E2  6E1C      2756          bgt.s     vsprintf_34
080016E4  0C80 0000 2757          cmp.l     #99,D0
080016E8  0063      
080016EA  6700 012C 2758          beq       vsprintf_30
080016EE  6E00 016A 2759          bgt       vsprintf_22
080016F2  0C80 0000 2760          cmp.l     #88,D0
080016F6  0058      
080016F8  6700 00E6 2761          beq       vsprintf_28
080016FC  6000 015C 2762          bra       vsprintf_22
                    2763   vsprintf_34:
08001700  0C80 0000 2764          cmp.l     #105,D0
08001704  0069      
08001706  672C      2765          beq.s     vsprintf_24
08001708  6000 0150 2766          bra       vsprintf_22
                    2767   vsprintf_33:
0800170C  0C80 0000 2768          cmp.l     #117,D0
08001710  0075      
08001712  6700 005C 2769          beq       vsprintf_26
08001716  6E0E      2770          bgt.s     vsprintf_35
08001718  0C80 0000 2771          cmp.l     #115,D0
0800171C  0073      
0800171E  6700 011C 2772          beq       vsprintf_31
08001722  6000 0136 2773          bra       vsprintf_22
                    2774   vsprintf_35:
08001726  0C80 0000 2775          cmp.l     #120,D0
0800172A  0078      
0800172C  6700 00B2 2776          beq       vsprintf_28
08001730  6000 0128 2777          bra       vsprintf_22
                    2778   vsprintf_24:
08001734  4A2E FFD3 2779          tst.b     -45(A6)
08001738  671A      2780          beq.s     vsprintf_36
0800173A  4878 000A 2781          pea       10
0800173E  2F03      2782          move.l    D3,-(A7)
08001740  206E 0010 2783          move.l    16(A6),A0
08001744  58AE 0010 2784          addq.l    #4,16(A6)
08001748  2F10      2785          move.l    (A0),-(A7)
0800174A  6100 0564 2786          bsr       _ltoa
0800174E  DEFC 000C 2787          add.w     #12,A7
08001752  6018      2788          bra.s     vsprintf_37
                    2789   vsprintf_36:
08001754  4878 000A 2790          pea       10
08001758  2F03      2791          move.l    D3,-(A7)
0800175A  206E 0010 2792          move.l    16(A6),A0
0800175E  58AE 0010 2793          addq.l    #4,16(A6)
08001762  2F10      2794          move.l    (A0),-(A7)
08001764  6100 054A 2795          bsr       _ltoa
08001768  DEFC 000C 2796          add.w     #12,A7
                    2797   vsprintf_37:
0800176C  6000 00FA 2798          bra       vsprintf_23
                    2799   vsprintf_26:
08001770  4A2E FFD3 2800          tst.b     -45(A6)
08001774  6718      2801          beq.s     vsprintf_38
08001776  4878 000A 2802          pea       10
0800177A  2F03      2803          move.l    D3,-(A7)
0800177C  206E 0010 2804          move.l    16(A6),A0
08001780  58AE 0010 2805          addq.l    #4,16(A6)
08001784  2F10      2806          move.l    (A0),-(A7)
08001786  4E94      2807          jsr       (A4)
08001788  DEFC 000C 2808          add.w     #12,A7
0800178C  6016      2809          bra.s     vsprintf_39
                    2810   vsprintf_38:
0800178E  4878 000A 2811          pea       10
08001792  2F03      2812          move.l    D3,-(A7)
08001794  206E 0010 2813          move.l    16(A6),A0
08001798  58AE 0010 2814          addq.l    #4,16(A6)
0800179C  2F10      2815          move.l    (A0),-(A7)
0800179E  4E94      2816          jsr       (A4)
080017A0  DEFC 000C 2817          add.w     #12,A7
                    2818   vsprintf_39:
080017A4  6000 00C2 2819          bra       vsprintf_23
                    2820   vsprintf_27:
080017A8  4A2E FFD3 2821          tst.b     -45(A6)
080017AC  6718      2822          beq.s     vsprintf_40
080017AE  4878 0008 2823          pea       8
080017B2  2F03      2824          move.l    D3,-(A7)
080017B4  206E 0010 2825          move.l    16(A6),A0
080017B8  58AE 0010 2826          addq.l    #4,16(A6)
080017BC  2F10      2827          move.l    (A0),-(A7)
080017BE  4E94      2828          jsr       (A4)
080017C0  DEFC 000C 2829          add.w     #12,A7
080017C4  6016      2830          bra.s     vsprintf_41
                    2831   vsprintf_40:
080017C6  4878 0008 2832          pea       8
080017CA  2F03      2833          move.l    D3,-(A7)
080017CC  206E 0010 2834          move.l    16(A6),A0
080017D0  58AE 0010 2835          addq.l    #4,16(A6)
080017D4  2F10      2836          move.l    (A0),-(A7)
080017D6  4E94      2837          jsr       (A4)
080017D8  DEFC 000C 2838          add.w     #12,A7
                    2839   vsprintf_41:
080017DC  6000 008A 2840          bra       vsprintf_23
                    2841   vsprintf_28:
080017E0  4A2E FFD3 2842          tst.b     -45(A6)
080017E4  6718      2843          beq.s     vsprintf_42
080017E6  4878 0010 2844          pea       16
080017EA  2F03      2845          move.l    D3,-(A7)
080017EC  206E 0010 2846          move.l    16(A6),A0
080017F0  58AE 0010 2847          addq.l    #4,16(A6)
080017F4  2F10      2848          move.l    (A0),-(A7)
080017F6  4E94      2849          jsr       (A4)
080017F8  DEFC 000C 2850          add.w     #12,A7
080017FC  6016      2851          bra.s     vsprintf_43
                    2852   vsprintf_42:
080017FE  4878 0010 2853          pea       16
08001802  2F03      2854          move.l    D3,-(A7)
08001804  206E 0010 2855          move.l    16(A6),A0
08001808  58AE 0010 2856          addq.l    #4,16(A6)
0800180C  2F10      2857          move.l    (A0),-(A7)
0800180E  4E94      2858          jsr       (A4)
08001810  DEFC 000C 2859          add.w     #12,A7
                    2860   vsprintf_43:
08001814  6000 0052 2861          bra       vsprintf_23
                    2862   vsprintf_30:
08001818  206E 0010 2863          move.l    16(A6),A0
0800181C  58AE 0010 2864          addq.l    #4,16(A6)
08001820  2010      2865          move.l    (A0),D0
08001822  2042      2866          move.l    D2,A0
08001824  5282      2867          addq.l    #1,D2
08001826  1080      2868          move.b    D0,(A0)
08001828  2042      2869          move.l    D2,A0
0800182A  4210      2870          clr.b     (A0)
0800182C  200D      2871          move.l    A5,D0
0800182E  6704      2872          beq.s     vsprintf_44
08001830  200D      2873          move.l    A5,D0
08001832  6002      2874          bra.s     vsprintf_45
                    2875   vsprintf_44:
08001834  7001      2876          moveq     #1,D0
                    2877   vsprintf_45:
08001836  2A00      2878          move.l    D0,D5
08001838  6000 002E 2879          bra       vsprintf_23
                    2880   vsprintf_31:
0800183C  206E 0010 2881          move.l    16(A6),A0
08001840  58AE 0010 2882          addq.l    #4,16(A6)
08001844  2610      2883          move.l    (A0),D3
08001846  0C85 FFFF 2884          cmp.l     #-1,D5
0800184A  FFFF      
0800184C  660A      2885          bne.s     vsprintf_46
0800184E  2F03      2886          move.l    D3,-(A7)
08001850  6100 0544 2887          bsr       _strlen
08001854  584F      2888          addq.w    #4,A7
08001856  2A00      2889          move.l    D0,D5
                    2890   vsprintf_46:
08001858  600E      2891          bra.s     vsprintf_23
                    2892   vsprintf_22:
0800185A  206E 000C 2893          move.l    12(A6),A0
0800185E  2242      2894          move.l    D2,A1
08001860  5282      2895          addq.l    #1,D2
08001862  1290      2896          move.b    (A0),(A1)
08001864  2042      2897          move.l    D2,A0
08001866  4210      2898          clr.b     (A0)
                    2899   vsprintf_23:
08001868  2F03      2900          move.l    D3,-(A7)
0800186A  6100 052A 2901          bsr       _strlen
0800186E  584F      2902          addq.w    #4,A7
08001870  1800      2903          move.b    D0,D4
08001872  206E 000C 2904          move.l    12(A6),A0
08001876  1010      2905          move.b    (A0),D0
08001878  4880      2906          ext.w     D0
0800187A  48C0      2907          ext.l     D0
0800187C  0C80 0000 2908          cmp.l     #115,D0
08001880  0073      
08001882  6618      2909          bne.s     vsprintf_48
08001884  0C85 0000 2910          cmp.l     #0,D5
08001888  0000      
0800188A  6D10      2911          blt.s     vsprintf_48
0800188C  4884      2912          ext.w     D4
0800188E  48C4      2913          ext.l     D4
08001890  B885      2914          cmp.l     D5,D4
08001892  6F04      2915          ble.s     vsprintf_50
08001894  1005      2916          move.b    D5,D0
08001896  6002      2917          bra.s     vsprintf_51
                    2918   vsprintf_50:
08001898  1004      2919          move.b    D4,D0
                    2920   vsprintf_51:
0800189A  1800      2921          move.b    D0,D4
                    2922   vsprintf_48:
0800189C  206E 000C 2923          move.l    12(A6),A0
080018A0  1010      2924          move.b    (A0),D0
080018A2  4880      2925          ext.w     D0
080018A4  48C0      2926          ext.l     D0
080018A6  0C80 0000 2927          cmp.l     #88,D0
080018AA  0058      
080018AC  6600 0026 2928          bne       vsprintf_56
080018B0  41EE FFDC 2929          lea       -36(A6),A0
080018B4  2408      2930          move.l    A0,D2
                    2931   vsprintf_54:
080018B6  2042      2932          move.l    D2,A0
080018B8  4A10      2933          tst.b     (A0)
080018BA  6718      2934          beq.s     vsprintf_56
080018BC  2042      2935          move.l    D2,A0
080018BE  1210      2936          move.b    (A0),D1
080018C0  4881      2937          ext.w     D1
080018C2  48C1      2938          ext.l     D1
080018C4  2F01      2939          move.l    D1,-(A7)
080018C6  6100 FBB4 2940          bsr       _toupper
080018CA  584F      2941          addq.w    #4,A7
080018CC  2042      2942          move.l    D2,A0
080018CE  1080      2943          move.b    D0,(A0)
080018D0  5282      2944          addq.l    #1,D2
080018D2  60E2      2945          bra       vsprintf_54
                    2946   vsprintf_56:
080018D4  7E00      2947          moveq     #0,D7
080018D6  41EE FFD4 2948          lea       -44(A6),A0
080018DA  2408      2949          move.l    A0,D2
080018DC  206E 000C 2950          move.l    12(A6),A0
080018E0  1010      2951          move.b    (A0),D0
080018E2  4880      2952          ext.w     D0
080018E4  48C0      2953          ext.l     D0
080018E6  0C80 0000 2954          cmp.l     #100,D0
080018EA  0064      
080018EC  6714      2955          beq.s     vsprintf_59
080018EE  206E 000C 2956          move.l    12(A6),A0
080018F2  1010      2957          move.b    (A0),D0
080018F4  4880      2958          ext.w     D0
080018F6  48C0      2959          ext.l     D0
080018F8  0C80 0000 2960          cmp.l     #105,D0
080018FC  0069      
080018FE  6600 0076 2961          bne       vsprintf_65
                    2962   vsprintf_59:
08001902  4A2E FFCE 2963          tst.b     -50(A6)
08001906  6612      2964          bne.s     vsprintf_62
08001908  2043      2965          move.l    D3,A0
0800190A  1010      2966          move.b    (A0),D0
0800190C  4880      2967          ext.w     D0
0800190E  48C0      2968          ext.l     D0
08001910  0C80 0000 2969          cmp.l     #45,D0
08001914  002D      
08001916  6600 002E 2970          bne       vsprintf_60
                    2971   vsprintf_62:
0800191A  2043      2972          move.l    D3,A0
0800191C  1010      2973          move.b    (A0),D0
0800191E  4880      2974          ext.w     D0
08001920  48C0      2975          ext.l     D0
08001922  0C80 0000 2976          cmp.l     #45,D0
08001926  002D      
08001928  660E      2977          bne.s     vsprintf_63
0800192A  2043      2978          move.l    D3,A0
0800192C  5283      2979          addq.l    #1,D3
0800192E  2242      2980          move.l    D2,A1
08001930  5282      2981          addq.l    #1,D2
08001932  1290      2982          move.b    (A0),(A1)
08001934  5304      2983          subq.b    #1,D4
08001936  6008      2984          bra.s     vsprintf_64
                    2985   vsprintf_63:
08001938  2042      2986          move.l    D2,A0
0800193A  5282      2987          addq.l    #1,D2
0800193C  10BC 002B 2988          move.b    #43,(A0)
                    2989   vsprintf_64:
08001940  5287      2990          addq.l    #1,D7
08001942  6000 0032 2991          bra       vsprintf_65
                    2992   vsprintf_60:
08001946  4A2E FFCF 2993          tst.b     -49(A6)
0800194A  6700 002A 2994          beq       vsprintf_65
0800194E  2043      2995          move.l    D3,A0
08001950  1010      2996          move.b    (A0),D0
08001952  4880      2997          ext.w     D0
08001954  48C0      2998          ext.l     D0
08001956  0C80 0000 2999          cmp.l     #45,D0
0800195A  002D      
0800195C  660E      3000          bne.s     vsprintf_67
0800195E  2043      3001          move.l    D3,A0
08001960  5283      3002          addq.l    #1,D3
08001962  2242      3003          move.l    D2,A1
08001964  5282      3004          addq.l    #1,D2
08001966  1290      3005          move.b    (A0),(A1)
08001968  5304      3006          subq.b    #1,D4
0800196A  6008      3007          bra.s     vsprintf_68
                    3008   vsprintf_67:
0800196C  2042      3009          move.l    D2,A0
0800196E  5282      3010          addq.l    #1,D2
08001970  10BC 0020 3011          move.b    #32,(A0)
                    3012   vsprintf_68:
08001974  5287      3013          addq.l    #1,D7
                    3014   vsprintf_65:
08001976  4A2E FFD0 3015          tst.b     -48(A6)
0800197A  6700 0066 3016          beq       vsprintf_77
0800197E  206E 000C 3017          move.l    12(A6),A0
08001982  1010      3018          move.b    (A0),D0
08001984  4880      3019          ext.w     D0
08001986  48C0      3020          ext.l     D0
08001988  0C80 0000 3021          cmp.l     #111,D0
0800198C  006F      
0800198E  671A      3022          beq.s     vsprintf_73
08001990  6E0C      3023          bgt.s     vsprintf_76
08001992  0C80 0000 3024          cmp.l     #88,D0
08001996  0058      
08001998  6710      3025          beq.s     vsprintf_73
0800199A  6000 0046 3026          bra       vsprintf_77
                    3027   vsprintf_76:
0800199E  0C80 0000 3028          cmp.l     #120,D0
080019A2  0078      
080019A4  6704      3029          beq.s     vsprintf_73
080019A6  6000 003A 3030          bra       vsprintf_77
                    3031   vsprintf_73:
080019AA  2042      3032          move.l    D2,A0
080019AC  5282      3033          addq.l    #1,D2
080019AE  10BC 0030 3034          move.b    #48,(A0)
080019B2  5287      3035          addq.l    #1,D7
080019B4  206E 000C 3036          move.l    12(A6),A0
080019B8  1010      3037          move.b    (A0),D0
080019BA  4880      3038          ext.w     D0
080019BC  48C0      3039          ext.l     D0
080019BE  0C80 0000 3040          cmp.l     #120,D0
080019C2  0078      
080019C4  6712      3041          beq.s     vsprintf_79
080019C6  206E 000C 3042          move.l    12(A6),A0
080019CA  1010      3043          move.b    (A0),D0
080019CC  4880      3044          ext.w     D0
080019CE  48C0      3045          ext.l     D0
080019D0  0C80 0000 3046          cmp.l     #88,D0
080019D4  0058      
080019D6  660A      3047          bne.s     vsprintf_77
                    3048   vsprintf_79:
080019D8  2042      3049          move.l    D2,A0
080019DA  5282      3050          addq.l    #1,D2
080019DC  10BC 0078 3051          move.b    #120,(A0)
080019E0  5287      3052          addq.l    #1,D7
                    3053   vsprintf_77:
080019E2  2042      3054          move.l    D2,A0
080019E4  4210      3055          clr.b     (A0)
080019E6  206E 000C 3056          move.l    12(A6),A0
080019EA  1010      3057          move.b    (A0),D0
080019EC  4880      3058          ext.w     D0
080019EE  48C0      3059          ext.l     D0
080019F0  0C80 0000 3060          cmp.l     #105,D0
080019F4  0069      
080019F6  6700 0076 3061          beq       vsprintf_82
080019FA  6E42      3062          bgt.s     vsprintf_93
080019FC  0C80 0000 3063          cmp.l     #99,D0
08001A00  0063      
08001A02  6700 0084 3064          beq       vsprintf_96
08001A06  6E1C      3065          bgt.s     vsprintf_94
08001A08  0C80 0000 3066          cmp.l     #88,D0
08001A0C  0058      
08001A0E  6700 005E 3067          beq       vsprintf_82
08001A12  6E00 0184 3068          bgt       vsprintf_80
08001A16  0C80 0000 3069          cmp.l     #69,D0
08001A1A  0045      
08001A1C  6700 0050 3070          beq       vsprintf_82
08001A20  6000 0176 3071          bra       vsprintf_80
                    3072   vsprintf_94:
08001A24  0C80 0000 3073          cmp.l     #101,D0
08001A28  0065      
08001A2A  6700 0042 3074          beq       vsprintf_82
08001A2E  6E00 0168 3075          bgt       vsprintf_80
08001A32  0C80 0000 3076          cmp.l     #100,D0
08001A36  0064      
08001A38  6734      3077          beq.s     vsprintf_82
08001A3A  6000 015C 3078          bra       vsprintf_80
                    3079   vsprintf_93:
08001A3E  0C80 0000 3080          cmp.l     #117,D0
08001A42  0075      
08001A44  6728      3081          beq.s     vsprintf_82
08001A46  6E1A      3082          bgt.s     vsprintf_95
08001A48  0C80 0000 3083          cmp.l     #115,D0
08001A4C  0073      
08001A4E  6700 0038 3084          beq       vsprintf_96
08001A52  6E00 0144 3085          bgt       vsprintf_80
08001A56  0C80 0000 3086          cmp.l     #111,D0
08001A5A  006F      
08001A5C  6710      3087          beq.s     vsprintf_82
08001A5E  6000 0138 3088          bra       vsprintf_80
                    3089   vsprintf_95:
08001A62  0C80 0000 3090          cmp.l     #120,D0
08001A66  0078      
08001A68  6704      3091          beq.s     vsprintf_82
08001A6A  6000 012C 3092          bra       vsprintf_80
                    3093   vsprintf_82:
08001A6E  4A2E FFD2 3094          tst.b     -46(A6)
08001A72  6714      3095          beq.s     vsprintf_96
08001A74  4A2E FFCD 3096          tst.b     -51(A6)
08001A78  660E      3097          bne.s     vsprintf_96
08001A7A  200D      3098          move.l    A5,D0
08001A7C  9087      3099          sub.l     D7,D0
08001A7E  4884      3100          ext.w     D4
08001A80  48C4      3101          ext.l     D4
08001A82  9084      3102          sub.l     D4,D0
08001A84  2D40 FFFC 3103          move.l    D0,-4(A6)
                    3104   vsprintf_96:
08001A88  202E FFFC 3105          move.l    -4(A6),D0
08001A8C  0C80 0000 3106          cmp.l     #0,D0
08001A90  0000      
08001A92  6C04      3107          bge.s     vsprintf_98
08001A94  42AE FFFC 3108          clr.l     -4(A6)
                    3109   vsprintf_98:
08001A98  4A2E FFCD 3110          tst.b     -51(A6)
08001A9C  6600 0030 3111          bne       vsprintf_104
08001AA0  4884      3112          ext.w     D4
08001AA2  48C4      3113          ext.l     D4
08001AA4  2004      3114          move.l    D4,D0
08001AA6  D0AE FFFC 3115          add.l     -4(A6),D0
08001AAA  D087      3116          add.l     D7,D0
08001AAC  1D40 FFD1 3117          move.b    D0,-47(A6)
                    3118   vsprintf_102:
08001AB0  102E FFD1 3119          move.b    -47(A6),D0
08001AB4  4880      3120          ext.w     D0
08001AB6  48C0      3121          ext.l     D0
08001AB8  220D      3122          move.l    A5,D1
08001ABA  534D      3123          subq.w    #1,A5
08001ABC  B081      3124          cmp.l     D1,D0
08001ABE  6C0E      3125          bge.s     vsprintf_104
08001AC0  4878 0020 3126          pea       32
08001AC4  2F0A      3127          move.l    A2,-(A7)
08001AC6  4E93      3128          jsr       (A3)
08001AC8  504F      3129          addq.w    #8,A7
08001ACA  5286      3130          addq.l    #1,D6
08001ACC  60E2      3131          bra       vsprintf_102
                    3132   vsprintf_104:
08001ACE  41EE FFD4 3133          lea       -44(A6),A0
08001AD2  2408      3134          move.l    A0,D2
                    3135   vsprintf_105:
08001AD4  2042      3136          move.l    D2,A0
08001AD6  4A10      3137          tst.b     (A0)
08001AD8  6716      3138          beq.s     vsprintf_107
08001ADA  2042      3139          move.l    D2,A0
08001ADC  5282      3140          addq.l    #1,D2
08001ADE  1210      3141          move.b    (A0),D1
08001AE0  4881      3142          ext.w     D1
08001AE2  48C1      3143          ext.l     D1
08001AE4  2F01      3144          move.l    D1,-(A7)
08001AE6  2F0A      3145          move.l    A2,-(A7)
08001AE8  4E93      3146          jsr       (A3)
08001AEA  504F      3147          addq.w    #8,A7
08001AEC  5286      3148          addq.l    #1,D6
08001AEE  60E4      3149          bra       vsprintf_105
                    3150   vsprintf_107:
08001AF0  202E FFFC 3151          move.l    -4(A6),D0
08001AF4  1D40 FFD1 3152          move.b    D0,-47(A6)
                    3153   vsprintf_108:
08001AF8  102E FFD1 3154          move.b    -47(A6),D0
08001AFC  532E FFD1 3155          subq.b    #1,-47(A6)
08001B00  4A00      3156          tst.b     D0
08001B02  670E      3157          beq.s     vsprintf_110
08001B04  4878 0030 3158          pea       48
08001B08  2F0A      3159          move.l    A2,-(A7)
08001B0A  4E93      3160          jsr       (A3)
08001B0C  504F      3161          addq.w    #8,A7
08001B0E  5286      3162          addq.l    #1,D6
08001B10  60E6      3163          bra       vsprintf_108
                    3164   vsprintf_110:
08001B12  2043      3165          move.l    D3,A0
08001B14  4A10      3166          tst.b     (A0)
08001B16  6700 0048 3167          beq       vsprintf_113
08001B1A  206E 000C 3168          move.l    12(A6),A0
08001B1E  1010      3169          move.b    (A0),D0
08001B20  4880      3170          ext.w     D0
08001B22  48C0      3171          ext.l     D0
08001B24  0C80 0000 3172          cmp.l     #115,D0
08001B28  0073      
08001B2A  670C      3173          beq.s     vsprintf_116
08001B2C  6E18      3174          bgt.s     vsprintf_119
08001B2E  0C80 0000 3175          cmp.l     #99,D0
08001B32  0063      
08001B34  6702      3176          beq.s     vsprintf_116
08001B36  600E      3177          bra.s     vsprintf_119
                    3178   vsprintf_116:
08001B38  2005      3179          move.l    D5,D0
08001B3A  5385      3180          subq.l    #1,D5
08001B3C  0C80 0000 3181          cmp.l     #0,D0
08001B40  0000      
08001B42  6E02      3182          bgt.s     vsprintf_119
08001B44  6016      3183          bra.s     vsprintf_115
                    3184   vsprintf_119:
08001B46  2043      3185          move.l    D3,A0
08001B48  5283      3186          addq.l    #1,D3
08001B4A  1210      3187          move.b    (A0),D1
08001B4C  4881      3188          ext.w     D1
08001B4E  48C1      3189          ext.l     D1
08001B50  2F01      3190          move.l    D1,-(A7)
08001B52  2F0A      3191          move.l    A2,-(A7)
08001B54  4E93      3192          jsr       (A3)
08001B56  504F      3193          addq.w    #8,A7
08001B58  5286      3194          addq.l    #1,D6
08001B5A  6002      3195          bra.s     vsprintf_112
                    3196   vsprintf_115:
08001B5C  6002      3197          bra.s     vsprintf_113
                    3198   vsprintf_112:
08001B5E  60B2      3199          bra       vsprintf_110
                    3200   vsprintf_113:
08001B60  4A2E FFCD 3201          tst.b     -51(A6)
08001B64  6700 0030 3202          beq       vsprintf_125
08001B68  4884      3203          ext.w     D4
08001B6A  48C4      3204          ext.l     D4
08001B6C  2004      3205          move.l    D4,D0
08001B6E  D0AE FFFC 3206          add.l     -4(A6),D0
08001B72  D087      3207          add.l     D7,D0
08001B74  1D40 FFD1 3208          move.b    D0,-47(A6)
                    3209   vsprintf_123:
08001B78  102E FFD1 3210          move.b    -47(A6),D0
08001B7C  4880      3211          ext.w     D0
08001B7E  48C0      3212          ext.l     D0
08001B80  220D      3213          move.l    A5,D1
08001B82  534D      3214          subq.w    #1,A5
08001B84  B081      3215          cmp.l     D1,D0
08001B86  6C0E      3216          bge.s     vsprintf_125
08001B88  4878 0020 3217          pea       32
08001B8C  2F0A      3218          move.l    A2,-(A7)
08001B8E  4E93      3219          jsr       (A3)
08001B90  504F      3220          addq.w    #8,A7
08001B92  5386      3221          subq.l    #1,D6
08001B94  60E2      3222          bra       vsprintf_123
                    3223   vsprintf_125:
08001B96  6014      3224          bra.s     vsprintf_81
                    3225   vsprintf_80:
08001B98  206E 000C 3226          move.l    12(A6),A0
08001B9C  1210      3227          move.b    (A0),D1
08001B9E  4881      3228          ext.w     D1
08001BA0  48C1      3229          ext.l     D1
08001BA2  2F01      3230          move.l    D1,-(A7)
08001BA4  2F0A      3231          move.l    A2,-(A7)
08001BA6  4E93      3232          jsr       (A3)
08001BA8  504F      3233          addq.w    #8,A7
08001BAA  5286      3234          addq.l    #1,D6
                    3235   vsprintf_81:
08001BAC  52AE 000C 3236          addq.l    #1,12(A6)
                    3237   vsprintf_2:
08001BB0  6000 F9D6 3238          bra       vsprintf_1
                    3239   vsprintf_3:
08001BB4  4A92      3240          tst.l     (A2)
08001BB6  6710      3241          beq.s     vsprintf_126
08001BB8  4201      3242          clr.b     D1
08001BBA  C2BC 0000 3243          and.l     #255,D1
08001BBE  00FF      
08001BC0  2F01      3244          move.l    D1,-(A7)
08001BC2  2F0A      3245          move.l    A2,-(A7)
08001BC4  4E93      3246          jsr       (A3)
08001BC6  504F      3247          addq.w    #8,A7
                    3248   vsprintf_126:
08001BC8  2006      3249          move.l    D6,D0
08001BCA  4CDF 3CFC 3250          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08001BCE  4E5E      3251          unlk      A6
08001BD0  4E75      3252          rts
                    3253   _putch:
08001BD2  4E56 0000 3254          link      A6,#0
08001BD6  48E7 2000 3255          movem.l   D2,-(A7)
08001BDA  242E 0008 3256          move.l    8(A6),D2
08001BDE  0C82 0000 3257          cmp.l     #10,D2
08001BE2  000A      
08001BE4  660A      3258          bne.s     putch_1
08001BE6  4878 000D 3259          pea       13
08001BEA  6100 E57A 3260          bsr       __putch
08001BEE  584F      3261          addq.w    #4,A7
                    3262   putch_1:
08001BF0  2F02      3263          move.l    D2,-(A7)
08001BF2  6100 E572 3264          bsr       __putch
08001BF6  584F      3265          addq.w    #4,A7
08001BF8  2002      3266          move.l    D2,D0
08001BFA  4CDF 0004 3267          movem.l   (A7)+,D2
08001BFE  4E5E      3268          unlk      A6
08001C00  4E75      3269          rts
                    3270   _getch:
08001C02  48E7 2000 3271          movem.l   D2,-(A7)
08001C06  2439 0800 3272          move.l    __ungetbuf,D2
08001C0A  200A      
08001C0C  2039 0800 3273          move.l    __ungetbuf,D0
08001C10  200A      
08001C12  0C80 FFFF 3274          cmp.l     #-1,D0
08001C16  FFFF      
08001C18  670C      3275          beq.s     getch_1
08001C1A  23FC FFFF 3276          move.l    #-1,__ungetbuf
08001C1E  FFFF 0800 
08001C22  200A      
08001C24  6010      3277          bra.s     getch_3
                    3278   getch_1:
08001C26  6100 E56C 3279          bsr       __getch
08001C2A  2400      3280          move.l    D0,D2
08001C2C  0C80 0000 3281          cmp.l     #13,D0
08001C30  000D      
08001C32  6602      3282          bne.s     getch_3
08001C34  740A      3283          moveq     #10,D2
                    3284   getch_3:
08001C36  2002      3285          move.l    D2,D0
08001C38  4CDF 0004 3286          movem.l   (A7)+,D2
08001C3C  4E75      3287          rts
                    3288   @itoa_convert:
08001C3E  4E56 0000 3289          link      A6,#0
08001C42  48E7 3C00 3290          movem.l   D2/D3/D4/D5,-(A7)
08001C46  242E 0008 3291          move.l    8(A6),D2
08001C4A  262E 0010 3292          move.l    16(A6),D3
08001C4E  2A2E 000C 3293          move.l    12(A6),D5
08001C52  2F05      3294          move.l    D5,-(A7)
08001C54  2F03      3295          move.l    D3,-(A7)
08001C56  6100 0160 3296          bsr       ULDIV
08001C5A  202F 0004 3297          move.l    4(A7),D0
08001C5E  504F      3298          addq.w    #8,A7
08001C60  2800      3299          move.l    D0,D4
08001C62  BA83      3300          cmp.l     D3,D5
08001C64  651A      3301          blo.s     @itoa_convert_1
08001C66  2F03      3302          move.l    D3,-(A7)
08001C68  2F05      3303          move.l    D5,-(A7)
08001C6A  2F03      3304          move.l    D3,-(A7)
08001C6C  6100 014A 3305          bsr       ULDIV
08001C70  2217      3306          move.l    (A7),D1
08001C72  504F      3307          addq.w    #8,A7
08001C74  2F01      3308          move.l    D1,-(A7)
08001C76  2F02      3309          move.l    D2,-(A7)
08001C78  61C4      3310          bsr       @itoa_convert
08001C7A  DEFC 000C 3311          add.w     #12,A7
08001C7E  2400      3312          move.l    D0,D2
                    3313   @itoa_convert_1:
08001C80  0C84 0000 3314          cmp.l     #9,D4
08001C84  0009      
08001C86  6E0A      3315          bgt.s     @itoa_convert_3
08001C88  2004      3316          move.l    D4,D0
08001C8A  0680 0000 3317          add.l     #48,D0
08001C8E  0030      
08001C90  600E      3318          bra.s     @itoa_convert_4
                    3319   @itoa_convert_3:
08001C92  2004      3320          move.l    D4,D0
08001C94  0680 0000 3321          add.l     #97,D0
08001C98  0061      
08001C9A  0480 0000 3322          sub.l     #10,D0
08001C9E  000A      
                    3323   @itoa_convert_4:
08001CA0  2042      3324          move.l    D2,A0
08001CA2  1080      3325          move.b    D0,(A0)
08001CA4  2002      3326          move.l    D2,D0
08001CA6  5280      3327          addq.l    #1,D0
08001CA8  4CDF 003C 3328          movem.l   (A7)+,D2/D3/D4/D5
08001CAC  4E5E      3329          unlk      A6
08001CAE  4E75      3330          rts
                    3331   _ltoa:
08001CB0  4E56 0000 3332          link      A6,#0
08001CB4  48E7 3C00 3333          movem.l   D2/D3/D4/D5,-(A7)
08001CB8  242E 0008 3334          move.l    8(A6),D2
08001CBC  262E 000C 3335          move.l    12(A6),D3
08001CC0  2A2E 0010 3336          move.l    16(A6),D5
08001CC4  2803      3337          move.l    D3,D4
08001CC6  0C85 0000 3338          cmp.l     #2,D5
08001CCA  0002      
08001CCC  6D08      3339          blt.s     ltoa_3
08001CCE  0C85 0000 3340          cmp.l     #36,D5
08001CD2  0024      
08001CD4  6F06      3341          ble.s     ltoa_1
                    3342   ltoa_3:
08001CD6  2003      3343          move.l    D3,D0
08001CD8  6000 0052 3344          bra       ltoa_4
                    3345   ltoa_1:
08001CDC  0C85 0000 3346          cmp.l     #10,D5
08001CE0  000A      
08001CE2  6600 0032 3347          bne       ltoa_5
08001CE6  0C82 0000 3348          cmp.l     #0,D2
08001CEA  0000      
08001CEC  6C28      3349          bge.s     ltoa_5
08001CEE  2002      3350          move.l    D2,D0
08001CF0  4480      3351          neg.l     D0
08001CF2  2400      3352          move.l    D0,D2
08001CF4  0C82 0000 3353          cmp.l     #0,D2
08001CF8  0000      
08001CFA  6C12      3354          bge.s     ltoa_7
08001CFC  4879 0800 3355          pea       @itoa_1
08001D00  211E      
08001D02  2F03      3356          move.l    D3,-(A7)
08001D04  6100 00A2 3357          bsr       _strcpy
08001D08  504F      3358          addq.w    #8,A7
08001D0A  2003      3359          move.l    D3,D0
08001D0C  601E      3360          bra.s     ltoa_4
                    3361   ltoa_7:
08001D0E  2044      3362          move.l    D4,A0
08001D10  5284      3363          addq.l    #1,D4
08001D12  10BC 002D 3364          move.b    #45,(A0)
                    3365   ltoa_5:
08001D16  2F05      3366          move.l    D5,-(A7)
08001D18  2F02      3367          move.l    D2,-(A7)
08001D1A  2F04      3368          move.l    D4,-(A7)
08001D1C  6100 FF20 3369          bsr       @itoa_convert
08001D20  DEFC 000C 3370          add.w     #12,A7
08001D24  2800      3371          move.l    D0,D4
08001D26  2044      3372          move.l    D4,A0
08001D28  4210      3373          clr.b     (A0)
08001D2A  2003      3374          move.l    D3,D0
                    3375   ltoa_4:
08001D2C  4CDF 003C 3376          movem.l   (A7)+,D2/D3/D4/D5
08001D30  4E5E      3377          unlk      A6
08001D32  4E75      3378          rts
                    3379   _ultoa:
08001D34  4E56 0000 3380          link      A6,#0
08001D38  48E7 3800 3381          movem.l   D2/D3/D4,-(A7)
08001D3C  262E 0010 3382          move.l    16(A6),D3
08001D40  282E 000C 3383          move.l    12(A6),D4
08001D44  2404      3384          move.l    D4,D2
08001D46  0C83 0000 3385          cmp.l     #2,D3
08001D4A  0002      
08001D4C  6D08      3386          blt.s     ultoa_3
08001D4E  0C83 0000 3387          cmp.l     #36,D3
08001D52  0024      
08001D54  6F04      3388          ble.s     ultoa_1
                    3389   ultoa_3:
08001D56  2004      3390          move.l    D4,D0
08001D58  6018      3391          bra.s     ultoa_4
                    3392   ultoa_1:
08001D5A  2F03      3393          move.l    D3,-(A7)
08001D5C  2F2E 0008 3394          move.l    8(A6),-(A7)
08001D60  2F02      3395          move.l    D2,-(A7)
08001D62  6100 FEDA 3396          bsr       @itoa_convert
08001D66  DEFC 000C 3397          add.w     #12,A7
08001D6A  2400      3398          move.l    D0,D2
08001D6C  2042      3399          move.l    D2,A0
08001D6E  4210      3400          clr.b     (A0)
08001D70  2004      3401          move.l    D4,D0
                    3402   ultoa_4:
08001D72  4CDF 001C 3403          movem.l   (A7)+,D2/D3/D4
08001D76  4E5E      3404          unlk      A6
08001D78  4E75      3405          rts
                    3406   _itoa:
08001D7A  4E56 0000 3407          link      A6,#0
08001D7E  2F2E 0010 3408          move.l    16(A6),-(A7)
08001D82  2F2E 000C 3409          move.l    12(A6),-(A7)
08001D86  2F2E 0008 3410          move.l    8(A6),-(A7)
08001D8A  6100 FF24 3411          bsr       _ltoa
08001D8E  DEFC 000C 3412          add.w     #12,A7
08001D92  4E5E      3413          unlk      A6
08001D94  4E75      3414          rts
                    3415   _strlen:
08001D96  206F 0004 3416          move.l    (4,A7),A0
08001D9A  2248      3417          move.l    A0,A1
                    3418   strlen_1:
08001D9C  4A19      3419          tst.b     (A1)+
08001D9E  66FC      3420          bne       strlen_1
08001DA0  2009      3421          move.l    A1,D0
08001DA2  9088      3422          sub.l     A0,D0
08001DA4  5380      3423          subq.l    #1,D0
08001DA6  4E75      3424          rts
                    3425   _strcpy:
08001DA8  206F 0004 3426          move.l    (4,A7),A0
08001DAC  226F 0008 3427          move.l    (8,A7),A1
08001DB0  2008      3428          move.l    A0,D0
                    3429   strcpy_1:
08001DB2  10D9      3430          move.b    (A1)+,(A0)+
08001DB4  66FC      3431          bne       strcpy_1
08001DB6  4E75      3432          rts
                    3433   ULDIV:
08001DB8  4E56 0000 3434          link    A6,#0
08001DBC  48E7 C000 3435          movem.l D0/D1,-(A7)
08001DC0  222E 0008 3436          move.l  8(A6),D1
08001DC4  202E 000C 3437          move.l  12(A6),D0
08001DC8  6036      3438          bra.s   ldiv_3
                    3439   LDIV:
08001DCA  4E56 0000 3440          link    A6,#0
08001DCE  48E7 C000 3441          movem.l D0/D1,-(A7)
08001DD2  222E 0008 3442          move.l  8(A6),D1
08001DD6  202E 000C 3443          move.l  12(A6),D0
08001DDA  4A80      3444          tst.l   D0
08001DDC  6A0E      3445          bpl.s   ldiv_1
08001DDE  4480      3446          neg.l   D0
08001DE0  4A81      3447          tst.l   D1
08001DE2  6A14      3448          bpl.s   ldiv_2
08001DE4  4481      3449          neg.l   D1
08001DE6  612A      3450          bsr.s   dodiv
08001DE8  4481      3451          neg.l   D1
08001DEA  6016      3452          bra.s   ldiv_4
                    3453   ldiv_1:
08001DEC  4A81      3454          tst.l   D1
08001DEE  6A10      3455          bpl.s   ldiv_3
08001DF0  4481      3456          neg.l   D1
08001DF2  611E      3457          bsr.s   dodiv
08001DF4  4480      3458          neg.l   D0
08001DF6  600A      3459          bra.s   ldiv_4
                    3460   ldiv_2:
08001DF8  6118      3461          bsr.s   dodiv
08001DFA  4480      3462          neg.l   D0
08001DFC  4481      3463          neg.l   D1
08001DFE  6002      3464          bra.s   ldiv_4
                    3465   ldiv_3:
08001E00  6110      3466          bsr.s   dodiv
                    3467   ldiv_4:
08001E02  2D40 0008 3468          move.l  D0,8(A6)
08001E06  2D41 000C 3469          move.l  D1,12(A6)
08001E0A  4CDF 0003 3470          movem.l (A7)+,D0/D1
08001E0E  4E5E      3471          unlk    A6
08001E10  4E75      3472          rts
                    3473   dodiv:
08001E12  0C81 0000 3474          cmpi.l  #$FFFF,D1
08001E16  FFFF      
08001E18  6236      3475          bhi.s   dodiv_2
08001E1A  0C80 0000 3476          cmpi.l  #$FFFF,D0
08001E1E  FFFF      
08001E20  6210      3477          bhi.s   dodiv_1
08001E22  80C1      3478          divu    D1,D0
08001E24  2200      3479          move.l  D0,D1
08001E26  4241      3480          clr.w   D1
08001E28  4841      3481          swap    D1
08001E2A  0280 0000 3482          andi.l  #$FFFF,D0
08001E2E  FFFF      
08001E30  4E75      3483          rts
                    3484   dodiv_1:
08001E32  48A7 A000 3485          movem.w D0/D2,-(A7)
08001E36  4240      3486          clr.w   D0
08001E38  4840      3487          swap    D0
08001E3A  80C1      3488          divu    D1,D0
08001E3C  3400      3489          move.w  D0,D2
08001E3E  301F      3490          move.w  (A7)+,D0
08001E40  80C1      3491          divu    D1,D0
08001E42  4840      3492          swap    D0
08001E44  4281      3493          clr.l   D1
08001E46  3200      3494          move.w  D0,D1
08001E48  3002      3495          move.w  D2,D0
08001E4A  4840      3496          swap    D0
08001E4C  341F      3497          move.w  (A7)+,D2
08001E4E  4E75      3498          rts
                    3499   dodiv_2:
08001E50  48E7 3800 3500          movem.l D2/D3/D4,-(A7)
08001E54  2401      3501          move.l  D1,D2
08001E56  4242      3502          clr.w   D2
08001E58  4842      3503          swap    D2
08001E5A  5282      3504          addq.l  #1,D2
08001E5C  2600      3505          move.l  D0,D3
08001E5E  2801      3506          move.l  D1,D4
08001E60  2202      3507          move.l  D2,D1
08001E62  61CE      3508          bsr.s   dodiv_1
08001E64  2204      3509          move.l  D4,D1
08001E66  82C2      3510          divu    D2,D1
08001E68  80C1      3511          divu    D1,D0
08001E6A  0280 0000 3512          andi.l  #$FFFF,D0
08001E6E  FFFF      
                    3513   dodiv_3:
08001E70  2204      3514          move.l  D4,D1
08001E72  2404      3515          move.l  D4,D2
08001E74  4842      3516          swap    D2
08001E76  C2C0      3517          mulu    D0,D1
08001E78  C4C0      3518          mulu    D0,D2
08001E7A  4842      3519          swap    D2
08001E7C  D282      3520          add.l   D2,D1
08001E7E  9283      3521          sub.l   D3,D1
08001E80  620A      3522          bhi.s   dodiv_4
08001E82  4481      3523          neg.l   D1
08001E84  B881      3524          cmp.l   D1,D4
08001E86  6208      3525          bhi.s   dodiv_5
08001E88  5280      3526          addq.l  #1,D0
08001E8A  60E4      3527          bra.s   dodiv_3
                    3528   dodiv_4:
08001E8C  5380      3529          subq.l  #1,D0
08001E8E  60E0      3530          bra.s   dodiv_3
                    3531   dodiv_5:
08001E90  4CDF 001C 3532          movem.l (A7)+,D2/D3/D4
08001E94  4E75      3533          rts
                    3534          section   const
08001E96            3535                   align
                    3536   
                    3537   
                    3538   @m68kus~1_1:
08001E96  0A00      3539          dc.b      10,0
                    3540   @m68kus~1_2:
08001E98  7C3D 3D3D 3541          dc.b      124,61,61,61,61,61,61,61,61,61,61,77,69,65,83
08001E9C  3D3D 3D3D 
08001EA0  3D3D 3D4D 
08001EA4  4541 53   
08001EA7  5552 494E 3542          dc.b      85,82,73,78,71,61,61,61,61,61,61,61,61,61,61
08001EAB  473D 3D3D 
08001EAF  3D3D 3D3D 
08001EB3  3D3D 3D   
08001EB6  7C0A 00   3543          dc.b      124,10,0
                    3544   @m68kus~1_3:
08001EBA  7C3D 3D3D 3545          dc.b      124,61,61,61,61,61,61,61,61,61,61,61,61,61,61
08001EBE  3D3D 3D3D 
08001EC2  3D3D 3D3D 
08001EC6  3D3D 3D   
08001EC9  3D3D 3D3D 3546          dc.b      61,61,61,61,61,61,61,61,61,61,61,61,61,124,10
08001ECD  3D3D 3D3D 
08001ED1  3D3D 3D3D 
08001ED5  3D7C 0A   
08001ED8  00        3547          dc.b      0
                    3548   @canbus~1_1:
08001EDA  5661 6C75 3549          dc.b      86,97,108,117,101,32,111,102,32,84,104,101,114
08001EDE  6520 6F66 
08001EE2  2054 6865 
08001EE6  72        
08001EE7  6D69 7374 3550          dc.b      109,105,115,116,111,114,32,40,67,65,78,48,41
08001EEB  6F72 2028 
08001EEF  4341 4E30 
08001EF3  29        
08001EF4  3A20 2564 3551          dc.b      58,32,37,100,10,0
08001EF8  0A00      
                    3552   @canbus~1_2:
08001EFA  5661 6C75 3553          dc.b      86,97,108,117,101,32,111,102,32,80,111,116,101
08001EFE  6520 6F66 
08001F02  2050 6F74 
08001F06  65        
08001F07  6E74 696F 3554          dc.b      110,116,105,111,109,101,116,101,114,32,40,67
08001F0B  6D65 7465 
08001F0F  7220 2843 
08001F13  414E 3029 3555          dc.b      65,78,48,41,58,32,37,100,10,0
08001F17  3A20 2564 
08001F1B  0A00      
                    3556   @canbus~1_3:
08001F1E  5661 6C75 3557          dc.b      86,97,108,117,101,32,111,102,32,80,104,111,116
08001F22  6520 6F66 
08001F26  2050 686F 
08001F2A  74        
08001F2B  6F2D 7265 3558          dc.b      111,45,114,101,115,105,115,116,101,114,32,40
08001F2F  7369 7374 
08001F33  6572 2028 
08001F37  4341 4E30 3559          dc.b      67,65,78,48,41,58,32,37,100,10,0
08001F3B  293A 2025 
08001F3F  640A 00   
                    3560   @canbus~1_4:
08001F42  5661 6C75 3561          dc.b      86,97,108,117,101,32,111,102,32,83,87,91,55
08001F46  6520 6F66 
08001F4A  2053 575B 
08001F4E  37        
08001F4F  2D30 5D20 3562          dc.b      45,48,93,32,40,67,65,78,48,41,58,32,0
08001F53  2843 414E 
08001F57  3029 3A20 
08001F5B  00        
                    3563   @canbus~1_5:
08001F5C  3000      3564          dc.b      48,0
                    3565   @canbus~1_6:
08001F5E  3100      3566          dc.b      49,0
                    3567   @canbus~1_7:
08001F60  0A00      3568          dc.b      10,0
                    3569   @canbus~1_8:
08001F62  4552 524F 3570          dc.b      69,82,82,79,82,0
08001F66  5200      
                    3571   @canbus~1_9:
08001F68  5661 6C75 3572          dc.b      86,97,108,117,101,32,111,102,32,84,104,101,114
08001F6C  6520 6F66 
08001F70  2054 6865 
08001F74  72        
08001F75  6D69 7374 3573          dc.b      109,105,115,116,111,114,32,40,67,65,78,49,41
08001F79  6F72 2028 
08001F7D  4341 4E31 
08001F81  29        
08001F82  3A20 2564 3574          dc.b      58,32,37,100,10,0
08001F86  0A00      
                    3575   @canbus~1_10:
08001F88  5661 6C75 3576          dc.b      86,97,108,117,101,32,111,102,32,80,111,116,101
08001F8C  6520 6F66 
08001F90  2050 6F74 
08001F94  65        
08001F95  6E74 696F 3577          dc.b      110,116,105,111,109,101,116,101,114,32,40,67
08001F99  6D65 7465 
08001F9D  7220 2843 
08001FA1  414E 3129 3578          dc.b      65,78,49,41,58,32,37,100,10,0
08001FA5  3A20 2564 
08001FA9  0A00      
                    3579   @canbus~1_11:
08001FAC  5661 6C75 3580          dc.b      86,97,108,117,101,32,111,102,32,80,104,111,116
08001FB0  6520 6F66 
08001FB4  2050 686F 
08001FB8  74        
08001FB9  6F2D 7265 3581          dc.b      111,45,114,101,115,105,115,116,101,114,32,40
08001FBD  7369 7374 
08001FC1  6572 2028 
08001FC5  4341 4E31 3582          dc.b      67,65,78,49,41,58,32,37,100,10,0
08001FC9  293A 2025 
08001FCD  640A 00   
                    3583   @canbus~1_12:
08001FD0  5661 6C75 3584          dc.b      86,97,108,117,101,32,111,102,32,83,87,91,55
08001FD4  6520 6F66 
08001FD8  2053 575B 
08001FDC  37        
08001FDD  2D30 5D20 3585          dc.b      45,48,93,32,40,67,65,78,49,41,58,32,0
08001FE1  2843 414E 
08001FE5  3129 3A20 
08001FE9  00        
                    3586   @canbus~1_13:
08001FEA  0D0A 0D0A 3587          dc.b      13,10,13,10,45,45,45,45,32,67,65,78,66,85,83
08001FEE  2D2D 2D2D 
08001FF2  2043 414E 
08001FF6  4255 53   
08001FF9  2054 6573 3588          dc.b      32,84,101,115,116,32,45,45,45,45,13,10,0
08001FFD  7420 2D2D 
08002001  2D2D 0D0A 
08002005  00        
                    3589   @canbus~1_14:
08002006  0D0A 00   3590          dc.b      13,10,0
                    3591          section   data
0800200A            3592                   align
                    3593   
                    3594   *********************************************************************************************************************************************************
                    3595   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    3596   ********************************************************************************************************************************************************
                    3597   
          0800 200A 3598   DataStart       equ       *
0800200A            3599   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
0800200E            3600   __allocp:       ds.l      1                    start of free memory block list
08002012            3601   __heap:         ds.l      1                    begin of free memory
                    3602   
                    3603   
                    3604   @vsscanf_bufx:
08002016  0800 2148 3605          dc.l      @vsscanf_buf
                    3606   @vsscanf_1:
0800201A  0A00      3607          dc.b      10,0
                    3608   __ctype:
0800201C  0040 4040 3609          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08002020  4040 4040 
08002024  4040 5050 
08002028  5050 50   
0800202B  4040 4040 3610          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
0800202F  4040 4040 
08002033  4040 4040 
08002037  4040 40   
0800203A  4040 40D0 3611          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
0800203E  A0A0 A0A0 
08002042  A0A0 A0A0 
08002046  A0A0 A0A0 3612          dc.b      160,160,160,160,160,160,160,140,140,140,140
0800204A  A0A0 A08C 
0800204E  8C8C 8C   
08002051  8C8C 8C8C 3613          dc.b      140,140,140,140,140,140,160,160,160,160,160
08002055  8C8C A0A0 
08002059  A0A0 A0   
0800205C  A0A0 8A8A 3614          dc.b      160,160,138,138,138,138,138,138,130,130,130
08002060  8A8A 8A8A 
08002064  8282 82   
08002067  8282 8282 3615          dc.b      130,130,130,130,130,130,130,130,130,130,130
0800206B  8282 8282 
0800206F  8282 82   
08002072  8282 8282 3616          dc.b      130,130,130,130,130,130,160,160,160,160,160
08002076  8282 A0A0 
0800207A  A0A0 A0   
0800207D  A089 8989 3617          dc.b      160,137,137,137,137,137,137,129,129,129,129
08002081  8989 8981 
08002085  8181 81   
08002088  8181 8181 3618          dc.b      129,129,129,129,129,129,129,129,129,129,129
0800208C  8181 8181 
08002090  8181 81   
08002093  8181 8181 3619          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
08002097  81A0 A0A0 
0800209B  A040 0000 
0800209F  00        
080020A0  0000 0000 3620          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080020A4  0000 0000 
080020A8  0000 0000 
080020AC  0000 0000 
080020B0  0000 0000 
080020B4  0000      
080020B6  0000 0000 3621          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080020BA  0000 0000 
080020BE  0000 0000 
080020C2  0000 0000 
080020C6  0000 0000 
080020CA  0000      
080020CC  0000 0000 3622          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080020D0  0000 0000 
080020D4  0000 0000 
080020D8  0000 0000 
080020DC  0000 0000 
080020E0  0000      
080020E2  0000 0000 3623          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080020E6  0000 0000 
080020EA  0000 0000 
080020EE  0000 0000 
080020F2  0000 0000 
080020F6  0000      
080020F8  0000 0000 3624          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
080020FC  0000 0000 
08002100  0000 0000 
08002104  0000 0000 
08002108  0000 0000 
0800210C  0000      
0800210E  0000 0000 3625          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08002112  0000 0000 
08002116  0000 0000 
0800211A  0000 00   
                    3626   @itoa_1:
0800211E  2D32 3134 3627          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08002122  3734 3833 
08002126  3634 3800 
                    3628          section   bss
0800212A            3629                   align
                    3630   
          0800 212A 3631   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0120 3632   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    3633   
                    3634   *********************************************************************************************************
                    3635   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    3636   *********************************************************************************************************
          0800 212A 3637   BssStart       equ       *
                    3638   
                    3639   _i:
0800212A            3640          ds.b      4
                    3641   _x:
0800212E            3642          ds.b      4
                    3643   _y:
08002132            3644          ds.b      4
                    3645   _z:
08002136            3646          ds.b      4
                    3647   _PortA_Count:
0800213A            3648          ds.b      4
                    3649   _Timer1Count:
0800213E            3650          ds.b      1
                    3651   _Timer2Count:
08002140            3652          ds.b      1
                    3653   _Timer3Count:
08002142            3654          ds.b      1
                    3655   _Timer4Count:
08002144            3656          ds.b      1
                    3657   _Timer8ISRCount:
08002146            3658          ds.b      1
                    3659   @vsscanf_buf:
08002148            3660          ds.b      80
                    3661          section   heap
08002198            3662                  align
                    3663   
          0800 2198 3664   BssEnd         equ       *
          0000 006E 3665   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    3666   
                    3667   *********************************************************************************************************
                    3668   * Section for Heap
                    3669   *********************************************************************************************************
                    3670   
          0800 2198 3671   heap           equ       *
08002198            3672                  align
          0800 0000

Assembly errors: 0
