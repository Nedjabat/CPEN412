680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 12 Apr 2023      Time: 09:44:46          Source: C:\M68KV6.0 - 800BY480\PROGRAMS\ASN6BB.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  1ED2      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  006C      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  1DB2      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  1DB6      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  1F3E 0800 
08000034  1DBA      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  0288      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\CPEN412\ASN6\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; #include "Canbus-Controller.h"
                      49   ; //IMPORTANT
                      50   ; //
                      51   ; // Uncomment one of the two #defines below
                      52   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      53   ; // 0B000000 for running programs from dram
                      54   ; //
                      55   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      56   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      57   ; // building
                      58   ; //
                      59   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      60   ; // is based around Dram so #define accordingly before building
                      61   ; //#define StartOfExceptionVectorTable 0x08030000
                      62   ; #define StartOfExceptionVectorTable 0x0B000000
                      63   ; /**********************************************************************************************
                      64   ; **	Parallel port addresses
                      65   ; **********************************************************************************************/
                      66   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      67   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      68   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      69   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      70   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      71   ; /*********************************************************************************************
                      72   ; **	Hex 7 seg displays port addresses
                      73   ; *********************************************************************************************/
                      74   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      75   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      76   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      77   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      78   ; /**********************************************************************************************
                      79   ; **	LCD display port addresses
                      80   ; **********************************************************************************************/
                      81   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      82   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      83   ; /********************************************************************************************
                      84   ; **	Timer Port addresses
                      85   ; *********************************************************************************************/
                      86   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      87   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      88   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      89   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      90   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      91   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      92   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                      93   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                      94   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                      95   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                      96   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                      97   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                      98   ; /*********************************************************************************************
                      99   ; **	RS232 port addresses
                     100   ; *********************************************************************************************/
                     101   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     102   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     103   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     104   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     105   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     106   ; /*********************************************************************************************
                     107   ; **	PIA 1 and 2 port addresses
                     108   ; *********************************************************************************************/
                     109   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     110   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     111   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     112   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     113   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     114   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     115   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     116   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     117   ; /*******************************************************************************************
                     118   ; ** ADC Types
                     119   ; *******************************************************************************************/
                     120   ; #define TEMP 0
                     121   ; #define POTENTIAL 1
                     122   ; #define LIGHT 2
                     123   ; /*********************************************************************************************************************************
                     124   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     125   ; (( it's a limitation of the compiler
                     126   ; (( YOU HAVE BEEN WARNED
                     127   ; *********************************************************************************************************************************/
                     128   ; unsigned int i, x, y, z, PortA_Count;
                     129   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     130   ; /*******************************************************************************************
                     131   ; ** Function Prototypes
                     132   ; *******************************************************************************************/
                     133   ; void Wait1ms(void);
                     134   ; void Wait3ms(void);
                     135   ; void Init_LCD(void) ;
                     136   ; void LCDOutchar(int c);
                     137   ; void LCDOutMess(char *theMessage);
                     138   ; void LCDClearln(void);
                     139   ; void LCDline1Message(char *theMessage);
                     140   ; void LCDline2Message(char *theMessage);
                     141   ; int sprintf(char *out, const char *format, ...) ;
                     142   ; /*****************************************************************************************
                     143   ; **	Interrupt service routine for Timers
                     144   ; **
                     145   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     146   ; **  out which timer is producing the interrupt
                     147   ; **
                     148   ; *****************************************************************************************/
                     149   ; void Timer_ISR()
                     150   ; {
                     151   _Timer_ISR:
                     152   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  153          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  154          cmp.b     #1,D0
08000048  661A       155          bne.s     Timer_ISR_1
                     156   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  157          move.b    #3,4194354
0800004E  0040 0032 
                     158   ; PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
08000052  1039 0800  159          move.b    _Timer1Count.L,D0
08000056  1EE6      
08000058  5239 0800  160          addq.b    #1,_Timer1Count.L
0800005C  1EE6      
0800005E  13C0 0040  161          move.b    D0,4194304
08000062  0000      
                     162   Timer_ISR_1:
                     163   ; }
                     164   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000064  1039 0040  165          move.b    4194358,D0
08000068  0036      
0800006A  0C00 0001  166          cmp.b     #1,D0
0800006E  661A       167          bne.s     Timer_ISR_3
                     168   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000070  13FC 0003  169          move.b    #3,4194358
08000074  0040 0036 
                     170   ; PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
08000078  1039 0800  171          move.b    _Timer2Count.L,D0
0800007C  1EE8      
0800007E  5239 0800  172          addq.b    #1,_Timer2Count.L
08000082  1EE8      
08000084  13C0 0040  173          move.b    D0,4194308
08000088  0004      
                     174   Timer_ISR_3:
                     175   ; }
                     176   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
0800008A  1039 0040  177          move.b    4194362,D0
0800008E  003A      
08000090  0C00 0001  178          cmp.b     #1,D0
08000094  661A       179          bne.s     Timer_ISR_5
                     180   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000096  13FC 0003  181          move.b    #3,4194362
0800009A  0040 003A 
                     182   ; HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
0800009E  1039 0800  183          move.b    _Timer3Count.L,D0
080000A2  1EEA      
080000A4  5239 0800  184          addq.b    #1,_Timer3Count.L
080000A8  1EEA      
080000AA  13C0 0040  185          move.b    D0,4194320
080000AE  0010      
                     186   Timer_ISR_5:
                     187   ; }
                     188   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
080000B0  1039 0040  189          move.b    4194366,D0
080000B4  003E      
080000B6  0C00 0001  190          cmp.b     #1,D0
080000BA  661A       191          bne.s     Timer_ISR_7
                     192   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
080000BC  13FC 0003  193          move.b    #3,4194366
080000C0  0040 003E 
                     194   ; HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
080000C4  1039 0800  195          move.b    _Timer4Count.L,D0
080000C8  1EEC      
080000CA  5239 0800  196          addq.b    #1,_Timer4Count.L
080000CE  1EEC      
080000D0  13C0 0040  197          move.b    D0,4194322
080000D4  0012      
                     198   Timer_ISR_7:
080000D6  4E75       199          rts
                     200   ; }
                     201   ; }
                     202   ; /*****************************************************************************************
                     203   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     204   ; **  Add your code here to poll Status register and clear interrupt
                     205   ; *****************************************************************************************/
                     206   ; void ACIA_ISR()
                     207   ; {}
                     208   _ACIA_ISR:
080000D8  4E75       209          rts
                     210   ; /***************************************************************************************
                     211   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     212   ; **  Add your code here to poll Status register and clear interrupt
                     213   ; *****************************************************************************************/
                     214   ; void PIA_ISR()
                     215   ; {}
                     216   _PIA_ISR:
080000DA  4E75       217          rts
                     218   ; /***********************************************************************************
                     219   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     220   ; ************************************************************************************/
                     221   ; void Key2PressISR()
                     222   ; {}
                     223   _Key2PressISR:
080000DC  4E75       224          rts
                     225   ; /***********************************************************************************
                     226   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     227   ; ************************************************************************************/
                     228   ; void Key1PressISR()
                     229   ; {}
                     230   _Key1PressISR:
080000DE  4E75       231          rts
                     232   ; /************************************************************************************
                     233   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     234   ; ************************************************************************************/
                     235   ; void Wait1ms(void)
                     236   ; {
                     237   _Wait1ms:
080000E0  2F02       238          move.l    D2,-(A7)
                     239   ; int  i ;
                     240   ; for(i = 0; i < 1000; i ++)
080000E2  4282       241          clr.l     D2
                     242   Wait1ms_1:
080000E4  0C82 0000  243          cmp.l     #1000,D2
080000E8  03E8      
080000EA  6C04       244          bge.s     Wait1ms_3
080000EC  5282       245          addq.l    #1,D2
080000EE  60F4       246          bra       Wait1ms_1
                     247   Wait1ms_3:
080000F0  241F       248          move.l    (A7)+,D2
080000F2  4E75       249          rts
                     250   ; ;
                     251   ; }
                     252   ; /************************************************************************************
                     253   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     254   ; **************************************************************************************/
                     255   ; void Wait3ms(void)
                     256   ; {
                     257   _Wait3ms:
080000F4  2F02       258          move.l    D2,-(A7)
                     259   ; int i ;
                     260   ; for(i = 0; i < 3; i++)
080000F6  4282       261          clr.l     D2
                     262   Wait3ms_1:
080000F8  0C82 0000  263          cmp.l     #3,D2
080000FC  0003      
080000FE  6C0A       264          bge.s     Wait3ms_3
                     265   ; Wait1ms() ;
08000100  4EB9 0800  266          jsr       _Wait1ms
08000104  00E0      
08000106  5282       267          addq.l    #1,D2
08000108  60EE       268          bra       Wait3ms_1
                     269   Wait3ms_3:
0800010A  241F       270          move.l    (A7)+,D2
0800010C  4E75       271          rts
                     272   ; }
                     273   ; /*********************************************************************************************
                     274   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     275   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     276   ; *********************************************************************************************/
                     277   ; void Init_LCD(void)
                     278   ; {
                     279   _Init_LCD:
                     280   ; LCDcommand = 0x0c ;
0800010E  13FC 000C  281          move.b    #12,4194336
08000112  0040 0020 
                     282   ; Wait3ms() ;
08000116  4EB9 0800  283          jsr       _Wait3ms
0800011A  00F4      
                     284   ; LCDcommand = 0x38 ;
0800011C  13FC 0038  285          move.b    #56,4194336
08000120  0040 0020 
                     286   ; Wait3ms() ;
08000124  4EB9 0800  287          jsr       _Wait3ms
08000128  00F4      
0800012A  4E75       288          rts
                     289   ; }
                     290   ; /*********************************************************************************************
                     291   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     292   ; *********************************************************************************************/
                     293   ; void Init_RS232(void)
                     294   ; {
                     295   _Init_RS232:
                     296   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
0800012C  13FC 0015  297          move.b    #21,4194368
08000130  0040 0040 
                     298   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
08000134  13FC 0001  299          move.b    #1,4194372
08000138  0040 0044 
0800013C  4E75       300          rts
                     301   ; }
                     302   ; /*********************************************************************************************************
                     303   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     304   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     305   ; **  to allow the board to communicate with HyperTerminal Program
                     306   ; **
                     307   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     308   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     309   ; **  call _putch() also
                     310   ; *********************************************************************************************************/
                     311   ; int _putch( int c)
                     312   ; {
                     313   __putch:
0800013E  4E56 0000  314          link      A6,#0
                     315   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     316   _putch_1:
08000142  1039 0040  317          move.b    4194368,D0
08000146  0040      
08000148  C03C 0002  318          and.b     #2,D0
0800014C  0C00 0002  319          cmp.b     #2,D0
08000150  6702       320          beq.s     _putch_3
08000152  60EE       321          bra       _putch_1
                     322   _putch_3:
                     323   ; ;
                     324   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
08000154  202E 0008  325          move.l    8(A6),D0
08000158  C0BC 0000  326          and.l     #127,D0
0800015C  007F      
0800015E  13C0 0040  327          move.b    D0,4194370
08000162  0042      
                     328   ; return c ;                                              // putchar() expects the character to be returned
08000164  202E 0008  329          move.l    8(A6),D0
08000168  4E5E       330          unlk      A6
0800016A  4E75       331          rts
                     332   ; }
                     333   ; /*********************************************************************************************************
                     334   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     335   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     336   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     337   ; **
                     338   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     339   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     340   ; **  call _getch() also
                     341   ; *********************************************************************************************************/
                     342   ; int _getch( void )
                     343   ; {
                     344   __getch:
0800016C  4E56 FFFC  345          link      A6,#-4
                     346   ; char c ;
                     347   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     348   _getch_1:
08000170  1039 0040  349          move.b    4194368,D0
08000174  0040      
08000176  C03C 0001  350          and.b     #1,D0
0800017A  0C00 0001  351          cmp.b     #1,D0
0800017E  6702       352          beq.s     _getch_3
08000180  60EE       353          bra       _getch_1
                     354   _getch_3:
                     355   ; ;
                     356   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
08000182  1039 0040  357          move.b    4194370,D0
08000186  0042      
08000188  C0BC 0000  358          and.l     #255,D0
0800018C  00FF      
0800018E  C0BC 0000  359          and.l     #127,D0
08000192  007F      
08000194  4E5E       360          unlk      A6
08000196  4E75       361          rts
                     362   ; }
                     363   ; /******************************************************************************
                     364   ; **  Subroutine to output a single character to the 2 row LCD display
                     365   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     366   ; **  current cursor position
                     367   ; *******************************************************************************/
                     368   ; void LCDOutchar(int c)
                     369   ; {
                     370   _LCDOutchar:
08000198  4E56 0000  371          link      A6,#0
                     372   ; LCDdata = (char)(c);
0800019C  202E 0008  373          move.l    8(A6),D0
080001A0  13C0 0040  374          move.b    D0,4194338
080001A4  0022      
                     375   ; Wait1ms() ;
080001A6  4EB9 0800  376          jsr       _Wait1ms
080001AA  00E0      
080001AC  4E5E       377          unlk      A6
080001AE  4E75       378          rts
                     379   ; }
                     380   ; /**********************************************************************************
                     381   ; *subroutine to output a message at the current cursor position of the LCD display
                     382   ; ************************************************************************************/
                     383   ; void LCDOutMessage(char *theMessage)
                     384   ; {
                     385   _LCDOutMessage:
080001B0  4E56 FFFC  386          link      A6,#-4
                     387   ; char c ;
                     388   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     389   LCDOutMessage_1:
080001B4  206E 0008  390          move.l    8(A6),A0
080001B8  52AE 0008  391          addq.l    #1,8(A6)
080001BC  1D50 FFFF  392          move.b    (A0),-1(A6)
080001C0  1010       393          move.b    (A0),D0
080001C2  6714       394          beq.s     LCDOutMessage_3
                     395   ; LCDOutchar(c) ;
080001C4  122E FFFF  396          move.b    -1(A6),D1
080001C8  4881       397          ext.w     D1
080001CA  48C1       398          ext.l     D1
080001CC  2F01       399          move.l    D1,-(A7)
080001CE  4EB9 0800  400          jsr       _LCDOutchar
080001D2  0198      
080001D4  584F       401          addq.w    #4,A7
080001D6  60DC       402          bra       LCDOutMessage_1
                     403   LCDOutMessage_3:
080001D8  4E5E       404          unlk      A6
080001DA  4E75       405          rts
                     406   ; }
                     407   ; /******************************************************************************
                     408   ; *subroutine to clear the line by issuing 24 space characters
                     409   ; *******************************************************************************/
                     410   ; void LCDClearln(void)
                     411   ; {
                     412   _LCDClearln:
080001DC  2F02       413          move.l    D2,-(A7)
                     414   ; int i ;
                     415   ; for(i = 0; i < 24; i ++)
080001DE  4282       416          clr.l     D2
                     417   LCDClearln_1:
080001E0  0C82 0000  418          cmp.l     #24,D2
080001E4  0018      
080001E6  6C10       419          bge.s     LCDClearln_3
                     420   ; LCDOutchar(' ') ;       // write a space char to the LCD display
080001E8  4878 0020  421          pea       32
080001EC  4EB9 0800  422          jsr       _LCDOutchar
080001F0  0198      
080001F2  584F       423          addq.w    #4,A7
080001F4  5282       424          addq.l    #1,D2
080001F6  60E8       425          bra       LCDClearln_1
                     426   LCDClearln_3:
080001F8  241F       427          move.l    (A7)+,D2
080001FA  4E75       428          rts
                     429   ; }
                     430   ; /******************************************************************************
                     431   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     432   ; *******************************************************************************/
                     433   ; void LCDLine1Message(char *theMessage)
                     434   ; {
                     435   _LCDLine1Message:
080001FC  4E56 0000  436          link      A6,#0
                     437   ; LCDcommand = 0x80 ;
08000200  13FC 0080  438          move.b    #128,4194336
08000204  0040 0020 
                     439   ; Wait3ms();
08000208  4EB9 0800  440          jsr       _Wait3ms
0800020C  00F4      
                     441   ; LCDClearln() ;
0800020E  4EB9 0800  442          jsr       _LCDClearln
08000212  01DC      
                     443   ; LCDcommand = 0x80 ;
08000214  13FC 0080  444          move.b    #128,4194336
08000218  0040 0020 
                     445   ; Wait3ms() ;
0800021C  4EB9 0800  446          jsr       _Wait3ms
08000220  00F4      
                     447   ; LCDOutMessage(theMessage) ;
08000222  2F2E 0008  448          move.l    8(A6),-(A7)
08000226  4EB9 0800  449          jsr       _LCDOutMessage
0800022A  01B0      
0800022C  584F       450          addq.w    #4,A7
0800022E  4E5E       451          unlk      A6
08000230  4E75       452          rts
                     453   ; }
                     454   ; /******************************************************************************
                     455   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     456   ; *******************************************************************************/
                     457   ; void LCDLine2Message(char *theMessage)
                     458   ; {
                     459   _LCDLine2Message:
08000232  4E56 0000  460          link      A6,#0
                     461   ; LCDcommand = 0xC0 ;
08000236  13FC 00C0  462          move.b    #192,4194336
0800023A  0040 0020 
                     463   ; Wait3ms();
0800023E  4EB9 0800  464          jsr       _Wait3ms
08000242  00F4      
                     465   ; LCDClearln() ;
08000244  4EB9 0800  466          jsr       _LCDClearln
08000248  01DC      
                     467   ; LCDcommand = 0xC0 ;
0800024A  13FC 00C0  468          move.b    #192,4194336
0800024E  0040 0020 
                     469   ; Wait3ms() ;
08000252  4EB9 0800  470          jsr       _Wait3ms
08000256  00F4      
                     471   ; LCDOutMessage(theMessage) ;
08000258  2F2E 0008  472          move.l    8(A6),-(A7)
0800025C  4EB9 0800  473          jsr       _LCDOutMessage
08000260  01B0      
08000262  584F       474          addq.w    #4,A7
08000264  4E5E       475          unlk      A6
08000266  4E75       476          rts
                     477   ; }
                     478   ; /*********************************************************************************************************************************
                     479   ; **  IMPORTANT FUNCTION
                     480   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     481   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     482   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     483   ; **  Calling this function allows you to deal with Interrupts for example
                     484   ; ***********************************************************************************************************************************/
                     485   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     486   ; {
                     487   _InstallExceptionHandler:
08000268  4E56 FFFC  488          link      A6,#-4
                     489   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
0800026C  2D7C 0B00  490          move.l    #184549376,-4(A6)
08000270  0000 FFFC 
                     491   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
08000274  206E FFFC  492          move.l    -4(A6),A0
08000278  202E 000C  493          move.l    12(A6),D0
0800027C  E588       494          lsl.l     #2,D0
0800027E  21AE 0008  495          move.l    8(A6),0(A0,D0.L)
08000282  0800      
08000284  4E5E       496          unlk      A6
08000286  4E75       497          rts
                     498   ; }
                     499   ; /******************************************************************************************************************************
                     500   ; * Start of user program
                     501   ; ******************************************************************************************************************************/
                     502   ; void main()
                     503   ; {
                     504   _main:
08000288  4E56 FF4C  505          link      A6,#-180
0800028C  48E7 0038  506          movem.l   A2/A3/A4,-(A7)
08000290  45F9 0800  507          lea       _printf.L,A2
08000294  10FE      
08000296  47F9 0800  508          lea       _InstallExceptionHandler.L,A3
0800029A  0268      
0800029C  49F9 0800  509          lea       _ADCWrite.L,A4
080002A0  075C      
                     510   ; unsigned int row, i=0, count=0, counter1=1;
080002A2  42AE FF50  511          clr.l     -176(A6)
080002A6  42AE FF54  512          clr.l     -172(A6)
080002AA  2D7C 0000  513          move.l    #1,-168(A6)
080002AE  0001 FF58 
                     514   ; char c, text[150] ;
                     515   ; unsigned char temp, potential, light;
                     516   ; int switches;
                     517   ; int PassFailFlag = 1;
080002B2  2D7C 0000  518          move.l    #1,-4(A6)
080002B6  0001 FFFC 
                     519   ; i = x = y = z = PortA_Count = 0;
080002BA  42B9 0800  520          clr.l     _PortA_Count.L
080002BE  1EE2      
080002C0  42B9 0800  521          clr.l     _z.L
080002C4  1EDE      
080002C6  42B9 0800  522          clr.l     _y.L
080002CA  1EDA      
080002CC  42B9 0800  523          clr.l     _x.L
080002D0  1ED6      
080002D2  42AE FF50  524          clr.l     -176(A6)
                     525   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
080002D6  4239 0800  526          clr.b     _Timer4Count.L
080002DA  1EEC      
080002DC  4239 0800  527          clr.b     _Timer3Count.L
080002E0  1EEA      
080002E2  4239 0800  528          clr.b     _Timer2Count.L
080002E6  1EE8      
080002E8  4239 0800  529          clr.b     _Timer1Count.L
080002EC  1EE6      
                     530   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
080002EE  4878 0019  531          pea       25
080002F2  4879 0800  532          pea       _PIA_ISR.L
080002F6  00DA      
080002F8  4E93       533          jsr       (A3)
080002FA  504F       534          addq.w    #8,A7
                     535   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
080002FC  4878 001A  536          pea       26
08000300  4879 0800  537          pea       _ACIA_ISR.L
08000304  00D8      
08000306  4E93       538          jsr       (A3)
08000308  504F       539          addq.w    #8,A7
                     540   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
0800030A  4878 001B  541          pea       27
0800030E  4879 0800  542          pea       _Timer_ISR.L
08000312  003E      
08000314  4E93       543          jsr       (A3)
08000316  504F       544          addq.w    #8,A7
                     545   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
08000318  4878 001C  546          pea       28
0800031C  4879 0800  547          pea       _Key2PressISR.L
08000320  00DC      
08000322  4E93       548          jsr       (A3)
08000324  504F       549          addq.w    #8,A7
                     550   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
08000326  4878 001D  551          pea       29
0800032A  4879 0800  552          pea       _Key1PressISR.L
0800032E  00DE      
08000330  4E93       553          jsr       (A3)
08000332  504F       554          addq.w    #8,A7
                     555   ; Timer1Data = 0x10;		// program time delay into timers 1-4
08000334  13FC 0010  556          move.b    #16,4194352
08000338  0040 0030 
                     557   ; Timer2Data = 0x20;
0800033C  13FC 0020  558          move.b    #32,4194356
08000340  0040 0034 
                     559   ; Timer3Data = 0x15;
08000344  13FC 0015  560          move.b    #21,4194360
08000348  0040 0038 
                     561   ; Timer4Data = 0x25;
0800034C  13FC 0025  562          move.b    #37,4194364
08000350  0040 003C 
                     563   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
08000354  13FC 0003  564          move.b    #3,4194354
08000358  0040 0032 
                     565   ; Timer2Control = 3;
0800035C  13FC 0003  566          move.b    #3,4194358
08000360  0040 0036 
                     567   ; Timer3Control = 3;
08000364  13FC 0003  568          move.b    #3,4194362
08000368  0040 003A 
                     569   ; Timer4Control = 3;
0800036C  13FC 0003  570          move.b    #3,4194366
08000370  0040 003E 
                     571   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
08000374  4EB9 0800  572          jsr       _Init_LCD
08000378  010E      
                     573   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
0800037A  4EB9 0800  574          jsr       _Init_RS232
0800037E  012C      
                     575   ; I2C_Init();             //initialise the I2C 
08000380  4EB9 0800  576          jsr       _I2C_Init
08000384  074C      
                     577   ; /*************************************************************************************************
                     578   ; **  Test of scanf function
                     579   ; *************************************************************************************************/
                     580   ; scanflush() ;                       // flush any text that may have been typed ahead
08000386  4EB9 0800  581          jsr       _scanflush
0800038A  0AF2      
                     582   ; printf("\r\nEnter any key") ;
0800038C  4879 0800  583          pea       @m68kus~1_1.L
08000390  1CA0      
08000392  4E92       584          jsr       (A2)
08000394  584F       585          addq.w    #4,A7
                     586   ; scanf("%d", &i) ;
08000396  486E FF50  587          pea       -176(A6)
0800039A  4879 0800  588          pea       @m68kus~1_2.L
0800039E  1CB0      
080003A0  4EB9 0800  589          jsr       _scanf
080003A4  0834      
080003A6  504F       590          addq.w    #8,A7
                     591   ; while(1){
                     592   main_1:
                     593   ; temp = ADCWrite(TEMP);
080003A8  42A7       594          clr.l     -(A7)
080003AA  4E94       595          jsr       (A4)
080003AC  584F       596          addq.w    #4,A7
080003AE  1D40 FFF5  597          move.b    D0,-11(A6)
                     598   ; potential = ADCWrite(POTENTIAL);
080003B2  4878 0001  599          pea       1
080003B6  4E94       600          jsr       (A4)
080003B8  584F       601          addq.w    #4,A7
080003BA  1D40 FFF6  602          move.b    D0,-10(A6)
                     603   ; light = ADCWrite(LIGHT);
080003BE  4878 0002  604          pea       2
080003C2  4E94       605          jsr       (A4)
080003C4  584F       606          addq.w    #4,A7
080003C6  1D40 FFF7  607          move.b    D0,-9(A6)
                     608   ; printf("\n==============================MEASURING==============================\n");
080003CA  4879 0800  609          pea       @m68kus~1_3.L
080003CE  1CB4      
080003D0  4E92       610          jsr       (A2)
080003D2  584F       611          addq.w    #4,A7
                     612   ; printf("Value of Thermistor: %d\n", temp);
080003D4  122E FFF5  613          move.b    -11(A6),D1
080003D8  C2BC 0000  614          and.l     #255,D1
080003DC  00FF      
080003DE  2F01       615          move.l    D1,-(A7)
080003E0  4879 0800  616          pea       @m68kus~1_4.L
080003E4  1CFC      
080003E6  4E92       617          jsr       (A2)
080003E8  504F       618          addq.w    #8,A7
                     619   ; printf("Value of Potentiometer: %d\n", potential);
080003EA  122E FFF6  620          move.b    -10(A6),D1
080003EE  C2BC 0000  621          and.l     #255,D1
080003F2  00FF      
080003F4  2F01       622          move.l    D1,-(A7)
080003F6  4879 0800  623          pea       @m68kus~1_5.L
080003FA  1D16      
080003FC  4E92       624          jsr       (A2)
080003FE  504F       625          addq.w    #8,A7
                     626   ; printf("Value of Photo-resister: %d\n", light);
08000400  122E FFF7  627          move.b    -9(A6),D1
08000404  C2BC 0000  628          and.l     #255,D1
08000408  00FF      
0800040A  2F01       629          move.l    D1,-(A7)
0800040C  4879 0800  630          pea       @m68kus~1_6.L
08000410  1D32      
08000412  4E92       631          jsr       (A2)
08000414  504F       632          addq.w    #8,A7
                     633   ; switches = (PortB << 8) | (PortA);
08000416  1039 0040  634          move.b    4194306,D0
0800041A  0002      
0800041C  C0BC 0000  635          and.l     #255,D0
08000420  00FF      
08000422  E188       636          lsl.l     #8,D0
08000424  1239 0040  637          move.b    4194304,D1
08000428  0000      
0800042A  C2BC 0000  638          and.l     #255,D1
0800042E  00FF      
08000430  8081       639          or.l      D1,D0
08000432  2D40 FFF8  640          move.l    D0,-8(A6)
                     641   ; printf("\rSwitches SW[7-0] = ");
08000436  4879 0800  642          pea       @m68kus~1_7.L
0800043A  1D50      
0800043C  4E92       643          jsr       (A2)
0800043E  584F       644          addq.w    #4,A7
                     645   ; for (i = (int)(0x00000080); i > 0; i = i >> 1) {
08000440  2D7C 0000  646          move.l    #128,-176(A6)
08000444  0080 FF50 
                     647   main_4:
08000448  202E FF50  648          move.l    -176(A6),D0
0800044C  0C80 0000  649          cmp.l     #0,D0
08000450  0000      
08000452  632C       650          bls.s     main_6
                     651   ; if ((switches & i) == 0)
08000454  202E FFF8  652          move.l    -8(A6),D0
08000458  C0AE FF50  653          and.l     -176(A6),D0
0800045C  660C       654          bne.s     main_7
                     655   ; printf("0");
0800045E  4879 0800  656          pea       @m68kus~1_8.L
08000462  1D66      
08000464  4E92       657          jsr       (A2)
08000466  584F       658          addq.w    #4,A7
08000468  600A       659          bra.s     main_8
                     660   main_7:
                     661   ; else
                     662   ; printf("1");
0800046A  4879 0800  663          pea       @m68kus~1_9.L
0800046E  1D68      
08000470  4E92       664          jsr       (A2)
08000472  584F       665          addq.w    #4,A7
                     666   main_8:
08000474  202E FF50  667          move.l    -176(A6),D0
08000478  E288       668          lsr.l     #1,D0
0800047A  2D40 FF50  669          move.l    D0,-176(A6)
0800047E  60C8       670          bra       main_4
                     671   main_6:
08000480  6000 FF26  672          bra       main_1
                     673   ; }
                     674   ; }
                     675   ; // programs should NOT exit as there is nothing to Exit TO !!!!!!
                     676   ; // There is no OS - just press the reset button to end program and call debug
                     677   ; }
                     678   ; C:\CPEN412\ASN6\CANBUS-CONTROLLER.C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                     679   ; #include <stdio.h>
                     680   ; #include "Canbus-Controller.h"
                     681   ; #include "DebugMonitor.h"
                     682   ; #define TEMP 0
                     683   ; #define POTENTIAL 1
                     684   ; #define LIGHT 2
                     685   ; /*********************************************************************************************
                     686   ; ** These addresses and definitions were taken from Appendix 7 of the Can Controller
                     687   ; ** application note and adapted for the 68k assignment
                     688   ; *********************************************************************************************/
                     689   ; /*
                     690   ; ** definition for the SJA1000 registers and bits based on 68k address map areas
                     691   ; ** assume the addresses for the 2 can controllers given in the assignment
                     692   ; **
                     693   ; ** Registers are defined in terms of the following Macro for each Can controller,
                     694   ; ** where (i) represents an registers number
                     695   ; */
                     696   ; /*  bus timing values for
                     697   ; **  bit-rate : 100 kBit/s
                     698   ; **  oscillator frequency : 25 MHz, 1 sample per bit, 0 tolerance %
                     699   ; **  maximum tolerated propagation delay : 4450 ns
                     700   ; **  minimum requested propagation delay : 500 ns
                     701   ; **
                     702   ; **  https://www.kvaser.com/support/calculators/bit-timing-calculator/
                     703   ; **  T1 	T2 	BTQ 	SP% 	SJW 	BIT RATE 	ERR% 	BTR0 	BTR1
                     704   ; **  17	8	25	    68	     1	      100	    0	      04	7f
                     705   ; */
                     706   ; // initialisation for Can controller 0
                     707   ; void Init_CanBus_Controller0(void)
                     708   ; {
                     709   _Init_CanBus_Controller0:
                     710   ; // TODO - put your Canbus initialisation code for CanController 0 here
                     711   ; // See section 4.2.1 in the application note for details (PELICAN MODE)
                     712   ; /* set reset mode/request (Note: after power-on SJA1000 is in BasicCAN mode)
                     713   ; leave loop after a time out and signal an error */
                     714   ; while((Can0_ModeControlReg & RM_RR_Bit ) == ClrByte)
                     715   Init_CanBus_Controller0_1:
08000484  1039 0050  716          move.b    5242880,D0
08000488  0000      
0800048A  C03C 0001  717          and.b     #1,D0
0800048E  6612       718          bne.s     Init_CanBus_Controller0_3
                     719   ; {
                     720   ; /* other bits than the reset mode/request bit are unchanged */
                     721   ; Can0_ModeControlReg = Can0_ModeControlReg | RM_RR_Bit ;
08000490  1039 0050  722          move.b    5242880,D0
08000494  0000      
08000496  803C 0001  723          or.b      #1,D0
0800049A  13C0 0050  724          move.b    D0,5242880
0800049E  0000      
080004A0  60E2       725          bra       Init_CanBus_Controller0_1
                     726   Init_CanBus_Controller0_3:
                     727   ; }
                     728   ; /* set the Clock Divider Register according to the given hardware of Figure 3
                     729   ; select PeliCAN mode
                     730   ; bypass CAN input comparator as external transceiver is used
                     731   ; select the clock for the controller S87C654 */
                     732   ; Can0_ClockDivideReg = CANMode_Bit | CBP_Bit | DivBy2;
080004A2  13FC 00C0  733          move.b    #192,5242942
080004A6  0050 003E 
                     734   ; /* disable CAN interrupts, if required (always necessary after power-on)
                     735   ; (write to SJA1000 Interrupt Enable / Control Register) */
                     736   ; Can0_InterruptEnReg = ClrIntEnSJA;
080004AA  4239 0050  737          clr.b     5242888
080004AE  0008      
                     738   ; /* define acceptance code and mask */
                     739   ; Can0_AcceptCode0Reg = ClrByte;
080004B0  4239 0050  740          clr.b     5242912
080004B4  0020      
                     741   ; Can0_AcceptCode1Reg = ClrByte;
080004B6  4239 0050  742          clr.b     5242914
080004BA  0022      
                     743   ; Can0_AcceptCode2Reg = ClrByte;
080004BC  4239 0050  744          clr.b     5242916
080004C0  0024      
                     745   ; Can0_AcceptCode3Reg = ClrByte;
080004C2  4239 0050  746          clr.b     5242918
080004C6  0026      
                     747   ; Can0_AcceptMask0Reg = DontCare; /* every identifier is accepted */
080004C8  13FC 00FF  748          move.b    #255,5242920
080004CC  0050 0028 
                     749   ; Can0_AcceptMask1Reg = DontCare; /* every identifier is accepted */
080004D0  13FC 00FF  750          move.b    #255,5242922
080004D4  0050 002A 
                     751   ; Can0_AcceptMask2Reg = DontCare; /* every identifier is accepted */
080004D8  13FC 00FF  752          move.b    #255,5242924
080004DC  0050 002C 
                     753   ; Can0_AcceptMask3Reg = DontCare; /* every identifier is accepted */
080004E0  13FC 00FF  754          move.b    #255,5242926
080004E4  0050 002E 
                     755   ; /* configure bus timing */
                     756   ; /* bit-rate = 1 Mbit/s @ 24 MHz, the bus is sampled once */
                     757   ; Can0_BusTiming0Reg = 0x04;
080004E8  13FC 0004  758          move.b    #4,5242892
080004EC  0050 000C 
                     759   ; Can0_BusTiming1Reg = 0x7F;
080004F0  13FC 007F  760          move.b    #127,5242894
080004F4  0050 000E 
                     761   ; /* configure CAN outputs: float on TX1, Push/Pull on TX0,
                     762   ; normal output mode */
                     763   ; Can0_OutControlReg = Tx1Float | Tx0PshPull | NormalMode;
080004F8  13FC 001A  764          move.b    #26,5242896
080004FC  0050 0010 
                     765   ; /* leave the reset mode/request i.e. switch to operating mode,
                     766   ; the interrupts of the S87C654 are enabled
                     767   ; but not the CAN interrupts of the SJA1000, which can be done separately
                     768   ; for the different tasks in a system */
                     769   ; /* clear Reset Mode bit, select dual Acceptance Filter Mode,
                     770   ; switch off Self Test Mode and Listen Only Mode,
                     771   ; clear Sleep Mode (wake up) */
                     772   ; /* wait until RM_RR_Bit is cleared */
                     773   ; /* break loop after a time out and signal an error */
                     774   ; do{
                     775   Init_CanBus_Controller0_4:
                     776   ; Can0_ModeControlReg = ClrByte;
08000500  4239 0050  777          clr.b     5242880
08000504  0000      
08000506  1039 0050  778          move.b    5242880,D0
0800050A  0000      
0800050C  C03C 0001  779          and.b     #1,D0
08000510  66EE       780          bne       Init_CanBus_Controller0_4
08000512  4E75       781          rts
                     782   ; } while((Can0_ModeControlReg & RM_RR_Bit ) != ClrByte);
                     783   ; /*----- end of Initialization Example of the SJA1000 ------------------------*/
                     784   ; }
                     785   ; // initialisation for Can controller 1
                     786   ; void Init_CanBus_Controller1(void)
                     787   ; {
                     788   _Init_CanBus_Controller1:
                     789   ; // TODO - put your Canbus initialisation code for CanController 1 here
                     790   ; // See section 4.2.1 in the application note for details (PELICAN MODE)
                     791   ; /* set reset mode/request (Note: after power-on SJA1000 is in BasicCAN mode)
                     792   ; leave loop after a time out and signal an error */
                     793   ; while((Can1_ModeControlReg & RM_RR_Bit ) == ClrByte)
                     794   Init_CanBus_Controller1_1:
08000514  1039 0050  795          move.b    5243392,D0
08000518  0200      
0800051A  C03C 0001  796          and.b     #1,D0
0800051E  6612       797          bne.s     Init_CanBus_Controller1_3
                     798   ; {
                     799   ; /* other bits than the reset mode/request bit are unchanged */
                     800   ; Can1_ModeControlReg = Can1_ModeControlReg | RM_RR_Bit ;
08000520  1039 0050  801          move.b    5243392,D0
08000524  0200      
08000526  803C 0001  802          or.b      #1,D0
0800052A  13C0 0050  803          move.b    D0,5243392
0800052E  0200      
08000530  60E2       804          bra       Init_CanBus_Controller1_1
                     805   Init_CanBus_Controller1_3:
                     806   ; }
                     807   ; /* set the Clock Divider Register according to the given hardware of Figure 3
                     808   ; select PeliCAN mode
                     809   ; bypass CAN input comparator as external transceiver is used
                     810   ; select the clock for the controller S87C654 */
                     811   ; Can1_ClockDivideReg = CANMode_Bit | CBP_Bit | DivBy2;
08000532  13FC 00C0  812          move.b    #192,5243454
08000536  0050 023E 
                     813   ; /* disable CAN interrupts, if required (always necessary after power-on)
                     814   ; (write to SJA1000 Interrupt Enable / Control Register) */
                     815   ; Can1_InterruptEnReg = ClrIntEnSJA;
0800053A  4239 0050  816          clr.b     5243400
0800053E  0208      
                     817   ; /* define acceptance code and mask */
                     818   ; Can1_AcceptCode0Reg = ClrByte;
08000540  4239 0050  819          clr.b     5243424
08000544  0220      
                     820   ; Can1_AcceptCode1Reg = ClrByte;
08000546  4239 0050  821          clr.b     5243426
0800054A  0222      
                     822   ; Can1_AcceptCode2Reg = ClrByte;
0800054C  4239 0050  823          clr.b     5243428
08000550  0224      
                     824   ; Can1_AcceptCode3Reg = ClrByte;
08000552  4239 0050  825          clr.b     5243430
08000556  0226      
                     826   ; Can1_AcceptMask0Reg = DontCare; /* every identifier is accepted */
08000558  13FC 00FF  827          move.b    #255,5243432
0800055C  0050 0228 
                     828   ; Can1_AcceptMask1Reg = DontCare; /* every identifier is accepted */
08000560  13FC 00FF  829          move.b    #255,5243434
08000564  0050 022A 
                     830   ; Can1_AcceptMask2Reg = DontCare; /* every identifier is accepted */
08000568  13FC 00FF  831          move.b    #255,5243436
0800056C  0050 022C 
                     832   ; Can1_AcceptMask3Reg = DontCare; /* every identifier is accepted */
08000570  13FC 00FF  833          move.b    #255,5243438
08000574  0050 022E 
                     834   ; /* configure bus timing */
                     835   ; /* bit-rate = 1 Mbit/s @ 24 MHz, the bus is sampled once */
                     836   ; Can1_BusTiming0Reg = 0x04;
08000578  13FC 0004  837          move.b    #4,5243404
0800057C  0050 020C 
                     838   ; Can1_BusTiming1Reg = 0x7F;
08000580  13FC 007F  839          move.b    #127,5243406
08000584  0050 020E 
                     840   ; /* configure CAN outputs: float on TX1, Push/Pull on TX0,
                     841   ; normal output mode */
                     842   ; Can1_OutControlReg = Tx1Float | Tx0PshPull | NormalMode;
08000588  13FC 001A  843          move.b    #26,5243408
0800058C  0050 0210 
                     844   ; /* leave the reset mode/request i.e. switch to operating mode,
                     845   ; the interrupts of the S87C654 are enabled
                     846   ; but not the CAN interrupts of the SJA1000, which can be done separately
                     847   ; for the different tasks in a system */
                     848   ; /* clear Reset Mode bit, select dual Acceptance Filter Mode,
                     849   ; switch off Self Test Mode and Listen Only Mode,
                     850   ; clear Sleep Mode (wake up) */
                     851   ; /* wait until RM_RR_Bit is cleared */
                     852   ; /* break loop after a time out and signal an error */
                     853   ; do{
                     854   Init_CanBus_Controller1_4:
                     855   ; Can1_ModeControlReg = ClrByte;
08000590  4239 0050  856          clr.b     5243392
08000594  0200      
08000596  1039 0050  857          move.b    5243392,D0
0800059A  0200      
0800059C  C03C 0001  858          and.b     #1,D0
080005A0  66EE       859          bne       Init_CanBus_Controller1_4
080005A2  4E75       860          rts
                     861   ; } while((Can1_ModeControlReg & RM_RR_Bit ) != ClrByte);
                     862   ; /*----- end of Initialization Example of the SJA1000 ------------------------*/
                     863   ; }
                     864   ; // Transmit for sending a message via Can controller 0
                     865   ; void CanBus0_Transmit(void)
                     866   ; {
                     867   _CanBus0_Transmit:
                     868   ; // TODO - put your Canbus transmit code for CanController 0 here
                     869   ; // See section 4.2.2 in the application note for details (PELICAN MODE)
                     870   ; /* wait until the Transmit Buffer is released */
                     871   ; do{
                     872   CanBus0_Transmit_1:
                     873   ; /* start a polling timer and run some tasks while waiting
                     874   ; break the loop and signal an error if time too long */
                     875   ; } while((Can0_StatusReg & TBS_Bit ) != TBS_Bit );
080005A4  1039 0050  876          move.b    5242884,D0
080005A8  0004      
080005AA  C03C 0004  877          and.b     #4,D0
080005AE  0C00 0004  878          cmp.b     #4,D0
080005B2  66F0       879          bne       CanBus0_Transmit_1
                     880   ; /* Transmit Buffer is released, a message may be written into the buffer */
                     881   ; /* in this example a Standard Frame message shall be transmitted */
                     882   ; Can0_TxFrameInfo = 0x08; /* SFF (data), DLC=8 */
080005B4  13FC 0008  883          move.b    #8,5242912
080005B8  0050 0020 
                     884   ; Can0_TxBuffer1 = 0xA5; /* ID1 = A5, (1010 0101) */
080005BC  13FC 00A5  885          move.b    #165,5242914
080005C0  0050 0022 
                     886   ; Can0_TxBuffer2 = 0x20; /* ID2 = 20, (0010 0000) */
080005C4  13FC 0020  887          move.b    #32,5242916
080005C8  0050 0024 
                     888   ; Can0_TxBuffer3 = 0x51; /* data1 = 51 */
080005CC  13FC 0051  889          move.b    #81,5242918
080005D0  0050 0026 
                     890   ; /* Start the transmission */
                     891   ; Can0_CommandReg = TR_Bit ; /* Set Transmission Request bit */
080005D4  13FC 0001  892          move.b    #1,5242882
080005D8  0050 0002 
080005DC  4E75       893          rts
                     894   ; }
                     895   ; // Transmit for sending a message via Can controller 1
                     896   ; void CanBus1_Transmit(void)
                     897   ; {
                     898   _CanBus1_Transmit:
                     899   ; // TODO - put your Canbus transmit code for CanController 1 here
                     900   ; // See section 4.2.2 in the application note for details (PELICAN MODE)
                     901   ; /* wait until the Transmit Buffer is released */
                     902   ; do{
                     903   CanBus1_Transmit_1:
                     904   ; /* start a polling timer and run some tasks while waiting
                     905   ; break the loop and signal an error if time too long */
                     906   ; } while((Can1_StatusReg & TBS_Bit ) != TBS_Bit );
080005DE  1039 0050  907          move.b    5243396,D0
080005E2  0204      
080005E4  C03C 0004  908          and.b     #4,D0
080005E8  0C00 0004  909          cmp.b     #4,D0
080005EC  66F0       910          bne       CanBus1_Transmit_1
                     911   ; /* Transmit Buffer is released, a message may be written into the buffer */
                     912   ; /* in this example a Standard Frame message shall be transmitted */
                     913   ; Can1_TxFrameInfo = 0x08; /* SFF (data), DLC=8 */
080005EE  13FC 0008  914          move.b    #8,5243424
080005F2  0050 0220 
                     915   ; Can1_TxBuffer1 = 0xA5; /* ID1 = A5, (1010 0101) */
080005F6  13FC 00A5  916          move.b    #165,5243426
080005FA  0050 0222 
                     917   ; Can1_TxBuffer2 = 0x20; /* ID2 = 20, (0010 0000) */
080005FE  13FC 0020  918          move.b    #32,5243428
08000602  0050 0224 
                     919   ; Can1_TxBuffer3 = 0x52; /* data1 = 51 */
08000606  13FC 0052  920          move.b    #82,5243430
0800060A  0050 0226 
                     921   ; /* Start the transmission */
                     922   ; Can1_CommandReg = TR_Bit ; /* Set Transmission Request bit */
0800060E  13FC 0001  923          move.b    #1,5243394
08000612  0050 0202 
08000616  4E75       924          rts
                     925   ; }
                     926   ; // Receive for reading a received message via Can controller 0
                     927   ; void CanBus0_Receive(void)
                     928   ; {
                     929   _CanBus0_Receive:
                     930   ; // TODO - put your Canbus receive code for CanController 0 here
                     931   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                     932   ; //Bottom of page 35
                     933   ; /* enable the receive interrupt */
                     934   ; //Can0_InterruptEnReg = RIE_Bit; ////
                     935   ; /* wait until the Receiver Buffer is released */
                     936   ; do{
                     937   CanBus0_Receive_1:
                     938   ; /* start a polling timer and run some tasks while waiting
                     939   ; break the loop and signal an error if time too long */
                     940   ; } while((Can0_StatusReg & RBS_Bit) != RBS_Bit );
08000618  1039 0050  941          move.b    5242884,D0
0800061C  0004      
0800061E  C03C 0001  942          and.b     #1,D0
08000622  0C00 0001  943          cmp.b     #1,D0
08000626  66F0       944          bne       CanBus0_Receive_1
                     945   ; /* read the Interrupt Register content from SJA1000 and save temporarily
                     946   ; all interrupt flags are cleared (in PeliCAN mode the Receive
                     947   ; Interrupt (RI) is cleared first, when giving the Release Buffer command)
                     948   ; */
                     949   ; /* get the content of the Receive Buffer from SJA1000 and store the
                     950   ; message into internal memory of the controller,
                     951   ; it is possible at once to decode the FrameInfo and Data Length Code
                     952   ; and adapt the fetch appropriately */
                     953   ; /* release the Receive Buffer, now the Receive Interrupt flag is cleared,
                     954   ; further messages will generate a new interrupt */
                     955   ; Can0_CommandReg = RRB_Bit; /* Release Receive Buffer */
08000628  13FC 0004  956          move.b    #4,5242882
0800062C  0050 0002 
                     957   ; printf("CAN0 Received: %X\r\n", Can0_RxBuffer1);
08000630  1239 0050  958          move.b    5242914,D1
08000634  0022      
08000636  C2BC 0000  959          and.l     #255,D1
0800063A  00FF      
0800063C  2F01       960          move.l    D1,-(A7)
0800063E  4879 0800  961          pea       @canbus~1_1.L
08000642  1D6A      
08000644  4EB9 0800  962          jsr       _printf
08000648  10FE      
0800064A  504F       963          addq.w    #8,A7
0800064C  4E75       964          rts
                     965   ; }
                     966   ; // Receive for reading a received message via Can controller 1
                     967   ; void CanBus1_Receive(void)
                     968   ; {
                     969   _CanBus1_Receive:
                     970   ; // TODO - put your Canbus receive code for CanController 1 here
                     971   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                     972   ; //Bottom of page 35
                     973   ; // TODO - put your Canbus receive code for CanController 0 here
                     974   ; // See section 4.2.4 in the application note for details (PELICAN MODE)
                     975   ; /* enable the receive interrupt */
                     976   ; //Can1_InterruptEnReg = RIE_Bit;
                     977   ; /* wait until the Receiver Buffer is released */
                     978   ; do{
                     979   CanBus1_Receive_1:
                     980   ; /* start a polling timer and run some tasks while waiting
                     981   ; break the loop and signal an error if time too long */
                     982   ; } while((Can1_StatusReg & RBS_Bit) != RBS_Bit );
0800064E  1039 0050  983          move.b    5243396,D0
08000652  0204      
08000654  C03C 0001  984          and.b     #1,D0
08000658  0C00 0001  985          cmp.b     #1,D0
0800065C  66F0       986          bne       CanBus1_Receive_1
                     987   ; /* read the Interrupt Register content from SJA1000 and save temporarily
                     988   ; all interrupt flags are cleared (in PeliCAN mode the Receive
                     989   ; Interrupt (RI) is cleared first, when giving the Release Buffer command)
                     990   ; */
                     991   ; /* get the content of the Receive Buffer from SJA1000 and store the
                     992   ; message into internal memory of the controller,
                     993   ; it is possible at once to decode the FrameInfo and Data Length Code
                     994   ; and adapt the fetch appropriately */
                     995   ; /* release the Receive Buffer, now the Receive Interrupt flag is cleared,
                     996   ; further messages will generate a new interrupt */
                     997   ; Can1_CommandReg = RRB_Bit; /* Release Receive Buffer */
0800065E  13FC 0004  998          move.b    #4,5243394
08000662  0050 0202 
                     999   ; printf("CAN1 Received: %X\r\n", Can1_RxBuffer1);
08000666  1239 0050 1000          move.b    5243426,D1
0800066A  0222      
0800066C  C2BC 0000 1001          and.l     #255,D1
08000670  00FF      
08000672  2F01      1002          move.l    D1,-(A7)
08000674  4879 0800 1003          pea       @canbus~1_2.L
08000678  1D7E      
0800067A  4EB9 0800 1004          jsr       _printf
0800067E  10FE      
08000680  504F      1005          addq.w    #8,A7
08000682  4E75      1006          rts
                    1007   ; }
                    1008   ; void CanBusTest(void)
                    1009   ; {
                    1010   _CanBusTest:
08000684  2F0A      1011          move.l    A2,-(A7)
08000686  45F9 0800 1012          lea       _printf.L,A2
0800068A  10FE      
                    1013   ; // initialise the two Can controllers
                    1014   ; Init_CanBus_Controller0();
0800068C  4EB9 0800 1015          jsr       _Init_CanBus_Controller0
08000690  0484      
                    1016   ; Init_CanBus_Controller1();
08000692  4EB9 0800 1017          jsr       _Init_CanBus_Controller1
08000696  0514      
                    1018   ; printf("\r\n\r\n---- CANBUS Test ----\r\n") ;
08000698  4879 0800 1019          pea       @canbus~1_3.L
0800069C  1D92      
0800069E  4E92      1020          jsr       (A2)
080006A0  584F      1021          addq.w    #4,A7
                    1022   ; // simple application to alternately transmit and receive messages from each of two nodes
                    1023   ; while(1)    {
                    1024   CanBusTest_1:
                    1025   ; WaitHalfSecond();                    // write a routine to delay say 1/2 second so we don't flood the network with messages to0 quickly
080006A2  4EB9 0800 1026          jsr       _WaitHalfSecond
080006A6  06DC      
                    1027   ; CanBus0_Transmit() ;       // transmit a message via Controller 0
080006A8  4EB9 0800 1028          jsr       _CanBus0_Transmit
080006AC  05A4      
                    1029   ; CanBus1_Receive() ;        // receive a message via Controller 1 (and display it)
080006AE  4EB9 0800 1030          jsr       _CanBus1_Receive
080006B2  064E      
                    1031   ; printf("\r\n") ;
080006B4  4879 0800 1032          pea       @canbus~1_4.L
080006B8  1DAE      
080006BA  4E92      1033          jsr       (A2)
080006BC  584F      1034          addq.w    #4,A7
                    1035   ; WaitHalfSecond();                    // write a routine to delay say 1/2 second so we don't flood the network with messages to0 quickly
080006BE  4EB9 0800 1036          jsr       _WaitHalfSecond
080006C2  06DC      
                    1037   ; CanBus1_Transmit() ;        // transmit a message via Controller 1
080006C4  4EB9 0800 1038          jsr       _CanBus1_Transmit
080006C8  05DE      
                    1039   ; CanBus0_Receive() ;         // receive a message via Controller 0 (and display it)
080006CA  4EB9 0800 1040          jsr       _CanBus0_Receive
080006CE  0618      
                    1041   ; printf("\r\n") ;
080006D0  4879 0800 1042          pea       @canbus~1_4.L
080006D4  1DAE      
080006D6  4E92      1043          jsr       (A2)
080006D8  584F      1044          addq.w    #4,A7
080006DA  60C6      1045          bra       CanBusTest_1
                    1046   ; }
                    1047   ; }
                    1048   ; /************************************************************************************
                    1049   ; *Subroutine to give the 68000 something useless to do to waste 1 x 500 mSec = 500mSec = 0.5sec therefore 500000
                    1050   ; ************************************************************************************/
                    1051   ; void WaitHalfSecond(void)
                    1052   ; {
                    1053   _WaitHalfSecond:
080006DC  2F02      1054          move.l    D2,-(A7)
                    1055   ; long int  i;
                    1056   ; for (i = 0; i < 500000; i++)
080006DE  4282      1057          clr.l     D2
                    1058   WaitHalfSecond_1:
080006E0  0C82 0007 1059          cmp.l     #500000,D2
080006E4  A120      
080006E6  6C04      1060          bge.s     WaitHalfSecond_3
080006E8  5282      1061          addq.l    #1,D2
080006EA  60F4      1062          bra       WaitHalfSecond_1
                    1063   WaitHalfSecond_3:
080006EC  241F      1064          move.l    (A7)+,D2
080006EE  4E75      1065          rts
                    1066   ; ;
                    1067   ; }
                    1068   ; /************************************************************************************
                    1069   ; ** Subfunctions for I2C
                    1070   ; ************************************************************************************/
                    1071   ; void Enable_SCL_Clock(void){
                    1072   _Enable_SCL_Clock:
                    1073   ; I2C_Clock_PrerLo = 0x31;
080006F0  13FC 0031 1074          move.b    #49,4227072
080006F4  0040 8000 
                    1075   ; I2C_Clock_PrerHi = 0x00;
080006F8  4239 0040 1076          clr.b     4227074
080006FC  8002      
                    1077   ; return;
080006FE  4E75      1078          rts
                    1079   ; }
                    1080   ; void WaitForI2C_TIP(void){
                    1081   _WaitForI2C_TIP:
08000700  4E56 FFFC 1082          link      A6,#-4
                    1083   ; int TIP_bit;
                    1084   ; do{
                    1085   WaitForI2C_TIP_1:
                    1086   ; TIP_bit = (I2C_Status >> 1) & 0x01; 
08000704  1039 0040 1087          move.b    4227080,D0
08000708  8008      
0800070A  C0BC 0000 1088          and.l     #255,D0
0800070E  00FF      
08000710  E288      1089          lsr.l     #1,D0
08000712  C0BC 0000 1090          and.l     #1,D0
08000716  0001      
08000718  2D40 FFFC 1091          move.l    D0,-4(A6)
0800071C  202E FFFC 1092          move.l    -4(A6),D0
08000720  66E2      1093          bne       WaitForI2C_TIP_1
                    1094   ; }while(TIP_bit != 0);
                    1095   ; return;
08000722  4E5E      1096          unlk      A6
08000724  4E75      1097          rts
                    1098   ; }
                    1099   ; void WaitForI2C_RxACK(void){
                    1100   _WaitForI2C_RxACK:
08000726  4E56 FFFC 1101          link      A6,#-4
                    1102   ; int RxACK_bit;
                    1103   ; do{
                    1104   WaitForI2C_RxACK_1:
                    1105   ; RxACK_bit = (I2C_Status >> 7) & 0x01;
0800072A  1039 0040 1106          move.b    4227080,D0
0800072E  8008      
08000730  C0BC 0000 1107          and.l     #255,D0
08000734  00FF      
08000736  EE88      1108          lsr.l     #7,D0
08000738  C0BC 0000 1109          and.l     #1,D0
0800073C  0001      
0800073E  2D40 FFFC 1110          move.l    D0,-4(A6)
08000742  202E FFFC 1111          move.l    -4(A6),D0
08000746  66E2      1112          bne       WaitForI2C_RxACK_1
                    1113   ; }while(RxACK_bit != 0);
                    1114   ; return;
08000748  4E5E      1115          unlk      A6
0800074A  4E75      1116          rts
                    1117   ; }
                    1118   ; /************************************************************************************
                    1119   ; ** initialises the I2C controller 
                    1120   ; ************************************************************************************/
                    1121   ; void I2C_Init(void){
                    1122   _I2C_Init:
                    1123   ; //Enabling 100Khz SCL Clock Line
                    1124   ; Enable_SCL_Clock();
0800074C  4EB9 0800 1125          jsr       _Enable_SCL_Clock
08000750  06F0      
                    1126   ; //Enabling I2C for no interupts and enabling core
                    1127   ; Enable_I2C_CS();
08000752  13FC 0080 1128          move.b    #128,4227076
08000756  0040 8004 
                    1129   ; return;
0800075A  4E75      1130          rts
                    1131   ; }
                    1132   ; /************************************************************************************
                    1133   ; ** ADC Write Function to measure Thermistor, Potentimeter, Photo-resistor
                    1134   ; ************************************************************************************/
                    1135   ; unsigned char ADCWrite(int type){
                    1136   _ADCWrite:
0800075C  4E56 FFE8 1137          link      A6,#-24
08000760  48E7 3030 1138          movem.l   D2/D3/A2/A3,-(A7)
08000764  45F9 0800 1139          lea       _WaitForI2C_TIP.L,A2
08000768  0700      
0800076A  262E 0008 1140          move.l    8(A6),D3
0800076E  47F9 0800 1141          lea       _WaitForI2C_RxACK.L,A3
08000772  0726      
                    1142   ; int i;
                    1143   ; unsigned char c;
                    1144   ; unsigned char* data[3];
                    1145   ; unsigned char temp, light, potential;
                    1146   ; unsigned int delay = 0xFFFFF;
08000774  2D7C 000F 1147          move.l    #1048575,-4(A6)
08000778  FFFF FFFC 
                    1148   ; //Wait for TIP bit in Status Register 
                    1149   ; WaitForI2C_TIP();
0800077C  4E92      1150          jsr       (A2)
                    1151   ; //Send data to Transmit register
                    1152   ; I2C_Transmit = ADC_DAC_WRITE_ADDRESS;
0800077E  13FC 0092 1153          move.b    #146,4227078
08000782  0040 8006 
                    1154   ; //Set Command register
                    1155   ; I2C_Command = I2C_Slave_Write_Start_Command;
08000786  13FC 0091 1156          move.b    #145,4227080
0800078A  0040 8008 
                    1157   ; //Wait for TIP bit in Status Register 
                    1158   ; WaitForI2C_TIP();
0800078E  4E92      1159          jsr       (A2)
                    1160   ; //Wait RxACK bit in Status Register 
                    1161   ; WaitForI2C_RxACK();
08000790  4E93      1162          jsr       (A3)
                    1163   ; //Send data to Transmit register
                    1164   ; I2C_Transmit = ADC_ENABLE_COMMAND;
08000792  13FC 0044 1165          move.b    #68,4227078
08000796  0040 8006 
                    1166   ; //Set Command register
                    1167   ; I2C_Command = I2C_Slave_Write_Command;
0800079A  13FC 0011 1168          move.b    #17,4227080
0800079E  0040 8008 
                    1169   ; //Wait for TIP bit in Status Register 
                    1170   ; WaitForI2C_TIP();
080007A2  4E92      1171          jsr       (A2)
                    1172   ; //Wait RxACK bit in Status Register 
                    1173   ; WaitForI2C_RxACK();
080007A4  4E93      1174          jsr       (A3)
                    1175   ; //Send data to Transmit register
                    1176   ; I2C_Transmit = ADC_READ_ADDRESS;
080007A6  13FC 0093 1177          move.b    #147,4227078
080007AA  0040 8006 
                    1178   ; //Set Command register
                    1179   ; I2C_Command = I2C_Slave_Write_Start_Command;
080007AE  13FC 0091 1180          move.b    #145,4227080
080007B2  0040 8008 
                    1181   ; //Wait for TIP bit in Status Register 
                    1182   ; WaitForI2C_TIP();
080007B6  4E92      1183          jsr       (A2)
                    1184   ; //Wait RxACK bit in Status Register 
                    1185   ; WaitForI2C_RxACK();
080007B8  4E93      1186          jsr       (A3)
                    1187   ; //Set Command register to skip
                    1188   ; I2C_Command = I2C_Slave_Read_Command;
080007BA  13FC 0021 1189          move.b    #33,4227080
080007BE  0040 8008 
                    1190   ; //Wait for TIP bit in Status Register 
                    1191   ; WaitForI2C_TIP();
080007C2  4E92      1192          jsr       (A2)
                    1193   ; //Set Command register to skip
                    1194   ; I2C_Command = I2C_Slave_Read_Command;
080007C4  13FC 0021 1195          move.b    #33,4227080
080007C8  0040 8008 
                    1196   ; //Wait for TIP bit in Status Register 
                    1197   ; WaitForI2C_TIP();
080007CC  4E92      1198          jsr       (A2)
                    1199   ; //Grabbing read data from Receive Register for Thermistor
                    1200   ; c = I2C_Receive;
080007CE  1439 0040 1201          move.b    4227078,D2
080007D2  8006      
                    1202   ; temp = c;
080007D4  1D42 FFF9 1203          move.b    D2,-7(A6)
                    1204   ; //Set Command register to skip
                    1205   ; I2C_Command = I2C_Slave_Read_Command;
080007D8  13FC 0021 1206          move.b    #33,4227080
080007DC  0040 8008 
                    1207   ; //Wait for TIP bit in Status Register 
                    1208   ; WaitForI2C_TIP();
080007E0  4E92      1209          jsr       (A2)
                    1210   ; //Grabbing read data from Receive Register for Potentiometer
                    1211   ; c = I2C_Receive;
080007E2  1439 0040 1212          move.b    4227078,D2
080007E6  8006      
                    1213   ; potential = c;
080007E8  1D42 FFFB 1214          move.b    D2,-5(A6)
                    1215   ; //Set Command register to skip
                    1216   ; I2C_Command = I2C_Slave_Read_Command;
080007EC  13FC 0021 1217          move.b    #33,4227080
080007F0  0040 8008 
                    1218   ; //Wait for TIP bit in Status Register 
                    1219   ; WaitForI2C_TIP();
080007F4  4E92      1220          jsr       (A2)
                    1221   ; //Grabbing read data from Receive Register for Photo-resister
                    1222   ; c = I2C_Receive;
080007F6  1439 0040 1223          move.b    4227078,D2
080007FA  8006      
                    1224   ; light = c;
080007FC  1D42 FFFA 1225          move.b    D2,-6(A6)
                    1226   ; c = 0xFF; //Give garabage value after in case
08000800  143C 00FF 1227          move.b    #255,D2
                    1228   ; if(type == TEMP){
08000804  4A83      1229          tst.l     D3
08000806  6606      1230          bne.s     ADCWrite_1
                    1231   ; return temp;
08000808  102E FFF9 1232          move.b    -7(A6),D0
0800080C  601E      1233          bra.s     ADCWrite_3
                    1234   ADCWrite_1:
                    1235   ; }else if(type == POTENTIAL){
0800080E  0C83 0000 1236          cmp.l     #1,D3
08000812  0001      
08000814  6606      1237          bne.s     ADCWrite_4
                    1238   ; return potential;
08000816  102E FFFB 1239          move.b    -5(A6),D0
0800081A  6010      1240          bra.s     ADCWrite_3
                    1241   ADCWrite_4:
                    1242   ; }else if(type == LIGHT){
0800081C  0C83 0000 1243          cmp.l     #2,D3
08000820  0002      
08000822  6606      1244          bne.s     ADCWrite_6
                    1245   ; return light;
08000824  102E FFFA 1246          move.b    -6(A6),D0
08000828  6002      1247          bra.s     ADCWrite_3
                    1248   ADCWrite_6:
                    1249   ; }else{
                    1250   ; return c;
0800082A  1002      1251          move.b    D2,D0
                    1252   ADCWrite_3:
0800082C  4CDF 0C0C 1253          movem.l   (A7)+,D2/D3/A2/A3
08000830  4E5E      1254          unlk      A6
08000832  4E75      1255          rts
                    1256   ; }
                    1257   ; }
                    1258   _scanf:
08000834  4E56 FFFC 1259          link      A6,#-4
08000838  48E7 2000 1260          movem.l   D2,-(A7)
0800083C  41EE 0008 1261          lea       8(A6),A0
08000840  5848      1262          addq.w    #4,A0
08000842  2408      1263          move.l    A0,D2
08000844  2F02      1264          move.l    D2,-(A7)
08000846  2F2E 0008 1265          move.l    8(A6),-(A7)
0800084A  42A7      1266          clr.l     -(A7)
0800084C  6100 02C2 1267          bsr       _vsscanf
08000850  DEFC 000C 1268          add.w     #12,A7
08000854  2D40 FFFC 1269          move.l    D0,-4(A6)
08000858  4282      1270          clr.l     D2
0800085A  202E FFFC 1271          move.l    -4(A6),D0
0800085E  4CDF 0004 1272          movem.l   (A7)+,D2
08000862  4E5E      1273          unlk      A6
08000864  4E75      1274          rts
                    1275   @vsscanf_scanread:
08000866  4E56 FFFC 1276          link      A6,#-4
0800086A  48E7 0020 1277          movem.l   A2,-(A7)
0800086E  45F9 0800 1278          lea       @vsscanf_bufx,A2
08000872  1DBE      
08000874  4AAE 0008 1279          tst.l     8(A6)
08000878  6722      1280          beq.s     @vsscanf_scanread_1
0800087A  206E 0008 1281          move.l    8(A6),A0
0800087E  58AE 0008 1282          addq.l    #4,8(A6)
08000882  2050      1283          move.l    (A0),A0
08000884  1010      1284          move.b    (A0),D0
08000886  4880      1285          ext.w     D0
08000888  48C0      1286          ext.l     D0
0800088A  2D40 FFFC 1287          move.l    D0,-4(A6)
0800088E  6706      1288          beq.s     @vsscanf_scanread_3
08000890  202E FFFC 1289          move.l    -4(A6),D0
08000894  6002      1290          bra.s     @vsscanf_scanread_4
                    1291   @vsscanf_scanread_3:
08000896  70FF      1292          moveq     #-1,D0
                    1293   @vsscanf_scanread_4:
08000898  6000 0032 1294          bra       @vsscanf_scanread_5
                    1295   @vsscanf_scanread_1:
0800089C  2052      1296          move.l    (A2),A0
0800089E  1010      1297          move.b    (A0),D0
080008A0  6620      1298          bne.s     @vsscanf_scanread_6
080008A2  4879 0800 1299          pea       @vsscanf_buf
080008A6  1EEE      
080008A8  6100 0926 1300          bsr       _gets
080008AC  584F      1301          addq.w    #4,A7
080008AE  2480      1302          move.l    D0,(A2)
080008B0  4879 0800 1303          pea       @vsscanf_1
080008B4  1DC2      
080008B6  4879 0800 1304          pea       @vsscanf_buf
080008BA  1EEE      
080008BC  6100 09B2 1305          bsr       _strcat
080008C0  504F      1306          addq.w    #8,A7
                    1307   @vsscanf_scanread_6:
080008C2  2052      1308          move.l    (A2),A0
080008C4  5292      1309          addq.l    #1,(A2)
080008C6  1010      1310          move.b    (A0),D0
080008C8  4880      1311          ext.w     D0
080008CA  48C0      1312          ext.l     D0
                    1313   @vsscanf_scanread_5:
080008CC  4CDF 0400 1314          movem.l   (A7)+,A2
080008D0  4E5E      1315          unlk      A6
080008D2  4E75      1316          rts
                    1317   @vsscanf_scanputback:
080008D4  4E56 0000 1318          link      A6,#0
080008D8  48E7 3000 1319          movem.l   D2/D3,-(A7)
080008DC  242E 000C 1320          move.l    12(A6),D2
080008E0  262E 0008 1321          move.l    8(A6),D3
080008E4  6718      1322          beq.s     @vsscanf_scanputback_1
080008E6  0C82 FFFF 1323          cmp.l     #-1,D2
080008EA  FFFF      
080008EC  670A      1324          beq.s     @vsscanf_scanputback_3
080008EE  5983      1325          subq.l    #4,D3
080008F0  2043      1326          move.l    D3,A0
080008F2  2050      1327          move.l    (A0),A0
080008F4  1082      1328          move.b    D2,(A0)
080008F6  6004      1329          bra.s     @vsscanf_scanputback_4
                    1330   @vsscanf_scanputback_3:
080008F8  2043      1331          move.l    D3,A0
080008FA  5390      1332          subq.l    #1,(A0)
                    1333   @vsscanf_scanputback_4:
080008FC  602E      1334          bra.s     @vsscanf_scanputback_6
                    1335   @vsscanf_scanputback_1:
080008FE  41F9 0800 1336          lea       @vsscanf_buf,A0
08000902  1EEE      
08000904  2008      1337          move.l    A0,D0
08000906  B0B9 0800 1338          cmp.l     @vsscanf_bufx,D0
0800090A  1DBE      
0800090C  6610      1339          bne.s     @vsscanf_scanputback_5
0800090E  4239 0800 1340          clr.b     @vsscanf_buf
08000912  1EEE      
08000914  2F02      1341          move.l    D2,-(A7)
08000916  6100 099A 1342          bsr       _ungetch
0800091A  584F      1343          addq.w    #4,A7
0800091C  600E      1344          bra.s     @vsscanf_scanputback_6
                    1345   @vsscanf_scanputback_5:
0800091E  53B9 0800 1346          subq.l    #1,@vsscanf_bufx
08000922  1DBE      
08000924  2079 0800 1347          move.l    @vsscanf_bufx,A0
08000928  1DBE      
0800092A  1082      1348          move.b    D2,(A0)
                    1349   @vsscanf_scanputback_6:
0800092C  2002      1350          move.l    D2,D0
0800092E  4CDF 000C 1351          movem.l   (A7)+,D2/D3
08000932  4E5E      1352          unlk      A6
08000934  4E75      1353          rts
                    1354   @vsscanf_scanspace:
08000936  4E56 0000 1355          link      A6,#0
0800093A  48E7 2000 1356          movem.l   D2,-(A7)
                    1357   @vsscanf_scanspace_1:
0800093E  2F2E 0008 1358          move.l    8(A6),-(A7)
08000942  6100 FF22 1359          bsr       @vsscanf_scanread
08000946  584F      1360          addq.w    #4,A7
08000948  2400      1361          move.l    D0,D2
0800094A  206E 000C 1362          move.l    12(A6),A0
0800094E  5290      1363          addq.l    #1,(A0)
08000950  2042      1364          move.l    D2,A0
08000952  43F9 0800 1365          lea       __ctype,A1
08000956  1DC4      
08000958  1030 9801 1366          move.b    1(A0,A1.L),D0
0800095C  C03C 0010 1367          and.b     #16,D0
08000960  66DC      1368          bne       @vsscanf_scanspace_1
08000962  2002      1369          move.l    D2,D0
08000964  4CDF 0004 1370          movem.l   (A7)+,D2
08000968  4E5E      1371          unlk      A6
0800096A  4E75      1372          rts
                    1373   @vsscanf_scanselect:
0800096C  4E56 0000 1374          link      A6,#0
08000970  48E7 3F20 1375          movem.l   D2/D3/D4/D5/D6/D7/A2,-(A7)
08000974  262E 000C 1376          move.l    12(A6),D3
08000978  2C2E 0018 1377          move.l    24(A6),D6
0800097C  2E2E 0014 1378          move.l    20(A6),D7
08000980  2043      1379          move.l    D3,A0
08000982  1010      1380          move.b    (A0),D0
08000984  4880      1381          ext.w     D0
08000986  48C0      1382          ext.l     D0
08000988  0C80 0000 1383          cmp.l     #94,D0
0800098C  005E      
0800098E  6608      1384          bne.s     @vsscanf_scanselect_1
08000990  347C 0001 1385          move.w    #1,A2
08000994  5283      1386          addq.l    #1,D3
08000996  6004      1387          bra.s     @vsscanf_scanselect_2
                    1388   @vsscanf_scanselect_1:
08000998  347C 0000 1389          move.w    #0,A2
                    1390   @vsscanf_scanselect_2:
0800099C  202E 0010 1391          move.l    16(A6),D0
080009A0  53AE 0010 1392          subq.l    #1,16(A6)
080009A4  4A80      1393          tst.l     D0
080009A6  6700 0108 1394          beq       @vsscanf_scanselect_5
080009AA  2F2E 0008 1395          move.l    8(A6),-(A7)
080009AE  6100 FEB6 1396          bsr       @vsscanf_scanread
080009B2  584F      1397          addq.w    #4,A7
080009B4  2800      1398          move.l    D0,D4
080009B6  0C84 FFFF 1399          cmp.l     #-1,D4
080009BA  FFFF      
080009BC  6604      1400          bne.s     @vsscanf_scanselect_6
080009BE  6000 00F0 1401          bra       @vsscanf_scanselect_5
                    1402   @vsscanf_scanselect_6:
080009C2  206E 001C 1403          move.l    28(A6),A0
080009C6  5290      1404          addq.l    #1,(A0)
080009C8  4285      1405          clr.l     D5
080009CA  4282      1406          clr.l     D2
                    1407   @vsscanf_scanselect_8:
080009CC  2043      1408          move.l    D3,A0
080009CE  1030 2800 1409          move.b    0(A0,D2.L),D0
080009D2  4880      1410          ext.w     D0
080009D4  48C0      1411          ext.l     D0
080009D6  0C80 0000 1412          cmp.l     #93,D0
080009DA  005D      
080009DC  6700 008E 1413          beq       @vsscanf_scanselect_10
080009E0  4A82      1414          tst.l     D2
080009E2  6716      1415          beq.s     @vsscanf_scanselect_11
080009E4  2043      1416          move.l    D3,A0
080009E6  1030 2800 1417          move.b    0(A0,D2.L),D0
080009EA  4880      1418          ext.w     D0
080009EC  48C0      1419          ext.l     D0
080009EE  0C80 0000 1420          cmp.l     #93,D0
080009F2  005D      
080009F4  6604      1421          bne.s     @vsscanf_scanselect_11
080009F6  6000 0074 1422          bra       @vsscanf_scanselect_10
                    1423   @vsscanf_scanselect_11:
080009FA  4A82      1424          tst.l     D2
080009FC  6700 0058 1425          beq       @vsscanf_scanselect_15
08000A00  2043      1426          move.l    D3,A0
08000A02  1030 2800 1427          move.b    0(A0,D2.L),D0
08000A06  4880      1428          ext.w     D0
08000A08  48C0      1429          ext.l     D0
08000A0A  0C80 0000 1430          cmp.l     #45,D0
08000A0E  002D      
08000A10  6600 0044 1431          bne       @vsscanf_scanselect_15
08000A14  2043      1432          move.l    D3,A0
08000A16  2002      1433          move.l    D2,D0
08000A18  5380      1434          subq.l    #1,D0
08000A1A  2243      1435          move.l    D3,A1
08000A1C  2F08      1436          move.l    A0,-(A7)
08000A1E  2042      1437          move.l    D2,A0
08000A20  1230 0800 1438          move.b    0(A0,D0.L),D1
08000A24  B230 9801 1439          cmp.b     1(A0,A1.L),D1
08000A28  6C00 002C 1440          bge       @vsscanf_scanselect_15
08000A2C  205F      1441          move.l    (A7)+,A0
08000A2E  2043      1442          move.l    D3,A0
08000A30  2002      1443          move.l    D2,D0
08000A32  5380      1444          subq.l    #1,D0
08000A34  1030 0800 1445          move.b    0(A0,D0.L),D0
08000A38  4880      1446          ext.w     D0
08000A3A  48C0      1447          ext.l     D0
08000A3C  B880      1448          cmp.l     D0,D4
08000A3E  6D12      1449          blt.s     @vsscanf_scanselect_17
08000A40  2043      1450          move.l    D3,A0
08000A42  2242      1451          move.l    D2,A1
08000A44  1031 8801 1452          move.b    1(A1,A0.L),D0
08000A48  4880      1453          ext.w     D0
08000A4A  48C0      1454          ext.l     D0
08000A4C  B880      1455          cmp.l     D0,D4
08000A4E  6E02      1456          bgt.s     @vsscanf_scanselect_17
08000A50  601A      1457          bra.s     @vsscanf_scanselect_10
                    1458   @vsscanf_scanselect_17:
08000A52  5282      1459          addq.l    #1,D2
08000A54  6010      1460          bra.s     @vsscanf_scanselect_19
                    1461   @vsscanf_scanselect_15:
08000A56  2043      1462          move.l    D3,A0
08000A58  1030 2800 1463          move.b    0(A0,D2.L),D0
08000A5C  4880      1464          ext.w     D0
08000A5E  48C0      1465          ext.l     D0
08000A60  B880      1466          cmp.l     D0,D4
08000A62  6602      1467          bne.s     @vsscanf_scanselect_19
08000A64  6006      1468          bra.s     @vsscanf_scanselect_10
                    1469   @vsscanf_scanselect_19:
08000A66  5282      1470          addq.l    #1,D2
08000A68  6000 FF62 1471          bra       @vsscanf_scanselect_8
                    1472   @vsscanf_scanselect_10:
08000A6C  4A82      1473          tst.l     D2
08000A6E  6712      1474          beq.s     @vsscanf_scanselect_23
08000A70  2043      1475          move.l    D3,A0
08000A72  1030 2800 1476          move.b    0(A0,D2.L),D0
08000A76  4880      1477          ext.w     D0
08000A78  48C0      1478          ext.l     D0
08000A7A  0C80 0000 1479          cmp.l     #93,D0
08000A7E  005D      
08000A80  6702      1480          beq.s     @vsscanf_scanselect_21
                    1481   @vsscanf_scanselect_23:
08000A82  7A01      1482          moveq     #1,D5
                    1483   @vsscanf_scanselect_21:
08000A84  200A      1484          move.l    A2,D0
08000A86  6712      1485          beq.s     @vsscanf_scanselect_24
08000A88  4A85      1486          tst.l     D5
08000A8A  660C      1487          bne.s     @vsscanf_scanselect_26
08000A8C  4A87      1488          tst.l     D7
08000A8E  6606      1489          bne.s     @vsscanf_scanselect_28
08000A90  2046      1490          move.l    D6,A0
08000A92  5286      1491          addq.l    #1,D6
08000A94  1084      1492          move.b    D4,(A0)
                    1493   @vsscanf_scanselect_28:
08000A96  6014      1494          bra.s     @vsscanf_scanselect_4
                    1495   @vsscanf_scanselect_26:
08000A98  6016      1496          bra.s     @vsscanf_scanselect_5
                    1497   @vsscanf_scanselect_24:
08000A9A  4A85      1498          tst.l     D5
08000A9C  670C      1499          beq.s     @vsscanf_scanselect_30
08000A9E  4A87      1500          tst.l     D7
08000AA0  6606      1501          bne.s     @vsscanf_scanselect_32
08000AA2  2046      1502          move.l    D6,A0
08000AA4  5286      1503          addq.l    #1,D6
08000AA6  1084      1504          move.b    D4,(A0)
                    1505   @vsscanf_scanselect_32:
08000AA8  6002      1506          bra.s     @vsscanf_scanselect_4
                    1507   @vsscanf_scanselect_30:
08000AAA  6004      1508          bra.s     @vsscanf_scanselect_5
                    1509   @vsscanf_scanselect_4:
08000AAC  6000 FEEE 1510          bra       @vsscanf_scanselect_2
                    1511   @vsscanf_scanselect_5:
08000AB0  0C84 FFFF 1512          cmp.l     #-1,D4
08000AB4  FFFF      
08000AB6  6712      1513          beq.s     @vsscanf_scanselect_34
08000AB8  2F04      1514          move.l    D4,-(A7)
08000ABA  2F2E 0008 1515          move.l    8(A6),-(A7)
08000ABE  6100 FE14 1516          bsr       @vsscanf_scanputback
08000AC2  504F      1517          addq.w    #8,A7
08000AC4  206E 001C 1518          move.l    28(A6),A0
08000AC8  5390      1519          subq.l    #1,(A0)
                    1520   @vsscanf_scanselect_34:
08000ACA  4A87      1521          tst.l     D7
08000ACC  6604      1522          bne.s     @vsscanf_scanselect_36
08000ACE  2046      1523          move.l    D6,A0
08000AD0  4210      1524          clr.b     (A0)
                    1525   @vsscanf_scanselect_36:
08000AD2  5283      1526          addq.l    #1,D3
08000AD4  2043      1527          move.l    D3,A0
08000AD6  1010      1528          move.b    (A0),D0
08000AD8  4880      1529          ext.w     D0
08000ADA  48C0      1530          ext.l     D0
08000ADC  0C80 0000 1531          cmp.l     #93,D0
08000AE0  005D      
08000AE2  6702      1532          beq.s     @vsscanf_scanselect_40
08000AE4  60EC      1533          bra       @vsscanf_scanselect_36
                    1534   @vsscanf_scanselect_40:
08000AE6  5283      1535          addq.l    #1,D3
08000AE8  2003      1536          move.l    D3,D0
08000AEA  4CDF 04FC 1537          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2
08000AEE  4E5E      1538          unlk      A6
08000AF0  4E75      1539          rts
                    1540   _scanflush:
08000AF2  41F9 0800 1541          lea       @vsscanf_buf,A0
08000AF6  1EEE      
08000AF8  23C8 0800 1542          move.l    A0,@vsscanf_bufx
08000AFC  1DBE      
08000AFE  4239 0800 1543          clr.b     @vsscanf_buf
08000B02  1EEE      
08000B04  4878 FFFF 1544          pea       -1
08000B08  6100 07A8 1545          bsr       _ungetch
08000B0C  584F      1546          addq.w    #4,A7
08000B0E  4E75      1547          rts
                    1548   _vsscanf:
08000B10  4E56 FF88 1549          link      A6,#-120
08000B14  48E7 3F3C 1550          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000B18  47F9 0800 1551          lea       @vsscanf_scanread,A3
08000B1C  0866      
08000B1E  4AAE 0008 1552          tst.l     8(A6)
08000B22  6706      1553          beq.s     vsscanf_1
08000B24  41EE 0008 1554          lea       8(A6),A0
08000B28  6004      1555          bra.s     vsscanf_2
                    1556   vsscanf_1:
08000B2A  4280      1557          clr.l     D0
08000B2C  2040      1558          move.l    D0,A0
                    1559   vsscanf_2:
08000B2E  2A08      1560          move.l    A0,D5
08000B30  42AE FFE4 1561          clr.l     -28(A6)
08000B34  4284      1562          clr.l     D4
                    1563   vsscanf_3:
08000B36  206E 000C 1564          move.l    12(A6),A0
08000B3A  52AE 000C 1565          addq.l    #1,12(A6)
08000B3E  1010      1566          move.b    (A0),D0
08000B40  4880      1567          ext.w     D0
08000B42  48C0      1568          ext.l     D0
08000B44  2600      1569          move.l    D0,D3
08000B46  6700 05AC 1570          beq       vsscanf_5
08000B4A  4286      1571          clr.l     D6
08000B4C  387C 0000 1572          move.w    #0,A4
08000B50  0C83 0000 1573          cmp.l     #32,D3
08000B54  0020      
08000B56  6712      1574          beq.s     vsscanf_8
08000B58  0C83 0000 1575          cmp.l     #9,D3
08000B5C  0009      
08000B5E  670A      1576          beq.s     vsscanf_8
08000B60  0C83 0000 1577          cmp.l     #10,D3
08000B64  000A      
08000B66  6600 0048 1578          bne       vsscanf_6
                    1579   vsscanf_8:
08000B6A  2F05      1580          move.l    D5,-(A7)
08000B6C  4E93      1581          jsr       (A3)
08000B6E  584F      1582          addq.w    #4,A7
08000B70  2400      1583          move.l    D0,D2
08000B72  52AE FFE4 1584          addq.l    #1,-28(A6)
08000B76  0C82 FFFF 1585          cmp.l     #-1,D2
08000B7A  FFFF      
08000B7C  660E      1586          bne.s     vsscanf_11
08000B7E  4A84      1587          tst.l     D4
08000B80  6704      1588          beq.s     vsscanf_13
08000B82  2004      1589          move.l    D4,D0
08000B84  6002      1590          bra.s     vsscanf_14
                    1591   vsscanf_13:
08000B86  70FF      1592          moveq     #-1,D0
                    1593   vsscanf_14:
08000B88  6000 056C 1594          bra       vsscanf_15
                    1595   vsscanf_11:
08000B8C  2042      1596          move.l    D2,A0
08000B8E  43F9 0800 1597          lea       __ctype,A1
08000B92  1DC4      
08000B94  1030 9801 1598          move.b    1(A0,A1.L),D0
08000B98  C03C 0010 1599          and.b     #16,D0
08000B9C  66CC      1600          bne       vsscanf_8
08000B9E  53AE FFE4 1601          subq.l    #1,-28(A6)
08000BA2  2F02      1602          move.l    D2,-(A7)
08000BA4  2F05      1603          move.l    D5,-(A7)
08000BA6  6100 FD2C 1604          bsr       @vsscanf_scanputback
08000BAA  504F      1605          addq.w    #8,A7
08000BAC  6000 0542 1606          bra       vsscanf_139
                    1607   vsscanf_6:
08000BB0  0C83 0000 1608          cmp.l     #37,D3
08000BB4  0025      
08000BB6  6600 0502 1609          bne       vsscanf_127
08000BBA  206E 000C 1610          move.l    12(A6),A0
08000BBE  52AE 000C 1611          addq.l    #1,12(A6)
08000BC2  1010      1612          move.b    (A0),D0
08000BC4  4880      1613          ext.w     D0
08000BC6  48C0      1614          ext.l     D0
08000BC8  2600      1615          move.l    D0,D3
08000BCA  42AE FFEC 1616          clr.l     -20(A6)
08000BCE  4286      1617          clr.l     D6
08000BD0  42AE FFE8 1618          clr.l     -24(A6)
08000BD4  347C 7FFF 1619          move.w    #32767,A2
08000BD8  0C83 0000 1620          cmp.l     #42,D3
08000BDC  002A      
08000BDE  6612      1621          bne.s     vsscanf_18
08000BE0  7C01      1622          moveq     #1,D6
08000BE2  206E 000C 1623          move.l    12(A6),A0
08000BE6  52AE 000C 1624          addq.l    #1,12(A6)
08000BEA  1010      1625          move.b    (A0),D0
08000BEC  4880      1626          ext.w     D0
08000BEE  48C0      1627          ext.l     D0
08000BF0  2600      1628          move.l    D0,D3
                    1629   vsscanf_18:
08000BF2  2043      1630          move.l    D3,A0
08000BF4  43F9 0800 1631          lea       __ctype,A1
08000BF8  1DC4      
08000BFA  1030 9801 1632          move.b    1(A0,A1.L),D0
08000BFE  C03C 0004 1633          and.b     #4,D0
08000C02  6700 004E 1634          beq       vsscanf_24
08000C06  2003      1635          move.l    D3,D0
08000C08  0480 0000 1636          sub.l     #48,D0
08000C0C  0030      
08000C0E  2440      1637          move.l    D0,A2
                    1638   vsscanf_22:
08000C10  206E 000C 1639          move.l    12(A6),A0
08000C14  52AE 000C 1640          addq.l    #1,12(A6)
08000C18  1010      1641          move.b    (A0),D0
08000C1A  4880      1642          ext.w     D0
08000C1C  48C0      1643          ext.l     D0
08000C1E  2600      1644          move.l    D0,D3
08000C20  2040      1645          move.l    D0,A0
08000C22  43F9 0800 1646          lea       __ctype,A1
08000C26  1DC4      
08000C28  1030 9801 1647          move.b    1(A0,A1.L),D0
08000C2C  C0BC 0000 1648          and.l     #255,D0
08000C30  00FF      
08000C32  C0BC 0000 1649          and.l     #4,D0
08000C36  0004      
08000C38  6718      1650          beq.s     vsscanf_24
08000C3A  70D0      1651          moveq     #-48,D0
08000C3C  2F0A      1652          move.l    A2,-(A7)
08000C3E  4878 000A 1653          pea       10
08000C42  6100 04FE 1654          bsr       LMUL
08000C46  2217      1655          move.l    (A7),D1
08000C48  504F      1656          addq.w    #8,A7
08000C4A  D283      1657          add.l     D3,D1
08000C4C  D081      1658          add.l     D1,D0
08000C4E  2440      1659          move.l    D0,A2
08000C50  60BE      1660          bra       vsscanf_22
                    1661   vsscanf_24:
08000C52  0C83 0000 1662          cmp.l     #108,D3
08000C56  006C      
08000C58  6708      1663          beq.s     vsscanf_27
08000C5A  0C83 0000 1664          cmp.l     #76,D3
08000C5E  004C      
08000C60  661A      1665          bne.s     vsscanf_25
                    1666   vsscanf_27:
08000C62  2D7C 0000 1667          move.l    #1,-24(A6)
08000C66  0001 FFE8 
08000C6A  206E 000C 1668          move.l    12(A6),A0
08000C6E  52AE 000C 1669          addq.l    #1,12(A6)
08000C72  1010      1670          move.b    (A0),D0
08000C74  4880      1671          ext.w     D0
08000C76  48C0      1672          ext.l     D0
08000C78  2600      1673          move.l    D0,D3
08000C7A  6020      1674          bra.s     vsscanf_28
                    1675   vsscanf_25:
08000C7C  0C83 0000 1676          cmp.l     #104,D3
08000C80  0068      
08000C82  6618      1677          bne.s     vsscanf_28
08000C84  2D7C 0000 1678          move.l    #1,-20(A6)
08000C88  0001 FFEC 
08000C8C  206E 000C 1679          move.l    12(A6),A0
08000C90  52AE 000C 1680          addq.l    #1,12(A6)
08000C94  1010      1681          move.b    (A0),D0
08000C96  4880      1682          ext.w     D0
08000C98  48C0      1683          ext.l     D0
08000C9A  2600      1684          move.l    D0,D3
                    1685   vsscanf_28:
08000C9C  0C83 0000 1686          cmp.l     #91,D3
08000CA0  005B      
08000CA2  6600 0036 1687          bne       vsscanf_30
08000CA6  4A86      1688          tst.l     D6
08000CA8  660A      1689          bne.s     vsscanf_32
08000CAA  206E 0010 1690          move.l    16(A6),A0
08000CAE  58AE 0010 1691          addq.l    #4,16(A6)
08000CB2  2E10      1692          move.l    (A0),D7
                    1693   vsscanf_32:
08000CB4  486E FFE4 1694          pea       -28(A6)
08000CB8  2F07      1695          move.l    D7,-(A7)
08000CBA  2F06      1696          move.l    D6,-(A7)
08000CBC  2F0A      1697          move.l    A2,-(A7)
08000CBE  2F2E 000C 1698          move.l    12(A6),-(A7)
08000CC2  2F05      1699          move.l    D5,-(A7)
08000CC4  6100 FCA6 1700          bsr       @vsscanf_scanselect
08000CC8  DEFC 0018 1701          add.w     #24,A7
08000CCC  2D40 000C 1702          move.l    D0,12(A6)
08000CD0  4A86      1703          tst.l     D6
08000CD2  6602      1704          bne.s     vsscanf_34
08000CD4  5284      1705          addq.l    #1,D4
                    1706   vsscanf_34:
08000CD6  6000 0418 1707          bra       vsscanf_139
                    1708   vsscanf_30:
08000CDA  0C83 0000 1709          cmp.l     #110,D3
08000CDE  006E      
08000CE0  661A      1710          bne.s     vsscanf_36
08000CE2  4A86      1711          tst.l     D6
08000CE4  6612      1712          bne.s     vsscanf_38
08000CE6  206E 0010 1713          move.l    16(A6),A0
08000CEA  58AE 0010 1714          addq.l    #4,16(A6)
08000CEE  2E10      1715          move.l    (A0),D7
08000CF0  2047      1716          move.l    D7,A0
08000CF2  20AE FFE4 1717          move.l    -28(A6),(A0)
08000CF6  5284      1718          addq.l    #1,D4
                    1719   vsscanf_38:
08000CF8  6000 03F6 1720          bra       vsscanf_139
                    1721   vsscanf_36:
08000CFC  0C83 0000 1722          cmp.l     #115,D3
08000D00  0073      
08000D02  6600 00AC 1723          bne       vsscanf_40
08000D06  486E FFE4 1724          pea       -28(A6)
08000D0A  2F05      1725          move.l    D5,-(A7)
08000D0C  6100 FC28 1726          bsr       @vsscanf_scanspace
08000D10  504F      1727          addq.w    #8,A7
08000D12  2400      1728          move.l    D0,D2
08000D14  4A86      1729          tst.l     D6
08000D16  660A      1730          bne.s     vsscanf_42
08000D18  206E 0010 1731          move.l    16(A6),A0
08000D1C  58AE 0010 1732          addq.l    #4,16(A6)
08000D20  2E10      1733          move.l    (A0),D7
                    1734   vsscanf_42:
08000D22  52AE FFE4 1735          addq.l    #1,-28(A6)
                    1736   vsscanf_44:
08000D26  200A      1737          move.l    A2,D0
08000D28  534A      1738          subq.w    #1,A2
08000D2A  4A80      1739          tst.l     D0
08000D2C  6700 0038 1740          beq       vsscanf_46
08000D30  2042      1741          move.l    D2,A0
08000D32  43F9 0800 1742          lea       __ctype,A1
08000D36  1DC4      
08000D38  1030 9801 1743          move.b    1(A0,A1.L),D0
08000D3C  C03C 0010 1744          and.b     #16,D0
08000D40  6624      1745          bne.s     vsscanf_46
08000D42  0C82 FFFF 1746          cmp.l     #-1,D2
08000D46  FFFF      
08000D48  671C      1747          beq.s     vsscanf_46
08000D4A  387C 0001 1748          move.w    #1,A4
08000D4E  4A86      1749          tst.l     D6
08000D50  6606      1750          bne.s     vsscanf_47
08000D52  2047      1751          move.l    D7,A0
08000D54  5287      1752          addq.l    #1,D7
08000D56  1082      1753          move.b    D2,(A0)
                    1754   vsscanf_47:
08000D58  2F05      1755          move.l    D5,-(A7)
08000D5A  4E93      1756          jsr       (A3)
08000D5C  584F      1757          addq.w    #4,A7
08000D5E  2400      1758          move.l    D0,D2
08000D60  52AE FFE4 1759          addq.l    #1,-28(A6)
08000D64  60C0      1760          bra       vsscanf_44
                    1761   vsscanf_46:
08000D66  4A86      1762          tst.l     D6
08000D68  660A      1763          bne.s     vsscanf_51
08000D6A  2047      1764          move.l    D7,A0
08000D6C  4210      1765          clr.b     (A0)
08000D6E  200C      1766          move.l    A4,D0
08000D70  6702      1767          beq.s     vsscanf_51
08000D72  5284      1768          addq.l    #1,D4
                    1769   vsscanf_51:
08000D74  0C82 FFFF 1770          cmp.l     #-1,D2
08000D78  FFFF      
08000D7A  6708      1771          beq.s     vsscanf_55
08000D7C  4A86      1772          tst.l     D6
08000D7E  661E      1773          bne.s     vsscanf_53
08000D80  200C      1774          move.l    A4,D0
08000D82  661A      1775          bne.s     vsscanf_53
                    1776   vsscanf_55:
08000D84  4A84      1777          tst.l     D4
08000D86  6704      1778          beq.s     vsscanf_56
08000D88  2004      1779          move.l    D4,D0
08000D8A  600E      1780          bra.s     vsscanf_59
                    1781   vsscanf_56:
08000D8C  0C82 FFFF 1782          cmp.l     #-1,D2
08000D90  FFFF      
08000D92  6604      1783          bne.s     vsscanf_58
08000D94  70FF      1784          moveq     #-1,D0
08000D96  6002      1785          bra.s     vsscanf_59
                    1786   vsscanf_58:
08000D98  2004      1787          move.l    D4,D0
                    1788   vsscanf_59:
08000D9A  6000 035A 1789          bra       vsscanf_15
                    1790   vsscanf_53:
08000D9E  53AE FFE4 1791          subq.l    #1,-28(A6)
08000DA2  2F02      1792          move.l    D2,-(A7)
08000DA4  2F05      1793          move.l    D5,-(A7)
08000DA6  6100 FB2C 1794          bsr       @vsscanf_scanputback
08000DAA  504F      1795          addq.w    #8,A7
08000DAC  6000 0342 1796          bra       vsscanf_139
                    1797   vsscanf_40:
08000DB0  0C83 0000 1798          cmp.l     #99,D3
08000DB4  0063      
08000DB6  6600 008E 1799          bne       vsscanf_60
08000DBA  4A86      1800          tst.l     D6
08000DBC  660A      1801          bne.s     vsscanf_62
08000DBE  206E 0010 1802          move.l    16(A6),A0
08000DC2  58AE 0010 1803          addq.l    #4,16(A6)
08000DC6  2E10      1804          move.l    (A0),D7
                    1805   vsscanf_62:
08000DC8  2F05      1806          move.l    D5,-(A7)
08000DCA  4E93      1807          jsr       (A3)
08000DCC  584F      1808          addq.w    #4,A7
08000DCE  2400      1809          move.l    D0,D2
08000DD0  52AE FFE4 1810          addq.l    #1,-28(A6)
08000DD4  200A      1811          move.l    A2,D0
08000DD6  0C80 0000 1812          cmp.l     #32767,D0
08000DDA  7FFF      
08000DDC  6604      1813          bne.s     vsscanf_64
08000DDE  347C 0001 1814          move.w    #1,A2
                    1815   vsscanf_64:
08000DE2  0C82 FFFF 1816          cmp.l     #-1,D2
08000DE6  FFFF      
08000DE8  6606      1817          bne.s     vsscanf_66
08000DEA  4A86      1818          tst.l     D6
08000DEC  6602      1819          bne.s     vsscanf_66
08000DEE  5384      1820          subq.l    #1,D4
                    1821   vsscanf_66:
08000DF0  200A      1822          move.l    A2,D0
08000DF2  534A      1823          subq.w    #1,A2
08000DF4  4A80      1824          tst.l     D0
08000DF6  6720      1825          beq.s     vsscanf_70
08000DF8  0C82 FFFF 1826          cmp.l     #-1,D2
08000DFC  FFFF      
08000DFE  6718      1827          beq.s     vsscanf_70
08000E00  4A86      1828          tst.l     D6
08000E02  6606      1829          bne.s     vsscanf_71
08000E04  2047      1830          move.l    D7,A0
08000E06  5287      1831          addq.l    #1,D7
08000E08  1082      1832          move.b    D2,(A0)
                    1833   vsscanf_71:
08000E0A  2F05      1834          move.l    D5,-(A7)
08000E0C  4E93      1835          jsr       (A3)
08000E0E  584F      1836          addq.w    #4,A7
08000E10  2400      1837          move.l    D0,D2
08000E12  52AE FFE4 1838          addq.l    #1,-28(A6)
08000E16  60D8      1839          bra       vsscanf_66
                    1840   vsscanf_70:
08000E18  0C82 FFFF 1841          cmp.l     #-1,D2
08000E1C  FFFF      
08000E1E  660E      1842          bne.s     vsscanf_73
08000E20  4A84      1843          tst.l     D4
08000E22  6704      1844          beq.s     vsscanf_75
08000E24  2004      1845          move.l    D4,D0
08000E26  6002      1846          bra.s     vsscanf_76
                    1847   vsscanf_75:
08000E28  70FF      1848          moveq     #-1,D0
                    1849   vsscanf_76:
08000E2A  6000 02CA 1850          bra       vsscanf_15
                    1851   vsscanf_73:
08000E2E  4A86      1852          tst.l     D6
08000E30  6602      1853          bne.s     vsscanf_77
08000E32  5284      1854          addq.l    #1,D4
                    1855   vsscanf_77:
08000E34  53AE FFE4 1856          subq.l    #1,-28(A6)
08000E38  2F02      1857          move.l    D2,-(A7)
08000E3A  2F05      1858          move.l    D5,-(A7)
08000E3C  6100 FA96 1859          bsr       @vsscanf_scanputback
08000E40  504F      1860          addq.w    #8,A7
08000E42  6000 02AC 1861          bra       vsscanf_139
                    1862   vsscanf_60:
08000E46  0C83 0000 1863          cmp.l     #105,D3
08000E4A  0069      
08000E4C  6600 0060 1864          bne       vsscanf_82
08000E50  486E FFE4 1865          pea       -28(A6)
08000E54  2F05      1866          move.l    D5,-(A7)
08000E56  6100 FADE 1867          bsr       @vsscanf_scanspace
08000E5A  504F      1868          addq.w    #8,A7
08000E5C  2400      1869          move.l    D0,D2
08000E5E  0C82 0000 1870          cmp.l     #48,D2
08000E62  0030      
08000E64  6600 0038 1871          bne       vsscanf_81
08000E68  387C 0001 1872          move.w    #1,A4
08000E6C  2F05      1873          move.l    D5,-(A7)
08000E6E  4E93      1874          jsr       (A3)
08000E70  584F      1875          addq.w    #4,A7
08000E72  2400      1876          move.l    D0,D2
08000E74  2F02      1877          move.l    D2,-(A7)
08000E76  6100 03CC 1878          bsr       _tolower
08000E7A  584F      1879          addq.w    #4,A7
08000E7C  0C80 0000 1880          cmp.l     #120,D0
08000E80  0078      
08000E82  6604      1881          bne.s     vsscanf_83
08000E84  7678      1882          moveq     #120,D3
08000E86  6010      1883          bra.s     vsscanf_84
                    1884   vsscanf_83:
08000E88  53AE FFE4 1885          subq.l    #1,-28(A6)
08000E8C  2F02      1886          move.l    D2,-(A7)
08000E8E  2F05      1887          move.l    D5,-(A7)
08000E90  6100 FA42 1888          bsr       @vsscanf_scanputback
08000E94  504F      1889          addq.w    #8,A7
08000E96  766F      1890          moveq     #111,D3
                    1891   vsscanf_84:
08000E98  52AE FFE4 1892          addq.l    #1,-28(A6)
08000E9C  6010      1893          bra.s     vsscanf_82
                    1894   vsscanf_81:
08000E9E  53AE FFE4 1895          subq.l    #1,-28(A6)
08000EA2  2F02      1896          move.l    D2,-(A7)
08000EA4  2F05      1897          move.l    D5,-(A7)
08000EA6  6100 FA2C 1898          bsr       @vsscanf_scanputback
08000EAA  504F      1899          addq.w    #8,A7
08000EAC  7664      1900          moveq     #100,D3
                    1901   vsscanf_82:
08000EAE  0C83 0000 1902          cmp.l     #100,D3
08000EB2  0064      
08000EB4  671A      1903          beq.s     vsscanf_87
08000EB6  0C83 0000 1904          cmp.l     #117,D3
08000EBA  0075      
08000EBC  6712      1905          beq.s     vsscanf_87
08000EBE  0C83 0000 1906          cmp.l     #120,D3
08000EC2  0078      
08000EC4  670A      1907          beq.s     vsscanf_87
08000EC6  0C83 0000 1908          cmp.l     #111,D3
08000ECA  006F      
08000ECC  6600 01A4 1909          bne       vsscanf_85
                    1910   vsscanf_87:
08000ED0  486E FFE4 1911          pea       -28(A6)
08000ED4  2F05      1912          move.l    D5,-(A7)
08000ED6  6100 FA5E 1913          bsr       @vsscanf_scanspace
08000EDA  504F      1914          addq.w    #8,A7
08000EDC  2400      1915          move.l    D0,D2
08000EDE  2D7C 0000 1916          move.l    #10,-4(A6)
08000EE2  000A FFFC 
08000EE6  0C83 0000 1917          cmp.l     #120,D3
08000EEA  0078      
08000EEC  6608      1918          bne.s     vsscanf_88
08000EEE  2D7C 0000 1919          move.l    #16,-4(A6)
08000EF2  0010 FFFC 
                    1920   vsscanf_88:
08000EF6  0C83 0000 1921          cmp.l     #111,D3
08000EFA  006F      
08000EFC  6608      1922          bne.s     vsscanf_90
08000EFE  2D7C 0000 1923          move.l    #8,-4(A6)
08000F02  0008 FFFC 
                    1924   vsscanf_90:
08000F06  4A86      1925          tst.l     D6
08000F08  660A      1926          bne.s     vsscanf_92
08000F0A  206E 0010 1927          move.l    16(A6),A0
08000F0E  58AE 0010 1928          addq.l    #4,16(A6)
08000F12  2E10      1929          move.l    (A0),D7
                    1930   vsscanf_92:
08000F14  42AE FFE0 1931          clr.l     -32(A6)
08000F18  52AE FFE4 1932          addq.l    #1,-28(A6)
08000F1C  0C83 0000 1933          cmp.l     #117,D3
08000F20  0075      
08000F22  6720      1934          beq.s     vsscanf_94
08000F24  0C82 0000 1935          cmp.l     #45,D2
08000F28  002D      
08000F2A  6618      1936          bne.s     vsscanf_94
08000F2C  2F05      1937          move.l    D5,-(A7)
08000F2E  4E93      1938          jsr       (A3)
08000F30  584F      1939          addq.w    #4,A7
08000F32  2400      1940          move.l    D0,D2
08000F34  52AE FFE4 1941          addq.l    #1,-28(A6)
08000F38  2D7C 0000 1942          move.l    #1,-32(A6)
08000F3C  0001 FFE0 
08000F40  387C 0001 1943          move.w    #1,A4
                    1944   vsscanf_94:
08000F44  3A7C 0000 1945          move.w    #0,A5
08000F48  0C82 FFFF 1946          cmp.l     #-1,D2
08000F4C  FFFF      
08000F4E  660E      1947          bne.s     vsscanf_96
08000F50  4A84      1948          tst.l     D4
08000F52  6704      1949          beq.s     vsscanf_98
08000F54  2004      1950          move.l    D4,D0
08000F56  6002      1951          bra.s     vsscanf_99
                    1952   vsscanf_98:
08000F58  70FF      1953          moveq     #-1,D0
                    1954   vsscanf_99:
08000F5A  6000 019A 1955          bra       vsscanf_15
                    1956   vsscanf_96:
08000F5E  200A      1957          move.l    A2,D0
08000F60  534A      1958          subq.w    #1,A2
08000F62  4A80      1959          tst.l     D0
08000F64  6700 0090 1960          beq       vsscanf_102
08000F68  0C83 0000 1961          cmp.l     #120,D3
08000F6C  0078      
08000F6E  6620      1962          bne.s     vsscanf_104
08000F70  2F02      1963          move.l    D2,-(A7)
08000F72  6100 0312 1964          bsr       _toupper
08000F76  584F      1965          addq.w    #4,A7
08000F78  0C80 0000 1966          cmp.l     #65,D0
08000F7C  0041      
08000F7E  6D10      1967          blt.s     vsscanf_104
08000F80  2F02      1968          move.l    D2,-(A7)
08000F82  6100 0302 1969          bsr       _toupper
08000F86  584F      1970          addq.w    #4,A7
08000F88  0C80 0000 1971          cmp.l     #70,D0
08000F8C  0046      
08000F8E  6F14      1972          ble.s     vsscanf_103
                    1973   vsscanf_104:
08000F90  2042      1974          move.l    D2,A0
08000F92  43F9 0800 1975          lea       __ctype,A1
08000F96  1DC4      
08000F98  1030 9801 1976          move.b    1(A0,A1.L),D0
08000F9C  C03C 0004 1977          and.b     #4,D0
08000FA0  6700 0054 1978          beq       vsscanf_102
                    1979   vsscanf_103:
08000FA4  2042      1980          move.l    D2,A0
08000FA6  43F9 0800 1981          lea       __ctype,A1
08000FAA  1DC4      
08000FAC  1030 9801 1982          move.b    1(A0,A1.L),D0
08000FB0  C03C 0004 1983          and.b     #4,D0
08000FB4  6614      1984          bne.s     vsscanf_105
08000FB6  70F9      1985          moveq     #-7,D0
08000FB8  2F00      1986          move.l    D0,-(A7)
08000FBA  2F02      1987          move.l    D2,-(A7)
08000FBC  6100 02C8 1988          bsr       _toupper
08000FC0  584F      1989          addq.w    #4,A7
08000FC2  2200      1990          move.l    D0,D1
08000FC4  201F      1991          move.l    (A7)+,D0
08000FC6  D081      1992          add.l     D1,D0
08000FC8  2400      1993          move.l    D0,D2
                    1994   vsscanf_105:
08000FCA  2F0D      1995          move.l    A5,-(A7)
08000FCC  2F2E FFFC 1996          move.l    -4(A6),-(A7)
08000FD0  6100 0170 1997          bsr       LMUL
08000FD4  2017      1998          move.l    (A7),D0
08000FD6  504F      1999          addq.w    #8,A7
08000FD8  D082      2000          add.l     D2,D0
08000FDA  0480 0000 2001          sub.l     #48,D0
08000FDE  0030      
08000FE0  2A40      2002          move.l    D0,A5
08000FE2  2F05      2003          move.l    D5,-(A7)
08000FE4  4E93      2004          jsr       (A3)
08000FE6  584F      2005          addq.w    #4,A7
08000FE8  2400      2006          move.l    D0,D2
08000FEA  52AE FFE4 2007          addq.l    #1,-28(A6)
08000FEE  387C 0001 2008          move.w    #1,A4
08000FF2  6000 FF6A 2009          bra       vsscanf_96
                    2010   vsscanf_102:
08000FF6  0C82 FFFF 2011          cmp.l     #-1,D2
08000FFA  FFFF      
08000FFC  671A      2012          beq.s     vsscanf_107
08000FFE  2F02      2013          move.l    D2,-(A7)
08001000  2F05      2014          move.l    D5,-(A7)
08001002  6100 F8D0 2015          bsr       @vsscanf_scanputback
08001006  504F      2016          addq.w    #8,A7
08001008  53AE FFE4 2017          subq.l    #1,-28(A6)
0800100C  200C      2018          move.l    A4,D0
0800100E  6606      2019          bne.s     vsscanf_109
08001010  2004      2020          move.l    D4,D0
08001012  6000 00E2 2021          bra       vsscanf_15
                    2022   vsscanf_109:
08001016  6012      2023          bra.s     vsscanf_111
                    2024   vsscanf_107:
08001018  200C      2025          move.l    A4,D0
0800101A  660E      2026          bne.s     vsscanf_111
0800101C  4A84      2027          tst.l     D4
0800101E  6704      2028          beq.s     vsscanf_113
08001020  2004      2029          move.l    D4,D0
08001022  6002      2030          bra.s     vsscanf_114
                    2031   vsscanf_113:
08001024  70FF      2032          moveq     #-1,D0
                    2033   vsscanf_114:
08001026  6000 00CE 2034          bra       vsscanf_15
                    2035   vsscanf_111:
0800102A  4AAE FFE0 2036          tst.l     -32(A6)
0800102E  6706      2037          beq.s     vsscanf_115
08001030  200D      2038          move.l    A5,D0
08001032  4480      2039          neg.l     D0
08001034  2A40      2040          move.l    D0,A5
                    2041   vsscanf_115:
08001036  4A86      2042          tst.l     D6
08001038  661E      2043          bne.s     vsscanf_117
0800103A  4AAE FFE8 2044          tst.l     -24(A6)
0800103E  6706      2045          beq.s     vsscanf_119
08001040  2047      2046          move.l    D7,A0
08001042  208D      2047          move.l    A5,(A0)
08001044  6010      2048          bra.s     vsscanf_122
                    2049   vsscanf_119:
08001046  4AAE FFEC 2050          tst.l     -20(A6)
0800104A  6706      2051          beq.s     vsscanf_121
0800104C  2047      2052          move.l    D7,A0
0800104E  308D      2053          move.w    A5,(A0)
08001050  6004      2054          bra.s     vsscanf_122
                    2055   vsscanf_121:
08001052  2047      2056          move.l    D7,A0
08001054  208D      2057          move.l    A5,(A0)
                    2058   vsscanf_122:
08001056  5284      2059          addq.l    #1,D4
                    2060   vsscanf_117:
08001058  0C82 FFFF 2061          cmp.l     #-1,D2
0800105C  FFFF      
0800105E  660E      2062          bne.s     vsscanf_123
08001060  4A84      2063          tst.l     D4
08001062  6704      2064          beq.s     vsscanf_125
08001064  2004      2065          move.l    D4,D0
08001066  6002      2066          bra.s     vsscanf_126
                    2067   vsscanf_125:
08001068  70FF      2068          moveq     #-1,D0
                    2069   vsscanf_126:
0800106A  6000 008A 2070          bra       vsscanf_15
                    2071   vsscanf_123:
0800106E  6000 0080 2072          bra       vsscanf_139
                    2073   vsscanf_85:
08001072  0C83 0000 2074          cmp.l     #37,D3
08001076  0025      
08001078  6600 0040 2075          bne       vsscanf_127
0800107C  2F05      2076          move.l    D5,-(A7)
0800107E  4E93      2077          jsr       (A3)
08001080  584F      2078          addq.w    #4,A7
08001082  2400      2079          move.l    D0,D2
08001084  0C82 FFFF 2080          cmp.l     #-1,D2
08001088  FFFF      
0800108A  660E      2081          bne.s     vsscanf_129
0800108C  4A84      2082          tst.l     D4
0800108E  6704      2083          beq.s     vsscanf_131
08001090  2004      2084          move.l    D4,D0
08001092  6002      2085          bra.s     vsscanf_132
                    2086   vsscanf_131:
08001094  70FF      2087          moveq     #-1,D0
                    2088   vsscanf_132:
08001096  6000 005E 2089          bra       vsscanf_15
                    2090   vsscanf_129:
0800109A  52AE FFE4 2091          addq.l    #1,-28(A6)
0800109E  B483      2092          cmp.l     D3,D2
080010A0  6714      2093          beq.s     vsscanf_133
080010A2  2F02      2094          move.l    D2,-(A7)
080010A4  2F05      2095          move.l    D5,-(A7)
080010A6  6100 F82C 2096          bsr       @vsscanf_scanputback
080010AA  504F      2097          addq.w    #8,A7
080010AC  53AE FFE4 2098          subq.l    #1,-28(A6)
080010B0  2004      2099          move.l    D4,D0
080010B2  6000 0042 2100          bra       vsscanf_15
                    2101   vsscanf_133:
080010B6  6000 0038 2102          bra       vsscanf_139
                    2103   vsscanf_127:
080010BA  2F05      2104          move.l    D5,-(A7)
080010BC  4E93      2105          jsr       (A3)
080010BE  584F      2106          addq.w    #4,A7
080010C0  2400      2107          move.l    D0,D2
080010C2  52AE FFE4 2108          addq.l    #1,-28(A6)
080010C6  0C82 FFFF 2109          cmp.l     #-1,D2
080010CA  FFFF      
080010CC  660C      2110          bne.s     vsscanf_135
080010CE  4A84      2111          tst.l     D4
080010D0  6704      2112          beq.s     vsscanf_137
080010D2  2004      2113          move.l    D4,D0
080010D4  6002      2114          bra.s     vsscanf_138
                    2115   vsscanf_137:
080010D6  70FF      2116          moveq     #-1,D0
                    2117   vsscanf_138:
080010D8  601C      2118          bra.s     vsscanf_15
                    2119   vsscanf_135:
080010DA  B483      2120          cmp.l     D3,D2
080010DC  6712      2121          beq.s     vsscanf_139
080010DE  2F02      2122          move.l    D2,-(A7)
080010E0  2F05      2123          move.l    D5,-(A7)
080010E2  6100 F7F0 2124          bsr       @vsscanf_scanputback
080010E6  504F      2125          addq.w    #8,A7
080010E8  53AE FFE4 2126          subq.l    #1,-28(A6)
080010EC  2004      2127          move.l    D4,D0
080010EE  6006      2128          bra.s     vsscanf_15
                    2129   vsscanf_139:
080010F0  6000 FA44 2130          bra       vsscanf_3
                    2131   vsscanf_5:
080010F4  2004      2132          move.l    D4,D0
                    2133   vsscanf_15:
080010F6  4CDF 3CFC 2134          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
080010FA  4E5E      2135          unlk      A6
080010FC  4E75      2136          rts
                    2137   _printf:
080010FE  4E56 FFFC 2138          link      A6,#-4
08001102  48E7 2000 2139          movem.l   D2,-(A7)
08001106  41EE 0008 2140          lea       8(A6),A0
0800110A  5848      2141          addq.w    #4,A0
0800110C  2408      2142          move.l    A0,D2
0800110E  2F02      2143          move.l    D2,-(A7)
08001110  2F2E 0008 2144          move.l    8(A6),-(A7)
08001114  42A7      2145          clr.l     -(A7)
08001116  6100 0260 2146          bsr       _vsprintf
0800111A  DEFC 000C 2147          add.w     #12,A7
0800111E  2D40 FFFC 2148          move.l    D0,-4(A6)
08001122  4282      2149          clr.l     D2
08001124  202E FFFC 2150          move.l    -4(A6),D0
08001128  4CDF 0004 2151          movem.l   (A7)+,D2
0800112C  4E5E      2152          unlk      A6
0800112E  4E75      2153          rts
                    2154   ULMUL:
08001130  4E56 0000 2155          link    A6,#0
08001134  48E7 C000 2156          movem.l D0/D1,-(A7)
08001138  222E 0008 2157          move.l  8(A6),D1
0800113C  202E 000C 2158          move.l  12(A6),D0
08001140  602C      2159          bra.s   lmul_3
                    2160   LMUL:
08001142  4E56 0000 2161          link    A6,#0
08001146  48E7 C000 2162          movem.l D0/D1,-(A7)
0800114A  222E 0008 2163          move.l  8(A6),D1
0800114E  202E 000C 2164          move.l  12(A6),D0
08001152  4A80      2165          tst.l   D0
08001154  6A0A      2166          bpl.s   lmul_1
08001156  4480      2167          neg.l   D0
08001158  4A81      2168          tst.l   D1
0800115A  6A0A      2169          bpl.s   lmul_2
0800115C  4481      2170          neg.l   D1
0800115E  600E      2171          bra.s   lmul_3
                    2172   lmul_1:
08001160  4A81      2173          tst.l   D1
08001162  6A0A      2174          bpl.s   lmul_3
08001164  4481      2175          neg.l   D1
                    2176   lmul_2:
08001166  6114      2177          bsr.s   domul
08001168  4481      2178          neg.l   D1
0800116A  4080      2179          negx.l  D0
0800116C  6002      2180          bra.s   lmul_4
                    2181   lmul_3:
0800116E  610C      2182          bsr.s   domul
                    2183   lmul_4:
08001170  2D41 0008 2184          move.l  D1,8(A6)
08001174  4CDF 0003 2185          movem.l (A7)+,D0/D1
08001178  4E5E      2186          unlk    A6
0800117A  4E75      2187          rts
                    2188   domul:
0800117C  0C81 0000 2189          cmpi.l  #$FFFF,D1
08001180  FFFF      
08001182  620C      2190          bhi.s   domul_1
08001184  0C80 0000 2191          cmpi.l  #$FFFF,D0
08001188  FFFF      
0800118A  620E      2192          bhi.s   domul_2
0800118C  C2C0      2193          mulu    D0,D1
0800118E  4E75      2194          rts
                    2195   domul_1:
08001190  0C80 0000 2196          cmpi.l  #$FFFF,D0
08001194  FFFF      
08001196  6218      2197          bhi.s   domul_4
08001198  6002      2198          bra.s   domul_3
                    2199   domul_2
0800119A  C141      2200          exg     D0,D1
                    2201   domul_3:
0800119C  2F02      2202          move.l  D2,-(A7)
0800119E  2401      2203          move.l  D1,D2
080011A0  4842      2204          swap    D2
080011A2  C2C0      2205          mulu    D0,D1
080011A4  C4C0      2206          mulu    D0,D2
080011A6  4842      2207          swap    D2
080011A8  4242      2208          clr.w   D2
080011AA  D282      2209          add.l   D2,D1
080011AC  241F      2210          move.l  (A7)+,D2
080011AE  4E75      2211          rts
                    2212   domul_4:
080011B0  48E7 3000 2213          movem.l D2/D3,-(A7)
080011B4  2401      2214          move.l  D1,D2
080011B6  2601      2215          move.l  D1,D3
080011B8  C2C0      2216          mulu    D0,D1
080011BA  4842      2217          swap    D2
080011BC  C4C0      2218          mulu    D0,D2
080011BE  4840      2219          swap    D0
080011C0  C6C0      2220          mulu    D0,D3
080011C2  D483      2221          add.l   D3,D2
080011C4  4842      2222          swap    D2
080011C6  4242      2223          clr.w   D2
080011C8  D282      2224          add.l   D2,D1
080011CA  4CDF 000C 2225          movem.l (A7)+,D2/D3
080011CE  4E75      2226          rts
                    2227   _gets:
080011D0  4E56 0000 2228          link      A6,#0
080011D4  48E7 3820 2229          movem.l   D2/D3/D4/A2,-(A7)
080011D8  45F9 0800 2230          lea       _putch,A2
080011DC  19DC      
080011DE  282E 0008 2231          move.l    8(A6),D4
080011E2  2404      2232          move.l    D4,D2
                    2233   gets_1:
080011E4  6100 0826 2234          bsr       _getch
080011E8  2600      2235          move.l    D0,D3
080011EA  0C80 0000 2236          cmp.l     #10,D0
080011EE  000A      
080011F0  6700 003C 2237          beq       gets_3
080011F4  0C83 0000 2238          cmp.l     #8,D3
080011F8  0008      
080011FA  6712      2239          beq.s     gets_4
080011FC  2042      2240          move.l    D2,A0
080011FE  5282      2241          addq.l    #1,D2
08001200  1083      2242          move.b    D3,(A0)
08001202  4883      2243          ext.w     D3
08001204  48C3      2244          ext.l     D3
08001206  2F03      2245          move.l    D3,-(A7)
08001208  4E92      2246          jsr       (A2)
0800120A  584F      2247          addq.w    #4,A7
0800120C  601E      2248          bra.s     gets_6
                    2249   gets_4:
0800120E  B484      2250          cmp.l     D4,D2
08001210  631A      2251          bls.s     gets_6
08001212  4878 0008 2252          pea       8
08001216  4E92      2253          jsr       (A2)
08001218  584F      2254          addq.w    #4,A7
0800121A  4878 0020 2255          pea       32
0800121E  4E92      2256          jsr       (A2)
08001220  584F      2257          addq.w    #4,A7
08001222  4878 0008 2258          pea       8
08001226  4E92      2259          jsr       (A2)
08001228  584F      2260          addq.w    #4,A7
0800122A  5382      2261          subq.l    #1,D2
                    2262   gets_6:
0800122C  60B6      2263          bra       gets_1
                    2264   gets_3:
0800122E  4878 000A 2265          pea       10
08001232  4E92      2266          jsr       (A2)
08001234  584F      2267          addq.w    #4,A7
08001236  2042      2268          move.l    D2,A0
08001238  4210      2269          clr.b     (A0)
0800123A  2004      2270          move.l    D4,D0
0800123C  4CDF 041C 2271          movem.l   (A7)+,D2/D3/D4/A2
08001240  4E5E      2272          unlk      A6
08001242  4E75      2273          rts
                    2274   _tolower:
08001244  4E56 0000 2275          link      A6,#0
08001248  48E7 2000 2276          movem.l   D2,-(A7)
0800124C  242E 0008 2277          move.l    8(A6),D2
08001250  0C82 0000 2278          cmp.l     #65,D2
08001254  0041      
08001256  6D0E      2279          blt.s     tolower_1
08001258  0C82 0000 2280          cmp.l     #90,D2
0800125C  005A      
0800125E  6E06      2281          bgt.s     tolower_1
08001260  84BC 0000 2282          or.l      #32,D2
08001264  0020      
                    2283   tolower_1:
08001266  2002      2284          move.l    D2,D0
08001268  4CDF 0004 2285          movem.l   (A7)+,D2
0800126C  4E5E      2286          unlk      A6
0800126E  4E75      2287          rts
                    2288   _strcat:
08001270  206F 0004 2289          move.l    (4,A7),A0	
08001274  226F 0008 2290          move.l    (8,A7),A1	
08001278  2008      2291          move.l    A0,D0		
                    2292   strcat_0:
0800127A  4A18      2293          tst.b     (A0)+
0800127C  66FC      2294          bne       strcat_0
0800127E  5348      2295          subq      #1,A0
                    2296   strcat_1:
08001280  10D9      2297          move.b    (A1)+,(A0)+
08001282  66FC      2298          bne       strcat_1
08001284  4E75      2299          rts
                    2300   _toupper:
08001286  4E56 0000 2301          link      A6,#0
0800128A  48E7 2000 2302          movem.l   D2,-(A7)
0800128E  242E 0008 2303          move.l    8(A6),D2
08001292  0C82 0000 2304          cmp.l     #97,D2
08001296  0061      
08001298  6D0E      2305          blt.s     toupper_1
0800129A  0C82 0000 2306          cmp.l     #122,D2
0800129E  007A      
080012A0  6E06      2307          bgt.s     toupper_1
080012A2  C4BC 0000 2308          and.l     #95,D2
080012A6  005F      
                    2309   toupper_1:
080012A8  2002      2310          move.l    D2,D0
080012AA  4CDF 0004 2311          movem.l   (A7)+,D2
080012AE  4E5E      2312          unlk      A6
080012B0  4E75      2313          rts
                    2314   _ungetch:
080012B2  4E56 0000 2315          link      A6,#0
080012B6  23EE 0008 2316          move.l    8(A6),__ungetbuf
080012BA  0800 1DB2 
080012BE  202E 0008 2317          move.l    8(A6),D0
080012C2  4E5E      2318          unlk      A6
080012C4  4E75      2319          rts
                    2320   @vsprintf_copy:
080012C6  4E56 0000 2321          link      A6,#0
080012CA  206E 0008 2322          move.l    8(A6),A0
080012CE  4A90      2323          tst.l     (A0)
080012D0  6710      2324          beq.s     @vsprintf_copy_1
080012D2  202E 000C 2325          move.l    12(A6),D0
080012D6  206E 0008 2326          move.l    8(A6),A0
080012DA  2250      2327          move.l    (A0),A1
080012DC  5290      2328          addq.l    #1,(A0)
080012DE  1280      2329          move.b    D0,(A1)
080012E0  600A      2330          bra.s     @vsprintf_copy_2
                    2331   @vsprintf_copy_1:
080012E2  2F2E 000C 2332          move.l    12(A6),-(A7)
080012E6  6100 06F4 2333          bsr       _putch
080012EA  584F      2334          addq.w    #4,A7
                    2335   @vsprintf_copy_2:
080012EC  4E5E      2336          unlk      A6
080012EE  4E75      2337          rts
                    2338   @vsprintf_getval:
080012F0  4E56 0000 2339          link      A6,#0
080012F4  48E7 3000 2340          movem.l   D2/D3,-(A7)
080012F8  242E 0008 2341          move.l    8(A6),D2
080012FC  4283      2342          clr.l     D3
080012FE  2042      2343          move.l    D2,A0
08001300  2050      2344          move.l    (A0),A0
08001302  1010      2345          move.b    (A0),D0
08001304  4880      2346          ext.w     D0
08001306  48C0      2347          ext.l     D0
08001308  0C80 0000 2348          cmp.l     #42,D0
0800130C  002A      
0800130E  6612      2349          bne.s     @vsprintf_getval_1
08001310  206E 000C 2350          move.l    12(A6),A0
08001314  2250      2351          move.l    (A0),A1
08001316  5890      2352          addq.l    #4,(A0)
08001318  2611      2353          move.l    (A1),D3
0800131A  2042      2354          move.l    D2,A0
0800131C  5290      2355          addq.l    #1,(A0)
0800131E  6000 004E 2356          bra       @vsprintf_getval_5
                    2357   @vsprintf_getval_1:
08001322  2042      2358          move.l    D2,A0
08001324  2050      2359          move.l    (A0),A0
08001326  1010      2360          move.b    (A0),D0
08001328  4880      2361          ext.w     D0
0800132A  48C0      2362          ext.l     D0
0800132C  0C80 0000 2363          cmp.l     #48,D0
08001330  0030      
08001332  6D00 003A 2364          blt       @vsprintf_getval_5
08001336  2042      2365          move.l    D2,A0
08001338  2050      2366          move.l    (A0),A0
0800133A  1010      2367          move.b    (A0),D0
0800133C  4880      2368          ext.w     D0
0800133E  48C0      2369          ext.l     D0
08001340  0C80 0000 2370          cmp.l     #57,D0
08001344  0039      
08001346  6E26      2371          bgt.s     @vsprintf_getval_5
08001348  2F03      2372          move.l    D3,-(A7)
0800134A  4878 000A 2373          pea       10
0800134E  6100 FDF2 2374          bsr       LMUL
08001352  2017      2375          move.l    (A7),D0
08001354  504F      2376          addq.w    #8,A7
08001356  2042      2377          move.l    D2,A0
08001358  2250      2378          move.l    (A0),A1
0800135A  5290      2379          addq.l    #1,(A0)
0800135C  1211      2380          move.b    (A1),D1
0800135E  4881      2381          ext.w     D1
08001360  48C1      2382          ext.l     D1
08001362  D081      2383          add.l     D1,D0
08001364  0480 0000 2384          sub.l     #48,D0
08001368  0030      
0800136A  2600      2385          move.l    D0,D3
0800136C  60B4      2386          bra       @vsprintf_getval_1
                    2387   @vsprintf_getval_5:
0800136E  2003      2388          move.l    D3,D0
08001370  4CDF 000C 2389          movem.l   (A7)+,D2/D3
08001374  4E5E      2390          unlk      A6
08001376  4E75      2391          rts
                    2392   _vsprintf:
08001378  4E56 FFCC 2393          link      A6,#-52
0800137C  48E7 3F3C 2394          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08001380  45EE 0008 2395          lea       8(A6),A2
08001384  47F9 0800 2396          lea       @vsprintf_copy,A3
08001388  12C6      
0800138A  49F9 0800 2397          lea       _ultoa,A4
0800138E  1B3E      
08001390  4286      2398          clr.l     D6
                    2399   vsprintf_1:
08001392  206E 000C 2400          move.l    12(A6),A0
08001396  4A10      2401          tst.b     (A0)
08001398  6700 0624 2402          beq       vsprintf_3
0800139C  206E 000C 2403          move.l    12(A6),A0
080013A0  1010      2404          move.b    (A0),D0
080013A2  4880      2405          ext.w     D0
080013A4  48C0      2406          ext.l     D0
080013A6  0C80 0000 2407          cmp.l     #37,D0
080013AA  0025      
080013AC  671C      2408          beq.s     vsprintf_4
080013AE  206E 000C 2409          move.l    12(A6),A0
080013B2  52AE 000C 2410          addq.l    #1,12(A6)
080013B6  1210      2411          move.b    (A0),D1
080013B8  4881      2412          ext.w     D1
080013BA  48C1      2413          ext.l     D1
080013BC  2F01      2414          move.l    D1,-(A7)
080013BE  2F0A      2415          move.l    A2,-(A7)
080013C0  4E93      2416          jsr       (A3)
080013C2  504F      2417          addq.w    #8,A7
080013C4  5286      2418          addq.l    #1,D6
080013C6  6000 05F2 2419          bra       vsprintf_2
                    2420   vsprintf_4:
080013CA  52AE 000C 2421          addq.l    #1,12(A6)
080013CE  422E FFD3 2422          clr.b     -45(A6)
080013D2  422E FFD2 2423          clr.b     -46(A6)
080013D6  422E FFD0 2424          clr.b     -48(A6)
080013DA  422E FFCF 2425          clr.b     -49(A6)
080013DE  422E FFCE 2426          clr.b     -50(A6)
080013E2  422E FFCD 2427          clr.b     -51(A6)
080013E6  42AE FFFC 2428          clr.l     -4(A6)
080013EA  7AFF      2429          moveq     #-1,D5
080013EC  41EE FFDC 2430          lea       -36(A6),A0
080013F0  2608      2431          move.l    A0,D3
080013F2  2408      2432          move.l    A0,D2
                    2433   vsprintf_6:
080013F4  206E 000C 2434          move.l    12(A6),A0
080013F8  1010      2435          move.b    (A0),D0
080013FA  4880      2436          ext.w     D0
080013FC  48C0      2437          ext.l     D0
080013FE  0C80 0000 2438          cmp.l     #43,D0
08001402  002B      
08001404  6730      2439          beq.s     vsprintf_12
08001406  6E18      2440          bgt.s     vsprintf_15
08001408  0C80 0000 2441          cmp.l     #35,D0
0800140C  0023      
0800140E  6700 003E 2442          beq       vsprintf_14
08001412  6E00 0046 2443          bgt       vsprintf_9
08001416  0C80 0000 2444          cmp.l     #32,D0
0800141A  0020      
0800141C  6724      2445          beq.s     vsprintf_13
0800141E  603A      2446          bra.s     vsprintf_9
                    2447   vsprintf_15:
08001420  0C80 0000 2448          cmp.l     #45,D0
08001424  002D      
08001426  6702      2449          beq.s     vsprintf_11
08001428  6030      2450          bra.s     vsprintf_9
                    2451   vsprintf_11:
0800142A  1D7C 0001 2452          move.b    #1,-51(A6)
0800142E  FFCD      
08001430  52AE 000C 2453          addq.l    #1,12(A6)
08001434  6026      2454          bra.s     vsprintf_7
                    2455   vsprintf_12:
08001436  1D7C 0001 2456          move.b    #1,-50(A6)
0800143A  FFCE      
0800143C  52AE 000C 2457          addq.l    #1,12(A6)
08001440  601A      2458          bra.s     vsprintf_7
                    2459   vsprintf_13:
08001442  1D7C 0001 2460          move.b    #1,-49(A6)
08001446  FFCF      
08001448  52AE 000C 2461          addq.l    #1,12(A6)
0800144C  600E      2462          bra.s     vsprintf_7
                    2463   vsprintf_14:
0800144E  1D7C 0001 2464          move.b    #1,-48(A6)
08001452  FFD0      
08001454  52AE 000C 2465          addq.l    #1,12(A6)
08001458  6002      2466          bra.s     vsprintf_7
                    2467   vsprintf_9:
0800145A  6002      2468          bra.s     vsprintf_8
                    2469   vsprintf_7:
0800145C  6096      2470          bra       vsprintf_6
                    2471   vsprintf_8:
0800145E  206E 000C 2472          move.l    12(A6),A0
08001462  1010      2473          move.b    (A0),D0
08001464  4880      2474          ext.w     D0
08001466  48C0      2475          ext.l     D0
08001468  0C80 0000 2476          cmp.l     #48,D0
0800146C  0030      
0800146E  660A      2477          bne.s     vsprintf_16
08001470  52AE 000C 2478          addq.l    #1,12(A6)
08001474  1D7C 0001 2479          move.b    #1,-46(A6)
08001478  FFD2      
                    2480   vsprintf_16:
0800147A  486E 0010 2481          pea       16(A6)
0800147E  486E 000C 2482          pea       12(A6)
08001482  6100 FE6C 2483          bsr       @vsprintf_getval
08001486  504F      2484          addq.w    #8,A7
08001488  2A40      2485          move.l    D0,A5
0800148A  206E 000C 2486          move.l    12(A6),A0
0800148E  1010      2487          move.b    (A0),D0
08001490  4880      2488          ext.w     D0
08001492  48C0      2489          ext.l     D0
08001494  0C80 0000 2490          cmp.l     #46,D0
08001498  002E      
0800149A  6614      2491          bne.s     vsprintf_18
0800149C  52AE 000C 2492          addq.l    #1,12(A6)
080014A0  486E 0010 2493          pea       16(A6)
080014A4  486E 000C 2494          pea       12(A6)
080014A8  6100 FE46 2495          bsr       @vsprintf_getval
080014AC  504F      2496          addq.w    #8,A7
080014AE  2A00      2497          move.l    D0,D5
                    2498   vsprintf_18:
080014B0  206E 000C 2499          move.l    12(A6),A0
080014B4  1010      2500          move.b    (A0),D0
080014B6  4880      2501          ext.w     D0
080014B8  48C0      2502          ext.l     D0
080014BA  0C80 0000 2503          cmp.l     #108,D0
080014BE  006C      
080014C0  660A      2504          bne.s     vsprintf_20
080014C2  52AE 000C 2505          addq.l    #1,12(A6)
080014C6  1D7C 0001 2506          move.b    #1,-45(A6)
080014CA  FFD3      
                    2507   vsprintf_20:
080014CC  206E 000C 2508          move.l    12(A6),A0
080014D0  1010      2509          move.b    (A0),D0
080014D2  4880      2510          ext.w     D0
080014D4  48C0      2511          ext.l     D0
080014D6  0C80 0000 2512          cmp.l     #111,D0
080014DA  006F      
080014DC  6700 00D4 2513          beq       vsprintf_27
080014E0  6E34      2514          bgt.s     vsprintf_33
080014E2  0C80 0000 2515          cmp.l     #100,D0
080014E6  0064      
080014E8  6700 0054 2516          beq       vsprintf_24
080014EC  6E1C      2517          bgt.s     vsprintf_34
080014EE  0C80 0000 2518          cmp.l     #99,D0
080014F2  0063      
080014F4  6700 012C 2519          beq       vsprintf_30
080014F8  6E00 016A 2520          bgt       vsprintf_22
080014FC  0C80 0000 2521          cmp.l     #88,D0
08001500  0058      
08001502  6700 00E6 2522          beq       vsprintf_28
08001506  6000 015C 2523          bra       vsprintf_22
                    2524   vsprintf_34:
0800150A  0C80 0000 2525          cmp.l     #105,D0
0800150E  0069      
08001510  672C      2526          beq.s     vsprintf_24
08001512  6000 0150 2527          bra       vsprintf_22
                    2528   vsprintf_33:
08001516  0C80 0000 2529          cmp.l     #117,D0
0800151A  0075      
0800151C  6700 005C 2530          beq       vsprintf_26
08001520  6E0E      2531          bgt.s     vsprintf_35
08001522  0C80 0000 2532          cmp.l     #115,D0
08001526  0073      
08001528  6700 011C 2533          beq       vsprintf_31
0800152C  6000 0136 2534          bra       vsprintf_22
                    2535   vsprintf_35:
08001530  0C80 0000 2536          cmp.l     #120,D0
08001534  0078      
08001536  6700 00B2 2537          beq       vsprintf_28
0800153A  6000 0128 2538          bra       vsprintf_22
                    2539   vsprintf_24:
0800153E  4A2E FFD3 2540          tst.b     -45(A6)
08001542  671A      2541          beq.s     vsprintf_36
08001544  4878 000A 2542          pea       10
08001548  2F03      2543          move.l    D3,-(A7)
0800154A  206E 0010 2544          move.l    16(A6),A0
0800154E  58AE 0010 2545          addq.l    #4,16(A6)
08001552  2F10      2546          move.l    (A0),-(A7)
08001554  6100 0564 2547          bsr       _ltoa
08001558  DEFC 000C 2548          add.w     #12,A7
0800155C  6018      2549          bra.s     vsprintf_37
                    2550   vsprintf_36:
0800155E  4878 000A 2551          pea       10
08001562  2F03      2552          move.l    D3,-(A7)
08001564  206E 0010 2553          move.l    16(A6),A0
08001568  58AE 0010 2554          addq.l    #4,16(A6)
0800156C  2F10      2555          move.l    (A0),-(A7)
0800156E  6100 054A 2556          bsr       _ltoa
08001572  DEFC 000C 2557          add.w     #12,A7
                    2558   vsprintf_37:
08001576  6000 00FA 2559          bra       vsprintf_23
                    2560   vsprintf_26:
0800157A  4A2E FFD3 2561          tst.b     -45(A6)
0800157E  6718      2562          beq.s     vsprintf_38
08001580  4878 000A 2563          pea       10
08001584  2F03      2564          move.l    D3,-(A7)
08001586  206E 0010 2565          move.l    16(A6),A0
0800158A  58AE 0010 2566          addq.l    #4,16(A6)
0800158E  2F10      2567          move.l    (A0),-(A7)
08001590  4E94      2568          jsr       (A4)
08001592  DEFC 000C 2569          add.w     #12,A7
08001596  6016      2570          bra.s     vsprintf_39
                    2571   vsprintf_38:
08001598  4878 000A 2572          pea       10
0800159C  2F03      2573          move.l    D3,-(A7)
0800159E  206E 0010 2574          move.l    16(A6),A0
080015A2  58AE 0010 2575          addq.l    #4,16(A6)
080015A6  2F10      2576          move.l    (A0),-(A7)
080015A8  4E94      2577          jsr       (A4)
080015AA  DEFC 000C 2578          add.w     #12,A7
                    2579   vsprintf_39:
080015AE  6000 00C2 2580          bra       vsprintf_23
                    2581   vsprintf_27:
080015B2  4A2E FFD3 2582          tst.b     -45(A6)
080015B6  6718      2583          beq.s     vsprintf_40
080015B8  4878 0008 2584          pea       8
080015BC  2F03      2585          move.l    D3,-(A7)
080015BE  206E 0010 2586          move.l    16(A6),A0
080015C2  58AE 0010 2587          addq.l    #4,16(A6)
080015C6  2F10      2588          move.l    (A0),-(A7)
080015C8  4E94      2589          jsr       (A4)
080015CA  DEFC 000C 2590          add.w     #12,A7
080015CE  6016      2591          bra.s     vsprintf_41
                    2592   vsprintf_40:
080015D0  4878 0008 2593          pea       8
080015D4  2F03      2594          move.l    D3,-(A7)
080015D6  206E 0010 2595          move.l    16(A6),A0
080015DA  58AE 0010 2596          addq.l    #4,16(A6)
080015DE  2F10      2597          move.l    (A0),-(A7)
080015E0  4E94      2598          jsr       (A4)
080015E2  DEFC 000C 2599          add.w     #12,A7
                    2600   vsprintf_41:
080015E6  6000 008A 2601          bra       vsprintf_23
                    2602   vsprintf_28:
080015EA  4A2E FFD3 2603          tst.b     -45(A6)
080015EE  6718      2604          beq.s     vsprintf_42
080015F0  4878 0010 2605          pea       16
080015F4  2F03      2606          move.l    D3,-(A7)
080015F6  206E 0010 2607          move.l    16(A6),A0
080015FA  58AE 0010 2608          addq.l    #4,16(A6)
080015FE  2F10      2609          move.l    (A0),-(A7)
08001600  4E94      2610          jsr       (A4)
08001602  DEFC 000C 2611          add.w     #12,A7
08001606  6016      2612          bra.s     vsprintf_43
                    2613   vsprintf_42:
08001608  4878 0010 2614          pea       16
0800160C  2F03      2615          move.l    D3,-(A7)
0800160E  206E 0010 2616          move.l    16(A6),A0
08001612  58AE 0010 2617          addq.l    #4,16(A6)
08001616  2F10      2618          move.l    (A0),-(A7)
08001618  4E94      2619          jsr       (A4)
0800161A  DEFC 000C 2620          add.w     #12,A7
                    2621   vsprintf_43:
0800161E  6000 0052 2622          bra       vsprintf_23
                    2623   vsprintf_30:
08001622  206E 0010 2624          move.l    16(A6),A0
08001626  58AE 0010 2625          addq.l    #4,16(A6)
0800162A  2010      2626          move.l    (A0),D0
0800162C  2042      2627          move.l    D2,A0
0800162E  5282      2628          addq.l    #1,D2
08001630  1080      2629          move.b    D0,(A0)
08001632  2042      2630          move.l    D2,A0
08001634  4210      2631          clr.b     (A0)
08001636  200D      2632          move.l    A5,D0
08001638  6704      2633          beq.s     vsprintf_44
0800163A  200D      2634          move.l    A5,D0
0800163C  6002      2635          bra.s     vsprintf_45
                    2636   vsprintf_44:
0800163E  7001      2637          moveq     #1,D0
                    2638   vsprintf_45:
08001640  2A00      2639          move.l    D0,D5
08001642  6000 002E 2640          bra       vsprintf_23
                    2641   vsprintf_31:
08001646  206E 0010 2642          move.l    16(A6),A0
0800164A  58AE 0010 2643          addq.l    #4,16(A6)
0800164E  2610      2644          move.l    (A0),D3
08001650  0C85 FFFF 2645          cmp.l     #-1,D5
08001654  FFFF      
08001656  660A      2646          bne.s     vsprintf_46
08001658  2F03      2647          move.l    D3,-(A7)
0800165A  6100 0544 2648          bsr       _strlen
0800165E  584F      2649          addq.w    #4,A7
08001660  2A00      2650          move.l    D0,D5
                    2651   vsprintf_46:
08001662  600E      2652          bra.s     vsprintf_23
                    2653   vsprintf_22:
08001664  206E 000C 2654          move.l    12(A6),A0
08001668  2242      2655          move.l    D2,A1
0800166A  5282      2656          addq.l    #1,D2
0800166C  1290      2657          move.b    (A0),(A1)
0800166E  2042      2658          move.l    D2,A0
08001670  4210      2659          clr.b     (A0)
                    2660   vsprintf_23:
08001672  2F03      2661          move.l    D3,-(A7)
08001674  6100 052A 2662          bsr       _strlen
08001678  584F      2663          addq.w    #4,A7
0800167A  1800      2664          move.b    D0,D4
0800167C  206E 000C 2665          move.l    12(A6),A0
08001680  1010      2666          move.b    (A0),D0
08001682  4880      2667          ext.w     D0
08001684  48C0      2668          ext.l     D0
08001686  0C80 0000 2669          cmp.l     #115,D0
0800168A  0073      
0800168C  6618      2670          bne.s     vsprintf_48
0800168E  0C85 0000 2671          cmp.l     #0,D5
08001692  0000      
08001694  6D10      2672          blt.s     vsprintf_48
08001696  4884      2673          ext.w     D4
08001698  48C4      2674          ext.l     D4
0800169A  B885      2675          cmp.l     D5,D4
0800169C  6F04      2676          ble.s     vsprintf_50
0800169E  1005      2677          move.b    D5,D0
080016A0  6002      2678          bra.s     vsprintf_51
                    2679   vsprintf_50:
080016A2  1004      2680          move.b    D4,D0
                    2681   vsprintf_51:
080016A4  1800      2682          move.b    D0,D4
                    2683   vsprintf_48:
080016A6  206E 000C 2684          move.l    12(A6),A0
080016AA  1010      2685          move.b    (A0),D0
080016AC  4880      2686          ext.w     D0
080016AE  48C0      2687          ext.l     D0
080016B0  0C80 0000 2688          cmp.l     #88,D0
080016B4  0058      
080016B6  6600 0026 2689          bne       vsprintf_56
080016BA  41EE FFDC 2690          lea       -36(A6),A0
080016BE  2408      2691          move.l    A0,D2
                    2692   vsprintf_54:
080016C0  2042      2693          move.l    D2,A0
080016C2  4A10      2694          tst.b     (A0)
080016C4  6718      2695          beq.s     vsprintf_56
080016C6  2042      2696          move.l    D2,A0
080016C8  1210      2697          move.b    (A0),D1
080016CA  4881      2698          ext.w     D1
080016CC  48C1      2699          ext.l     D1
080016CE  2F01      2700          move.l    D1,-(A7)
080016D0  6100 FBB4 2701          bsr       _toupper
080016D4  584F      2702          addq.w    #4,A7
080016D6  2042      2703          move.l    D2,A0
080016D8  1080      2704          move.b    D0,(A0)
080016DA  5282      2705          addq.l    #1,D2
080016DC  60E2      2706          bra       vsprintf_54
                    2707   vsprintf_56:
080016DE  7E00      2708          moveq     #0,D7
080016E0  41EE FFD4 2709          lea       -44(A6),A0
080016E4  2408      2710          move.l    A0,D2
080016E6  206E 000C 2711          move.l    12(A6),A0
080016EA  1010      2712          move.b    (A0),D0
080016EC  4880      2713          ext.w     D0
080016EE  48C0      2714          ext.l     D0
080016F0  0C80 0000 2715          cmp.l     #100,D0
080016F4  0064      
080016F6  6714      2716          beq.s     vsprintf_59
080016F8  206E 000C 2717          move.l    12(A6),A0
080016FC  1010      2718          move.b    (A0),D0
080016FE  4880      2719          ext.w     D0
08001700  48C0      2720          ext.l     D0
08001702  0C80 0000 2721          cmp.l     #105,D0
08001706  0069      
08001708  6600 0076 2722          bne       vsprintf_65
                    2723   vsprintf_59:
0800170C  4A2E FFCE 2724          tst.b     -50(A6)
08001710  6612      2725          bne.s     vsprintf_62
08001712  2043      2726          move.l    D3,A0
08001714  1010      2727          move.b    (A0),D0
08001716  4880      2728          ext.w     D0
08001718  48C0      2729          ext.l     D0
0800171A  0C80 0000 2730          cmp.l     #45,D0
0800171E  002D      
08001720  6600 002E 2731          bne       vsprintf_60
                    2732   vsprintf_62:
08001724  2043      2733          move.l    D3,A0
08001726  1010      2734          move.b    (A0),D0
08001728  4880      2735          ext.w     D0
0800172A  48C0      2736          ext.l     D0
0800172C  0C80 0000 2737          cmp.l     #45,D0
08001730  002D      
08001732  660E      2738          bne.s     vsprintf_63
08001734  2043      2739          move.l    D3,A0
08001736  5283      2740          addq.l    #1,D3
08001738  2242      2741          move.l    D2,A1
0800173A  5282      2742          addq.l    #1,D2
0800173C  1290      2743          move.b    (A0),(A1)
0800173E  5304      2744          subq.b    #1,D4
08001740  6008      2745          bra.s     vsprintf_64
                    2746   vsprintf_63:
08001742  2042      2747          move.l    D2,A0
08001744  5282      2748          addq.l    #1,D2
08001746  10BC 002B 2749          move.b    #43,(A0)
                    2750   vsprintf_64:
0800174A  5287      2751          addq.l    #1,D7
0800174C  6000 0032 2752          bra       vsprintf_65
                    2753   vsprintf_60:
08001750  4A2E FFCF 2754          tst.b     -49(A6)
08001754  6700 002A 2755          beq       vsprintf_65
08001758  2043      2756          move.l    D3,A0
0800175A  1010      2757          move.b    (A0),D0
0800175C  4880      2758          ext.w     D0
0800175E  48C0      2759          ext.l     D0
08001760  0C80 0000 2760          cmp.l     #45,D0
08001764  002D      
08001766  660E      2761          bne.s     vsprintf_67
08001768  2043      2762          move.l    D3,A0
0800176A  5283      2763          addq.l    #1,D3
0800176C  2242      2764          move.l    D2,A1
0800176E  5282      2765          addq.l    #1,D2
08001770  1290      2766          move.b    (A0),(A1)
08001772  5304      2767          subq.b    #1,D4
08001774  6008      2768          bra.s     vsprintf_68
                    2769   vsprintf_67:
08001776  2042      2770          move.l    D2,A0
08001778  5282      2771          addq.l    #1,D2
0800177A  10BC 0020 2772          move.b    #32,(A0)
                    2773   vsprintf_68:
0800177E  5287      2774          addq.l    #1,D7
                    2775   vsprintf_65:
08001780  4A2E FFD0 2776          tst.b     -48(A6)
08001784  6700 0066 2777          beq       vsprintf_77
08001788  206E 000C 2778          move.l    12(A6),A0
0800178C  1010      2779          move.b    (A0),D0
0800178E  4880      2780          ext.w     D0
08001790  48C0      2781          ext.l     D0
08001792  0C80 0000 2782          cmp.l     #111,D0
08001796  006F      
08001798  671A      2783          beq.s     vsprintf_73
0800179A  6E0C      2784          bgt.s     vsprintf_76
0800179C  0C80 0000 2785          cmp.l     #88,D0
080017A0  0058      
080017A2  6710      2786          beq.s     vsprintf_73
080017A4  6000 0046 2787          bra       vsprintf_77
                    2788   vsprintf_76:
080017A8  0C80 0000 2789          cmp.l     #120,D0
080017AC  0078      
080017AE  6704      2790          beq.s     vsprintf_73
080017B0  6000 003A 2791          bra       vsprintf_77
                    2792   vsprintf_73:
080017B4  2042      2793          move.l    D2,A0
080017B6  5282      2794          addq.l    #1,D2
080017B8  10BC 0030 2795          move.b    #48,(A0)
080017BC  5287      2796          addq.l    #1,D7
080017BE  206E 000C 2797          move.l    12(A6),A0
080017C2  1010      2798          move.b    (A0),D0
080017C4  4880      2799          ext.w     D0
080017C6  48C0      2800          ext.l     D0
080017C8  0C80 0000 2801          cmp.l     #120,D0
080017CC  0078      
080017CE  6712      2802          beq.s     vsprintf_79
080017D0  206E 000C 2803          move.l    12(A6),A0
080017D4  1010      2804          move.b    (A0),D0
080017D6  4880      2805          ext.w     D0
080017D8  48C0      2806          ext.l     D0
080017DA  0C80 0000 2807          cmp.l     #88,D0
080017DE  0058      
080017E0  660A      2808          bne.s     vsprintf_77
                    2809   vsprintf_79:
080017E2  2042      2810          move.l    D2,A0
080017E4  5282      2811          addq.l    #1,D2
080017E6  10BC 0078 2812          move.b    #120,(A0)
080017EA  5287      2813          addq.l    #1,D7
                    2814   vsprintf_77:
080017EC  2042      2815          move.l    D2,A0
080017EE  4210      2816          clr.b     (A0)
080017F0  206E 000C 2817          move.l    12(A6),A0
080017F4  1010      2818          move.b    (A0),D0
080017F6  4880      2819          ext.w     D0
080017F8  48C0      2820          ext.l     D0
080017FA  0C80 0000 2821          cmp.l     #105,D0
080017FE  0069      
08001800  6700 0076 2822          beq       vsprintf_82
08001804  6E42      2823          bgt.s     vsprintf_93
08001806  0C80 0000 2824          cmp.l     #99,D0
0800180A  0063      
0800180C  6700 0084 2825          beq       vsprintf_96
08001810  6E1C      2826          bgt.s     vsprintf_94
08001812  0C80 0000 2827          cmp.l     #88,D0
08001816  0058      
08001818  6700 005E 2828          beq       vsprintf_82
0800181C  6E00 0184 2829          bgt       vsprintf_80
08001820  0C80 0000 2830          cmp.l     #69,D0
08001824  0045      
08001826  6700 0050 2831          beq       vsprintf_82
0800182A  6000 0176 2832          bra       vsprintf_80
                    2833   vsprintf_94:
0800182E  0C80 0000 2834          cmp.l     #101,D0
08001832  0065      
08001834  6700 0042 2835          beq       vsprintf_82
08001838  6E00 0168 2836          bgt       vsprintf_80
0800183C  0C80 0000 2837          cmp.l     #100,D0
08001840  0064      
08001842  6734      2838          beq.s     vsprintf_82
08001844  6000 015C 2839          bra       vsprintf_80
                    2840   vsprintf_93:
08001848  0C80 0000 2841          cmp.l     #117,D0
0800184C  0075      
0800184E  6728      2842          beq.s     vsprintf_82
08001850  6E1A      2843          bgt.s     vsprintf_95
08001852  0C80 0000 2844          cmp.l     #115,D0
08001856  0073      
08001858  6700 0038 2845          beq       vsprintf_96
0800185C  6E00 0144 2846          bgt       vsprintf_80
08001860  0C80 0000 2847          cmp.l     #111,D0
08001864  006F      
08001866  6710      2848          beq.s     vsprintf_82
08001868  6000 0138 2849          bra       vsprintf_80
                    2850   vsprintf_95:
0800186C  0C80 0000 2851          cmp.l     #120,D0
08001870  0078      
08001872  6704      2852          beq.s     vsprintf_82
08001874  6000 012C 2853          bra       vsprintf_80
                    2854   vsprintf_82:
08001878  4A2E FFD2 2855          tst.b     -46(A6)
0800187C  6714      2856          beq.s     vsprintf_96
0800187E  4A2E FFCD 2857          tst.b     -51(A6)
08001882  660E      2858          bne.s     vsprintf_96
08001884  200D      2859          move.l    A5,D0
08001886  9087      2860          sub.l     D7,D0
08001888  4884      2861          ext.w     D4
0800188A  48C4      2862          ext.l     D4
0800188C  9084      2863          sub.l     D4,D0
0800188E  2D40 FFFC 2864          move.l    D0,-4(A6)
                    2865   vsprintf_96:
08001892  202E FFFC 2866          move.l    -4(A6),D0
08001896  0C80 0000 2867          cmp.l     #0,D0
0800189A  0000      
0800189C  6C04      2868          bge.s     vsprintf_98
0800189E  42AE FFFC 2869          clr.l     -4(A6)
                    2870   vsprintf_98:
080018A2  4A2E FFCD 2871          tst.b     -51(A6)
080018A6  6600 0030 2872          bne       vsprintf_104
080018AA  4884      2873          ext.w     D4
080018AC  48C4      2874          ext.l     D4
080018AE  2004      2875          move.l    D4,D0
080018B0  D0AE FFFC 2876          add.l     -4(A6),D0
080018B4  D087      2877          add.l     D7,D0
080018B6  1D40 FFD1 2878          move.b    D0,-47(A6)
                    2879   vsprintf_102:
080018BA  102E FFD1 2880          move.b    -47(A6),D0
080018BE  4880      2881          ext.w     D0
080018C0  48C0      2882          ext.l     D0
080018C2  220D      2883          move.l    A5,D1
080018C4  534D      2884          subq.w    #1,A5
080018C6  B081      2885          cmp.l     D1,D0
080018C8  6C0E      2886          bge.s     vsprintf_104
080018CA  4878 0020 2887          pea       32
080018CE  2F0A      2888          move.l    A2,-(A7)
080018D0  4E93      2889          jsr       (A3)
080018D2  504F      2890          addq.w    #8,A7
080018D4  5286      2891          addq.l    #1,D6
080018D6  60E2      2892          bra       vsprintf_102
                    2893   vsprintf_104:
080018D8  41EE FFD4 2894          lea       -44(A6),A0
080018DC  2408      2895          move.l    A0,D2
                    2896   vsprintf_105:
080018DE  2042      2897          move.l    D2,A0
080018E0  4A10      2898          tst.b     (A0)
080018E2  6716      2899          beq.s     vsprintf_107
080018E4  2042      2900          move.l    D2,A0
080018E6  5282      2901          addq.l    #1,D2
080018E8  1210      2902          move.b    (A0),D1
080018EA  4881      2903          ext.w     D1
080018EC  48C1      2904          ext.l     D1
080018EE  2F01      2905          move.l    D1,-(A7)
080018F0  2F0A      2906          move.l    A2,-(A7)
080018F2  4E93      2907          jsr       (A3)
080018F4  504F      2908          addq.w    #8,A7
080018F6  5286      2909          addq.l    #1,D6
080018F8  60E4      2910          bra       vsprintf_105
                    2911   vsprintf_107:
080018FA  202E FFFC 2912          move.l    -4(A6),D0
080018FE  1D40 FFD1 2913          move.b    D0,-47(A6)
                    2914   vsprintf_108:
08001902  102E FFD1 2915          move.b    -47(A6),D0
08001906  532E FFD1 2916          subq.b    #1,-47(A6)
0800190A  4A00      2917          tst.b     D0
0800190C  670E      2918          beq.s     vsprintf_110
0800190E  4878 0030 2919          pea       48
08001912  2F0A      2920          move.l    A2,-(A7)
08001914  4E93      2921          jsr       (A3)
08001916  504F      2922          addq.w    #8,A7
08001918  5286      2923          addq.l    #1,D6
0800191A  60E6      2924          bra       vsprintf_108
                    2925   vsprintf_110:
0800191C  2043      2926          move.l    D3,A0
0800191E  4A10      2927          tst.b     (A0)
08001920  6700 0048 2928          beq       vsprintf_113
08001924  206E 000C 2929          move.l    12(A6),A0
08001928  1010      2930          move.b    (A0),D0
0800192A  4880      2931          ext.w     D0
0800192C  48C0      2932          ext.l     D0
0800192E  0C80 0000 2933          cmp.l     #115,D0
08001932  0073      
08001934  670C      2934          beq.s     vsprintf_116
08001936  6E18      2935          bgt.s     vsprintf_119
08001938  0C80 0000 2936          cmp.l     #99,D0
0800193C  0063      
0800193E  6702      2937          beq.s     vsprintf_116
08001940  600E      2938          bra.s     vsprintf_119
                    2939   vsprintf_116:
08001942  2005      2940          move.l    D5,D0
08001944  5385      2941          subq.l    #1,D5
08001946  0C80 0000 2942          cmp.l     #0,D0
0800194A  0000      
0800194C  6E02      2943          bgt.s     vsprintf_119
0800194E  6016      2944          bra.s     vsprintf_115
                    2945   vsprintf_119:
08001950  2043      2946          move.l    D3,A0
08001952  5283      2947          addq.l    #1,D3
08001954  1210      2948          move.b    (A0),D1
08001956  4881      2949          ext.w     D1
08001958  48C1      2950          ext.l     D1
0800195A  2F01      2951          move.l    D1,-(A7)
0800195C  2F0A      2952          move.l    A2,-(A7)
0800195E  4E93      2953          jsr       (A3)
08001960  504F      2954          addq.w    #8,A7
08001962  5286      2955          addq.l    #1,D6
08001964  6002      2956          bra.s     vsprintf_112
                    2957   vsprintf_115:
08001966  6002      2958          bra.s     vsprintf_113
                    2959   vsprintf_112:
08001968  60B2      2960          bra       vsprintf_110
                    2961   vsprintf_113:
0800196A  4A2E FFCD 2962          tst.b     -51(A6)
0800196E  6700 0030 2963          beq       vsprintf_125
08001972  4884      2964          ext.w     D4
08001974  48C4      2965          ext.l     D4
08001976  2004      2966          move.l    D4,D0
08001978  D0AE FFFC 2967          add.l     -4(A6),D0
0800197C  D087      2968          add.l     D7,D0
0800197E  1D40 FFD1 2969          move.b    D0,-47(A6)
                    2970   vsprintf_123:
08001982  102E FFD1 2971          move.b    -47(A6),D0
08001986  4880      2972          ext.w     D0
08001988  48C0      2973          ext.l     D0
0800198A  220D      2974          move.l    A5,D1
0800198C  534D      2975          subq.w    #1,A5
0800198E  B081      2976          cmp.l     D1,D0
08001990  6C0E      2977          bge.s     vsprintf_125
08001992  4878 0020 2978          pea       32
08001996  2F0A      2979          move.l    A2,-(A7)
08001998  4E93      2980          jsr       (A3)
0800199A  504F      2981          addq.w    #8,A7
0800199C  5386      2982          subq.l    #1,D6
0800199E  60E2      2983          bra       vsprintf_123
                    2984   vsprintf_125:
080019A0  6014      2985          bra.s     vsprintf_81
                    2986   vsprintf_80:
080019A2  206E 000C 2987          move.l    12(A6),A0
080019A6  1210      2988          move.b    (A0),D1
080019A8  4881      2989          ext.w     D1
080019AA  48C1      2990          ext.l     D1
080019AC  2F01      2991          move.l    D1,-(A7)
080019AE  2F0A      2992          move.l    A2,-(A7)
080019B0  4E93      2993          jsr       (A3)
080019B2  504F      2994          addq.w    #8,A7
080019B4  5286      2995          addq.l    #1,D6
                    2996   vsprintf_81:
080019B6  52AE 000C 2997          addq.l    #1,12(A6)
                    2998   vsprintf_2:
080019BA  6000 F9D6 2999          bra       vsprintf_1
                    3000   vsprintf_3:
080019BE  4A92      3001          tst.l     (A2)
080019C0  6710      3002          beq.s     vsprintf_126
080019C2  4201      3003          clr.b     D1
080019C4  C2BC 0000 3004          and.l     #255,D1
080019C8  00FF      
080019CA  2F01      3005          move.l    D1,-(A7)
080019CC  2F0A      3006          move.l    A2,-(A7)
080019CE  4E93      3007          jsr       (A3)
080019D0  504F      3008          addq.w    #8,A7
                    3009   vsprintf_126:
080019D2  2006      3010          move.l    D6,D0
080019D4  4CDF 3CFC 3011          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
080019D8  4E5E      3012          unlk      A6
080019DA  4E75      3013          rts
                    3014   _putch:
080019DC  4E56 0000 3015          link      A6,#0
080019E0  48E7 2000 3016          movem.l   D2,-(A7)
080019E4  242E 0008 3017          move.l    8(A6),D2
080019E8  0C82 0000 3018          cmp.l     #10,D2
080019EC  000A      
080019EE  660A      3019          bne.s     putch_1
080019F0  4878 000D 3020          pea       13
080019F4  6100 E748 3021          bsr       __putch
080019F8  584F      3022          addq.w    #4,A7
                    3023   putch_1:
080019FA  2F02      3024          move.l    D2,-(A7)
080019FC  6100 E740 3025          bsr       __putch
08001A00  584F      3026          addq.w    #4,A7
08001A02  2002      3027          move.l    D2,D0
08001A04  4CDF 0004 3028          movem.l   (A7)+,D2
08001A08  4E5E      3029          unlk      A6
08001A0A  4E75      3030          rts
                    3031   _getch:
08001A0C  48E7 2000 3032          movem.l   D2,-(A7)
08001A10  2439 0800 3033          move.l    __ungetbuf,D2
08001A14  1DB2      
08001A16  2039 0800 3034          move.l    __ungetbuf,D0
08001A1A  1DB2      
08001A1C  0C80 FFFF 3035          cmp.l     #-1,D0
08001A20  FFFF      
08001A22  670C      3036          beq.s     getch_1
08001A24  23FC FFFF 3037          move.l    #-1,__ungetbuf
08001A28  FFFF 0800 
08001A2C  1DB2      
08001A2E  6010      3038          bra.s     getch_3
                    3039   getch_1:
08001A30  6100 E73A 3040          bsr       __getch
08001A34  2400      3041          move.l    D0,D2
08001A36  0C80 0000 3042          cmp.l     #13,D0
08001A3A  000D      
08001A3C  6602      3043          bne.s     getch_3
08001A3E  740A      3044          moveq     #10,D2
                    3045   getch_3:
08001A40  2002      3046          move.l    D2,D0
08001A42  4CDF 0004 3047          movem.l   (A7)+,D2
08001A46  4E75      3048          rts
                    3049   @itoa_convert:
08001A48  4E56 0000 3050          link      A6,#0
08001A4C  48E7 3C00 3051          movem.l   D2/D3/D4/D5,-(A7)
08001A50  242E 0008 3052          move.l    8(A6),D2
08001A54  262E 0010 3053          move.l    16(A6),D3
08001A58  2A2E 000C 3054          move.l    12(A6),D5
08001A5C  2F05      3055          move.l    D5,-(A7)
08001A5E  2F03      3056          move.l    D3,-(A7)
08001A60  6100 0160 3057          bsr       ULDIV
08001A64  202F 0004 3058          move.l    4(A7),D0
08001A68  504F      3059          addq.w    #8,A7
08001A6A  2800      3060          move.l    D0,D4
08001A6C  BA83      3061          cmp.l     D3,D5
08001A6E  651A      3062          blo.s     @itoa_convert_1
08001A70  2F03      3063          move.l    D3,-(A7)
08001A72  2F05      3064          move.l    D5,-(A7)
08001A74  2F03      3065          move.l    D3,-(A7)
08001A76  6100 014A 3066          bsr       ULDIV
08001A7A  2217      3067          move.l    (A7),D1
08001A7C  504F      3068          addq.w    #8,A7
08001A7E  2F01      3069          move.l    D1,-(A7)
08001A80  2F02      3070          move.l    D2,-(A7)
08001A82  61C4      3071          bsr       @itoa_convert
08001A84  DEFC 000C 3072          add.w     #12,A7
08001A88  2400      3073          move.l    D0,D2
                    3074   @itoa_convert_1:
08001A8A  0C84 0000 3075          cmp.l     #9,D4
08001A8E  0009      
08001A90  6E0A      3076          bgt.s     @itoa_convert_3
08001A92  2004      3077          move.l    D4,D0
08001A94  0680 0000 3078          add.l     #48,D0
08001A98  0030      
08001A9A  600E      3079          bra.s     @itoa_convert_4
                    3080   @itoa_convert_3:
08001A9C  2004      3081          move.l    D4,D0
08001A9E  0680 0000 3082          add.l     #97,D0
08001AA2  0061      
08001AA4  0480 0000 3083          sub.l     #10,D0
08001AA8  000A      
                    3084   @itoa_convert_4:
08001AAA  2042      3085          move.l    D2,A0
08001AAC  1080      3086          move.b    D0,(A0)
08001AAE  2002      3087          move.l    D2,D0
08001AB0  5280      3088          addq.l    #1,D0
08001AB2  4CDF 003C 3089          movem.l   (A7)+,D2/D3/D4/D5
08001AB6  4E5E      3090          unlk      A6
08001AB8  4E75      3091          rts
                    3092   _ltoa:
08001ABA  4E56 0000 3093          link      A6,#0
08001ABE  48E7 3C00 3094          movem.l   D2/D3/D4/D5,-(A7)
08001AC2  242E 0008 3095          move.l    8(A6),D2
08001AC6  262E 000C 3096          move.l    12(A6),D3
08001ACA  2A2E 0010 3097          move.l    16(A6),D5
08001ACE  2803      3098          move.l    D3,D4
08001AD0  0C85 0000 3099          cmp.l     #2,D5
08001AD4  0002      
08001AD6  6D08      3100          blt.s     ltoa_3
08001AD8  0C85 0000 3101          cmp.l     #36,D5
08001ADC  0024      
08001ADE  6F06      3102          ble.s     ltoa_1
                    3103   ltoa_3:
08001AE0  2003      3104          move.l    D3,D0
08001AE2  6000 0052 3105          bra       ltoa_4
                    3106   ltoa_1:
08001AE6  0C85 0000 3107          cmp.l     #10,D5
08001AEA  000A      
08001AEC  6600 0032 3108          bne       ltoa_5
08001AF0  0C82 0000 3109          cmp.l     #0,D2
08001AF4  0000      
08001AF6  6C28      3110          bge.s     ltoa_5
08001AF8  2002      3111          move.l    D2,D0
08001AFA  4480      3112          neg.l     D0
08001AFC  2400      3113          move.l    D0,D2
08001AFE  0C82 0000 3114          cmp.l     #0,D2
08001B02  0000      
08001B04  6C12      3115          bge.s     ltoa_7
08001B06  4879 0800 3116          pea       @itoa_1
08001B0A  1EC6      
08001B0C  2F03      3117          move.l    D3,-(A7)
08001B0E  6100 00A2 3118          bsr       _strcpy
08001B12  504F      3119          addq.w    #8,A7
08001B14  2003      3120          move.l    D3,D0
08001B16  601E      3121          bra.s     ltoa_4
                    3122   ltoa_7:
08001B18  2044      3123          move.l    D4,A0
08001B1A  5284      3124          addq.l    #1,D4
08001B1C  10BC 002D 3125          move.b    #45,(A0)
                    3126   ltoa_5:
08001B20  2F05      3127          move.l    D5,-(A7)
08001B22  2F02      3128          move.l    D2,-(A7)
08001B24  2F04      3129          move.l    D4,-(A7)
08001B26  6100 FF20 3130          bsr       @itoa_convert
08001B2A  DEFC 000C 3131          add.w     #12,A7
08001B2E  2800      3132          move.l    D0,D4
08001B30  2044      3133          move.l    D4,A0
08001B32  4210      3134          clr.b     (A0)
08001B34  2003      3135          move.l    D3,D0
                    3136   ltoa_4:
08001B36  4CDF 003C 3137          movem.l   (A7)+,D2/D3/D4/D5
08001B3A  4E5E      3138          unlk      A6
08001B3C  4E75      3139          rts
                    3140   _ultoa:
08001B3E  4E56 0000 3141          link      A6,#0
08001B42  48E7 3800 3142          movem.l   D2/D3/D4,-(A7)
08001B46  262E 0010 3143          move.l    16(A6),D3
08001B4A  282E 000C 3144          move.l    12(A6),D4
08001B4E  2404      3145          move.l    D4,D2
08001B50  0C83 0000 3146          cmp.l     #2,D3
08001B54  0002      
08001B56  6D08      3147          blt.s     ultoa_3
08001B58  0C83 0000 3148          cmp.l     #36,D3
08001B5C  0024      
08001B5E  6F04      3149          ble.s     ultoa_1
                    3150   ultoa_3:
08001B60  2004      3151          move.l    D4,D0
08001B62  6018      3152          bra.s     ultoa_4
                    3153   ultoa_1:
08001B64  2F03      3154          move.l    D3,-(A7)
08001B66  2F2E 0008 3155          move.l    8(A6),-(A7)
08001B6A  2F02      3156          move.l    D2,-(A7)
08001B6C  6100 FEDA 3157          bsr       @itoa_convert
08001B70  DEFC 000C 3158          add.w     #12,A7
08001B74  2400      3159          move.l    D0,D2
08001B76  2042      3160          move.l    D2,A0
08001B78  4210      3161          clr.b     (A0)
08001B7A  2004      3162          move.l    D4,D0
                    3163   ultoa_4:
08001B7C  4CDF 001C 3164          movem.l   (A7)+,D2/D3/D4
08001B80  4E5E      3165          unlk      A6
08001B82  4E75      3166          rts
                    3167   _itoa:
08001B84  4E56 0000 3168          link      A6,#0
08001B88  2F2E 0010 3169          move.l    16(A6),-(A7)
08001B8C  2F2E 000C 3170          move.l    12(A6),-(A7)
08001B90  2F2E 0008 3171          move.l    8(A6),-(A7)
08001B94  6100 FF24 3172          bsr       _ltoa
08001B98  DEFC 000C 3173          add.w     #12,A7
08001B9C  4E5E      3174          unlk      A6
08001B9E  4E75      3175          rts
                    3176   _strlen:
08001BA0  206F 0004 3177          move.l    (4,A7),A0
08001BA4  2248      3178          move.l    A0,A1
                    3179   strlen_1:
08001BA6  4A19      3180          tst.b     (A1)+
08001BA8  66FC      3181          bne       strlen_1
08001BAA  2009      3182          move.l    A1,D0
08001BAC  9088      3183          sub.l     A0,D0
08001BAE  5380      3184          subq.l    #1,D0
08001BB0  4E75      3185          rts
                    3186   _strcpy:
08001BB2  206F 0004 3187          move.l    (4,A7),A0
08001BB6  226F 0008 3188          move.l    (8,A7),A1
08001BBA  2008      3189          move.l    A0,D0
                    3190   strcpy_1:
08001BBC  10D9      3191          move.b    (A1)+,(A0)+
08001BBE  66FC      3192          bne       strcpy_1
08001BC0  4E75      3193          rts
                    3194   ULDIV:
08001BC2  4E56 0000 3195          link    A6,#0
08001BC6  48E7 C000 3196          movem.l D0/D1,-(A7)
08001BCA  222E 0008 3197          move.l  8(A6),D1
08001BCE  202E 000C 3198          move.l  12(A6),D0
08001BD2  6036      3199          bra.s   ldiv_3
                    3200   LDIV:
08001BD4  4E56 0000 3201          link    A6,#0
08001BD8  48E7 C000 3202          movem.l D0/D1,-(A7)
08001BDC  222E 0008 3203          move.l  8(A6),D1
08001BE0  202E 000C 3204          move.l  12(A6),D0
08001BE4  4A80      3205          tst.l   D0
08001BE6  6A0E      3206          bpl.s   ldiv_1
08001BE8  4480      3207          neg.l   D0
08001BEA  4A81      3208          tst.l   D1
08001BEC  6A14      3209          bpl.s   ldiv_2
08001BEE  4481      3210          neg.l   D1
08001BF0  612A      3211          bsr.s   dodiv
08001BF2  4481      3212          neg.l   D1
08001BF4  6016      3213          bra.s   ldiv_4
                    3214   ldiv_1:
08001BF6  4A81      3215          tst.l   D1
08001BF8  6A10      3216          bpl.s   ldiv_3
08001BFA  4481      3217          neg.l   D1
08001BFC  611E      3218          bsr.s   dodiv
08001BFE  4480      3219          neg.l   D0
08001C00  600A      3220          bra.s   ldiv_4
                    3221   ldiv_2:
08001C02  6118      3222          bsr.s   dodiv
08001C04  4480      3223          neg.l   D0
08001C06  4481      3224          neg.l   D1
08001C08  6002      3225          bra.s   ldiv_4
                    3226   ldiv_3:
08001C0A  6110      3227          bsr.s   dodiv
                    3228   ldiv_4:
08001C0C  2D40 0008 3229          move.l  D0,8(A6)
08001C10  2D41 000C 3230          move.l  D1,12(A6)
08001C14  4CDF 0003 3231          movem.l (A7)+,D0/D1
08001C18  4E5E      3232          unlk    A6
08001C1A  4E75      3233          rts
                    3234   dodiv:
08001C1C  0C81 0000 3235          cmpi.l  #$FFFF,D1
08001C20  FFFF      
08001C22  6236      3236          bhi.s   dodiv_2
08001C24  0C80 0000 3237          cmpi.l  #$FFFF,D0
08001C28  FFFF      
08001C2A  6210      3238          bhi.s   dodiv_1
08001C2C  80C1      3239          divu    D1,D0
08001C2E  2200      3240          move.l  D0,D1
08001C30  4241      3241          clr.w   D1
08001C32  4841      3242          swap    D1
08001C34  0280 0000 3243          andi.l  #$FFFF,D0
08001C38  FFFF      
08001C3A  4E75      3244          rts
                    3245   dodiv_1:
08001C3C  48A7 A000 3246          movem.w D0/D2,-(A7)
08001C40  4240      3247          clr.w   D0
08001C42  4840      3248          swap    D0
08001C44  80C1      3249          divu    D1,D0
08001C46  3400      3250          move.w  D0,D2
08001C48  301F      3251          move.w  (A7)+,D0
08001C4A  80C1      3252          divu    D1,D0
08001C4C  4840      3253          swap    D0
08001C4E  4281      3254          clr.l   D1
08001C50  3200      3255          move.w  D0,D1
08001C52  3002      3256          move.w  D2,D0
08001C54  4840      3257          swap    D0
08001C56  341F      3258          move.w  (A7)+,D2
08001C58  4E75      3259          rts
                    3260   dodiv_2:
08001C5A  48E7 3800 3261          movem.l D2/D3/D4,-(A7)
08001C5E  2401      3262          move.l  D1,D2
08001C60  4242      3263          clr.w   D2
08001C62  4842      3264          swap    D2
08001C64  5282      3265          addq.l  #1,D2
08001C66  2600      3266          move.l  D0,D3
08001C68  2801      3267          move.l  D1,D4
08001C6A  2202      3268          move.l  D2,D1
08001C6C  61CE      3269          bsr.s   dodiv_1
08001C6E  2204      3270          move.l  D4,D1
08001C70  82C2      3271          divu    D2,D1
08001C72  80C1      3272          divu    D1,D0
08001C74  0280 0000 3273          andi.l  #$FFFF,D0
08001C78  FFFF      
                    3274   dodiv_3:
08001C7A  2204      3275          move.l  D4,D1
08001C7C  2404      3276          move.l  D4,D2
08001C7E  4842      3277          swap    D2
08001C80  C2C0      3278          mulu    D0,D1
08001C82  C4C0      3279          mulu    D0,D2
08001C84  4842      3280          swap    D2
08001C86  D282      3281          add.l   D2,D1
08001C88  9283      3282          sub.l   D3,D1
08001C8A  620A      3283          bhi.s   dodiv_4
08001C8C  4481      3284          neg.l   D1
08001C8E  B881      3285          cmp.l   D1,D4
08001C90  6208      3286          bhi.s   dodiv_5
08001C92  5280      3287          addq.l  #1,D0
08001C94  60E4      3288          bra.s   dodiv_3
                    3289   dodiv_4:
08001C96  5380      3290          subq.l  #1,D0
08001C98  60E0      3291          bra.s   dodiv_3
                    3292   dodiv_5:
08001C9A  4CDF 001C 3293          movem.l (A7)+,D2/D3/D4
08001C9E  4E75      3294          rts
                    3295          section   const
08001CA0            3296                   align
                    3297   
                    3298   
                    3299   @m68kus~1_1:
08001CA0  0D0A 456E 3300          dc.b      13,10,69,110,116,101,114,32,97,110,121,32,107
08001CA4  7465 7220 
08001CA8  616E 7920 
08001CAC  6B        
08001CAD  6579 00   3301          dc.b      101,121,0
                    3302   @m68kus~1_2:
08001CB0  2564 00   3303          dc.b      37,100,0
                    3304   @m68kus~1_3:
08001CB4  0A3D 3D3D 3305          dc.b      10,61,61,61,61,61,61,61,61,61,61,61,61,61,61
08001CB8  3D3D 3D3D 
08001CBC  3D3D 3D3D 
08001CC0  3D3D 3D   
08001CC3  3D3D 3D3D 3306          dc.b      61,61,61,61,61,61,61,61,61,61,61,61,61,61,61
08001CC7  3D3D 3D3D 
08001CCB  3D3D 3D3D 
08001CCF  3D3D 3D   
08001CD2  3D4D 4541 3307          dc.b      61,77,69,65,83,85,82,73,78,71,61,61,61,61,61
08001CD6  5355 5249 
08001CDA  4E47 3D3D 
08001CDE  3D3D 3D   
08001CE1  3D3D 3D3D 3308          dc.b      61,61,61,61,61,61,61,61,61,61,61,61,61,61,61
08001CE5  3D3D 3D3D 
08001CE9  3D3D 3D3D 
08001CED  3D3D 3D   
08001CF0  3D3D 3D3D 3309          dc.b      61,61,61,61,61,61,61,61,61,61,10,0
08001CF4  3D3D 3D3D 
08001CF8  3D3D 0A00 
                    3310   @m68kus~1_4:
08001CFC  5661 6C75 3311          dc.b      86,97,108,117,101,32,111,102,32,84,104,101,114
08001D00  6520 6F66 
08001D04  2054 6865 
08001D08  72        
08001D09  6D69 7374 3312          dc.b      109,105,115,116,111,114,58,32,37,100,10,0
08001D0D  6F72 3A20 
08001D11  2564 0A00 
                    3313   @m68kus~1_5:
08001D16  5661 6C75 3314          dc.b      86,97,108,117,101,32,111,102,32,80,111,116,101
08001D1A  6520 6F66 
08001D1E  2050 6F74 
08001D22  65        
08001D23  6E74 696F 3315          dc.b      110,116,105,111,109,101,116,101,114,58,32,37
08001D27  6D65 7465 
08001D2B  723A 2025 
08001D2F  640A 00   3316          dc.b      100,10,0
                    3317   @m68kus~1_6:
08001D32  5661 6C75 3318          dc.b      86,97,108,117,101,32,111,102,32,80,104,111,116
08001D36  6520 6F66 
08001D3A  2050 686F 
08001D3E  74        
08001D3F  6F2D 7265 3319          dc.b      111,45,114,101,115,105,115,116,101,114,58,32
08001D43  7369 7374 
08001D47  6572 3A20 
08001D4B  2564 0A00 3320          dc.b      37,100,10,0
                    3321   @m68kus~1_7:
08001D50  0D53 7769 3322          dc.b      13,83,119,105,116,99,104,101,115,32,83,87,91
08001D54  7463 6865 
08001D58  7320 5357 
08001D5C  5B        
08001D5D  372D 305D 3323          dc.b      55,45,48,93,32,61,32,0
08001D61  203D 2000 
                    3324   @m68kus~1_8:
08001D66  3000      3325          dc.b      48,0
                    3326   @m68kus~1_9:
08001D68  3100      3327          dc.b      49,0
                    3328   @canbus~1_1:
08001D6A  4341 4E30 3329          dc.b      67,65,78,48,32,82,101,99,101,105,118,101,100
08001D6E  2052 6563 
08001D72  6569 7665 
08001D76  64        
08001D77  3A20 2558 3330          dc.b      58,32,37,88,13,10,0
08001D7B  0D0A 00   
                    3331   @canbus~1_2:
08001D7E  4341 4E31 3332          dc.b      67,65,78,49,32,82,101,99,101,105,118,101,100
08001D82  2052 6563 
08001D86  6569 7665 
08001D8A  64        
08001D8B  3A20 2558 3333          dc.b      58,32,37,88,13,10,0
08001D8F  0D0A 00   
                    3334   @canbus~1_3:
08001D92  0D0A 0D0A 3335          dc.b      13,10,13,10,45,45,45,45,32,67,65,78,66,85,83
08001D96  2D2D 2D2D 
08001D9A  2043 414E 
08001D9E  4255 53   
08001DA1  2054 6573 3336          dc.b      32,84,101,115,116,32,45,45,45,45,13,10,0
08001DA5  7420 2D2D 
08001DA9  2D2D 0D0A 
08001DAD  00        
                    3337   @canbus~1_4:
08001DAE  0D0A 00   3338          dc.b      13,10,0
                    3339          section   data
08001DB2            3340                   align
                    3341   
                    3342   *********************************************************************************************************************************************************
                    3343   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    3344   ********************************************************************************************************************************************************
                    3345   
          0800 1DB2 3346   DataStart       equ       *
08001DB2            3347   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08001DB6            3348   __allocp:       ds.l      1                    start of free memory block list
08001DBA            3349   __heap:         ds.l      1                    begin of free memory
                    3350   
                    3351   
                    3352   @vsscanf_bufx:
08001DBE  0800 1EEE 3353          dc.l      @vsscanf_buf
                    3354   @vsscanf_1:
08001DC2  0A00      3355          dc.b      10,0
                    3356   __ctype:
08001DC4  0040 4040 3357          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08001DC8  4040 4040 
08001DCC  4040 5050 
08001DD0  5050 50   
08001DD3  4040 4040 3358          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08001DD7  4040 4040 
08001DDB  4040 4040 
08001DDF  4040 40   
08001DE2  4040 40D0 3359          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08001DE6  A0A0 A0A0 
08001DEA  A0A0 A0A0 
08001DEE  A0A0 A0A0 3360          dc.b      160,160,160,160,160,160,160,140,140,140,140
08001DF2  A0A0 A08C 
08001DF6  8C8C 8C   
08001DF9  8C8C 8C8C 3361          dc.b      140,140,140,140,140,140,160,160,160,160,160
08001DFD  8C8C A0A0 
08001E01  A0A0 A0   
08001E04  A0A0 8A8A 3362          dc.b      160,160,138,138,138,138,138,138,130,130,130
08001E08  8A8A 8A8A 
08001E0C  8282 82   
08001E0F  8282 8282 3363          dc.b      130,130,130,130,130,130,130,130,130,130,130
08001E13  8282 8282 
08001E17  8282 82   
08001E1A  8282 8282 3364          dc.b      130,130,130,130,130,130,160,160,160,160,160
08001E1E  8282 A0A0 
08001E22  A0A0 A0   
08001E25  A089 8989 3365          dc.b      160,137,137,137,137,137,137,129,129,129,129
08001E29  8989 8981 
08001E2D  8181 81   
08001E30  8181 8181 3366          dc.b      129,129,129,129,129,129,129,129,129,129,129
08001E34  8181 8181 
08001E38  8181 81   
08001E3B  8181 8181 3367          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
08001E3F  81A0 A0A0 
08001E43  A040 0000 
08001E47  00        
08001E48  0000 0000 3368          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001E4C  0000 0000 
08001E50  0000 0000 
08001E54  0000 0000 
08001E58  0000 0000 
08001E5C  0000      
08001E5E  0000 0000 3369          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001E62  0000 0000 
08001E66  0000 0000 
08001E6A  0000 0000 
08001E6E  0000 0000 
08001E72  0000      
08001E74  0000 0000 3370          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001E78  0000 0000 
08001E7C  0000 0000 
08001E80  0000 0000 
08001E84  0000 0000 
08001E88  0000      
08001E8A  0000 0000 3371          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001E8E  0000 0000 
08001E92  0000 0000 
08001E96  0000 0000 
08001E9A  0000 0000 
08001E9E  0000      
08001EA0  0000 0000 3372          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001EA4  0000 0000 
08001EA8  0000 0000 
08001EAC  0000 0000 
08001EB0  0000 0000 
08001EB4  0000      
08001EB6  0000 0000 3373          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08001EBA  0000 0000 
08001EBE  0000 0000 
08001EC2  0000 00   
                    3374   @itoa_1:
08001EC6  2D32 3134 3375          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08001ECA  3734 3833 
08001ECE  3634 3800 
                    3376          section   bss
08001ED2            3377                   align
                    3378   
          0800 1ED2 3379   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 0120 3380   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    3381   
                    3382   *********************************************************************************************************
                    3383   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    3384   *********************************************************************************************************
          0800 1ED2 3385   BssStart       equ       *
                    3386   
                    3387   _i:
08001ED2            3388          ds.b      4
                    3389   _x:
08001ED6            3390          ds.b      4
                    3391   _y:
08001EDA            3392          ds.b      4
                    3393   _z:
08001EDE            3394          ds.b      4
                    3395   _PortA_Count:
08001EE2            3396          ds.b      4
                    3397   _Timer1Count:
08001EE6            3398          ds.b      1
                    3399   _Timer2Count:
08001EE8            3400          ds.b      1
                    3401   _Timer3Count:
08001EEA            3402          ds.b      1
                    3403   _Timer4Count:
08001EEC            3404          ds.b      1
                    3405   @vsscanf_buf:
08001EEE            3406          ds.b      80
                    3407          section   heap
08001F3E            3408                  align
                    3409   
          0800 1F3E 3410   BssEnd         equ       *
          0000 006C 3411   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    3412   
                    3413   *********************************************************************************************************
                    3414   * Section for Heap
                    3415   *********************************************************************************************************
                    3416   
          0800 1F3E 3417   heap           equ       *
08001F3E            3418                  align
          0800 0000

Assembly errors: 0
